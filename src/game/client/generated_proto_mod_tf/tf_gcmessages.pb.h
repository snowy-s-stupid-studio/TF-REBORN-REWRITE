// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf_gcmessages.proto

#ifndef PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED

// VALVE - Disable some warnings that this code generates, but we wish to leave on in our projects
#if _MSC_VER >= 1300
#pragma warning(push)
#pragma warning(disable : 4530)        // warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4244)        // warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)        // warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)        // warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)        // warning C4127: conditional expression is constant
#pragma warning(disable : 4100)        // warning C4100: 'op' : unreferenced formal parameter
#pragma warning(disable : 4512)        // warning C4512: assignment operator could not be generated
#endif // _MSC_VER
#if _GNUC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _GNUC
// VALVE

// VALVE - Disable some warnings that this code generates, but we wish to leave on in our projects
#if _MSC_VER >= 1300
#pragma warning(push)
#pragma warning(disable : 4530)        // warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4244)        // warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)        // warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)        // warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)        // warning C4127: conditional expression is constant
#pragma warning(disable : 4100)        // warning C4100: 'op' : unreferenced formal parameter
#pragma warning(disable : 4512)        // warning C4512: assignment operator could not be generated
#endif // _MSC_VER
#if _GNUC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _GNUC
// VALVE

// VALVE - Disable some warnings that this code generates, but we wish to leave on in our projects
#if _MSC_VER >= 1300
#pragma warning(push)
#pragma warning(disable : 4530)        // warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4244)        // warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)        // warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)        // warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)        // warning C4127: conditional expression is constant
#pragma warning(disable : 4100)        // warning C4100: 'op' : unreferenced formal parameter
#pragma warning(disable : 4512)        // warning C4512: assignment operator could not be generated
#endif // _MSC_VER
#if _GNUC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _GNUC
// VALVE

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "base_gcmessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

class CMsgTFGoldenWrenchBroadcast;
class CMsgTFSaxxyBroadcast;
class CMsgGCTFSpecificItemBroadcast;
class CMsgTFWorldStatus;
class CSOTFDuelSummary;
class CSOTFMapContribution;
class CMsgTFFreeTrialChooseMostHelpfulFriend;
class CMsgTFRequestTF2Friends;
class CMsgTFRequestTF2FriendsResponse;
class CSOTFPlayerInfo;
class CMsgTFThankedBySomeone;
class CMsgTFThankedSomeone;
class CMsgTFFreeTrialConvertedToPremium;
class CMsgSaxxyAwarded;
class CMsgReplaySubmitContestEntry;
class CMsgReplaySubmitContestEntryResponse;
class CReplayCachedContestData;
class CMsgTFCoaching_AddToCoaches;
class CMsgTFCoaching_RemoveFromCoaches;
class CMsgTFCoaching_FindCoach;
class CMsgTFCoaching_FindCoachResponse;
class CMsgTFCoaching_AskCoach;
class CMsgTFCoaching_AskCoachResponse;
class CMsgTFCoaching_CoachJoinGame;
class CMsgTFCoaching_CoachJoining;
class CMsgTFCoaching_CoachJoined;
class CMsgTFCoaching_LikeCurrentCoach;
class CMsgTFCoaching_RemoveCurrentCoach;
class CMsgTFQuickplay_ScoreServers;
class CMsgTFQuickplay_ScoreServers_ServerInfo;
class CMsgTFQuickplay_ScoreServersResponse;
class CMsgTFQuickplay_ScoreServersResponse_ServerInfo;
class CMsgTFQuickplay_PlayerJoining;
class CMsgGC_GameServer_LevelInfo;
class CMsgGC_GameServer_AuthChallenge;
class CMsgGC_GameServer_AuthResult;
class CMsgGC_GameServer_AuthChallengeResponse;
class CMsgGC_GameServer_CreateIdentity;
class CMsgGC_GameServer_CreateIdentityResponse;
class CMsgGC_GameServer_List;
class CMsgGC_GameServer_ListResponse;
class CMsgGC_GameServer_ListResponse_GameServerIdentity;
class CMsgGC_GameServer_ResetIdentity;
class CMsgGC_GameServer_ResetIdentityResponse;
class CMsgGC_GameServer_AckPolicy;
class CMsgGC_GameServer_AckPolicyResponse;
class CMsgGC_Client_UseServerModificationItem;
class CMsgGC_Client_UseServerModificationItem_Response;
class CMsgGC_GameServer_UseServerModificationItem;
class CMsgGC_GameServer_UseServerModificationItem_Response;
class CMsgGC_GameServer_ServerModificationItemExpired;
class CMsgGC_GameServer_ServerModificationItem;
class CMsgGC_Halloween_ReservedItem;
class CMsgGC_Halloween_GrantItem;
class CMsgGC_Halloween_GrantItemResponse;
class CMsgGC_Halloween_ItemClaimed;
class CMsgGC_PickupItemEligibility_Query;
class CMsgGC_PickupItemEligibility_QueryResponse;
class CSOTFPartyMember;
class CSOTFPartyMember_Activity;
class TFPendingPartyMember;
class TFSyncedMMUIState;
class CTFGroupMatchCriteriaProto;
class CTFCasualMatchCriteria;
class CTFPerPlayerMatchCriteriaProto;
class CTFPartyOptions;
class CMsgPartySetOptions;
class CMsgPartySetOptionsResponse;
class CMsgPartyQueueForMatch;
class CMsgPartyQueueForMatchResponse;
class CMsgPartyQueueForStandby;
class CMsgPartyQueueForStandbyResponse;
class CMsgPartyRemoveFromQueue;
class CMsgPartyRemoveFromQueueResponse;
class CMsgPartyRemoveFromStandbyQueue;
class CMsgPartyRemoveFromStandbyQueueResponse;
class CMsgPartyInvitePlayer;
class CMsgPartyRequestJoinPlayer;
class CMsgPartyClearPendingPlayer;
class CMsgPartyMMError;
class CMsgPartyClearPendingPlayerResponse;
class CMsgPartyClearOtherPartyRequest;
class CMsgPartyClearOtherPartyRequestResponse;
class CMsgPartyPromoteToLeader;
class CMsgPartyKickMember;
class CMsgPartySendChat;
class CMsgPartyChatMsg;
class CSOTFParty;
class CSOTFParty_QueueEntry;
class CSOTFPartyInvite;
class CSOTFPartyInvite_PartyMember;
class CTFLobbyPlayerProto;
class CTFLobbyInviteProto;
class CSOTFGameServerLobby;
class CMsgExitMatchmaking;
class CMsgAcceptLobbyInvite;
class CMsgAcceptLobbyInviteReply;
class CMsgMatchmakingSearchCountRequest;
class CMsgMatchmakingSearchCountResponse;
class CMsgKickedFromMatchmakingQueue;
class CMsgGameServerMatchmakingStatus;
class CMsgGameServerMatchmakingStatus_Player;
class CMsgMatchmakingProgress;
class CMsgMvMVictoryInfo;
class CMsgMvMVictoryInfo_Item;
class CMsgMvMVictoryInfo_Player;
class CGCMsgTFHelloResponse;
class CGCMsgTFSync;
class CGCMsgTFSyncEx;
class CMsgMvMVictory;
class CMsgMvMVictory_Player;
class CMsgMvMMannUpVictoryReply;
class CMsgGameServerKickingLobby;
class CMsgGameServerKickingLobbyResponse;
class CMsgLeaveGameAndPrepareToJoinParty;
class CMsgPlayerLeftMatch;
class CMsgPlayerLeftMatchResponse;
class CMsgProcessMatchVoteKick;
class CMsgProcessMatchVoteKick_Vote;
class CMsgProcessMatchVoteKickResponse;
class CMsgHalloween_ServerBossEvent;
class CMsgHalloween_Merasmus2012;
class CMsgUpdateHalloweenMerasmusLootLevel;
class CMsgUpdateHalloweenMerasmusLootLevel_Player;
class CAttribute_String;
class CAttribute_DynamicRecipeComponent;
class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT;
class CAttribute_ItemSlotCriteria;
class CMsgSetItemSlotAttribute;
class CSOWarData;
class CGCMsgGC_War_IndividualUpdate;
class CGCMsgGC_War_JoinWar;
class CGCMsgGC_War_RequestGlobalStats;
class CGCMsgGC_War_GlobalStatsResponse;
class CGCMsgGC_War_GlobalStatsResponse_SideScore;
class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate;
class CAttribute_WorldItemPlacement;
class CGCMsg_WorldItemPlacement_Update;
class CMsgAcknowledgeXP;
class CMsgTFXPSource;
class CMsgTFXPSourceBreakdown;
class CMsgTFClientInit;
class CMsgGCNotification;
class CMsgGCNotificationQueue;
class CMsgNotificationAcknowledge;
class CMsgNotificationAcknowledgeReply;
class CMsgGC_Match_Result;
class CMsgGC_Match_Result_Player;
class CMsgGC_Match_ResultResponse;
class CEconItemPreviewDataBlock;
class CMsgGC_Client2GCEconPreviewDataBlockRequest;
class CMsgGC_Client2GCEconPreviewDataBlockResponse;
class CSOTFLadderPlayerStats;
class CSOTFRatingData;
class CMsgGC_TFVoteKickPlayerRequest;
class CMsgGC_VoteKickPlayerRequestResponse;
class CMsgGC_DailyCompetitiveStatsRollup;
class CMsgGC_DailyCompetitiveStatsRollup_Response;
class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry;
class CMsgGC_ReportPlayer;
class CSOTFMatchResultPlayerStats;
class CMsgGCRequestMatchMakerStats;
class CMsgGCDataCenterPopulation;
class CMsgGCMatchGroupDataCenterPopulation;
class CMsgGCMatchMakerStatsResponse;
class CMsgGCMatchHistoryLoad;
class CMsgGCDataCenterPing_Update;
class CMsgGCDataCenterPing_Update_PingEntry;
class CMsgGC_KickPlayerFromLobby;
class CMsgGCSurveyRequest;
class CMsgGCSurveyResponse;
class CSOQuestMapNode;
class CSOQuest;
class CSOQuestMapRewardPurchase;
class CMsgGCQuestIdentify;
class CMsgGCQuestDevGive;
class CMsgGCQuestNodeTurnIn;
class CMsgGCQuestMapUnlockNode;
class CMsgGCNewMatchForLobbyRequest;
class CMsgGCNewMatchForLobbyResponse;
class CMsgGCChangeMatchPlayerTeamsRequest;
class CMsgGCChangeMatchPlayerTeamsRequest_Member;
class CMsgGCChangeMatchPlayerTeamsResponse;
class CMsgGCQuestComplete_Debug;
class CMsgGCQuestMap_Debug;
class CMsgGCQuestMapPurchaseReward;
class CMsgGCQuestResponse;
class CMsgGCSetDisablePartyQuestProgress;
class CMsgQuestProgressReport;
class CMsgConsumePaintkit;
class CMsgPainkitDevGrant;
class GCQuestStrangeEvent;
class CMsgSDRTicket;
class CMsgAuthorizeServerItemRetrieval;
class CMsgGCToGCSendAccountBannedNotifications;
class CMsgGCToGCSendNotification;

enum CMsgGC_GameServer_CreateIdentityResponse_EStatus {
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure = 0,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany = -1,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs = -2,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created = 1
};
bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(int value);
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
const int CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE = CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), value);
}
inline bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(
    const ::std::string& name, CMsgGC_GameServer_CreateIdentityResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_CreateIdentityResponse_EStatus>(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), name, value);
}
enum CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse = 1,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer = 2,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject = 3,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError = 4,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive = 5
};
bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(int value);
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
const int CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
inline const ::std::string& CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), value);
}
inline bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(
    const ::std::string& name, CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), name, value);
}
enum CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted = 1,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled = 2,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed = 3
};
bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(int value);
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
const int CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
inline const ::std::string& CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), value);
}
inline bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(
    const ::std::string& name, CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), name, value);
}
enum TFPendingPartyMember_EType {
  TFPendingPartyMember_EType_Invited = 0,
  TFPendingPartyMember_EType_RequestedToJoin = 1
};
bool TFPendingPartyMember_EType_IsValid(int value);
const TFPendingPartyMember_EType TFPendingPartyMember_EType_EType_MIN = TFPendingPartyMember_EType_Invited;
const TFPendingPartyMember_EType TFPendingPartyMember_EType_EType_MAX = TFPendingPartyMember_EType_RequestedToJoin;
const int TFPendingPartyMember_EType_EType_ARRAYSIZE = TFPendingPartyMember_EType_EType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFPendingPartyMember_EType_descriptor();
inline const ::std::string& TFPendingPartyMember_EType_Name(TFPendingPartyMember_EType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFPendingPartyMember_EType_descriptor(), value);
}
inline bool TFPendingPartyMember_EType_Parse(
    const ::std::string& name, TFPendingPartyMember_EType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFPendingPartyMember_EType>(
    TFPendingPartyMember_EType_descriptor(), name, value);
}
enum CMsgPartyMMError_Type {
  CMsgPartyMMError_Type_QUEUE_KICK_NO_PING = 1,
  CMsgPartyMMError_Type_QUEUE_KICK_AUTH = 2
};
bool CMsgPartyMMError_Type_IsValid(int value);
const CMsgPartyMMError_Type CMsgPartyMMError_Type_Type_MIN = CMsgPartyMMError_Type_QUEUE_KICK_NO_PING;
const CMsgPartyMMError_Type CMsgPartyMMError_Type_Type_MAX = CMsgPartyMMError_Type_QUEUE_KICK_AUTH;
const int CMsgPartyMMError_Type_Type_ARRAYSIZE = CMsgPartyMMError_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPartyMMError_Type_descriptor();
inline const ::std::string& CMsgPartyMMError_Type_Name(CMsgPartyMMError_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPartyMMError_Type_descriptor(), value);
}
inline bool CMsgPartyMMError_Type_Parse(
    const ::std::string& name, CMsgPartyMMError_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPartyMMError_Type>(
    CMsgPartyMMError_Type_descriptor(), name, value);
}
enum CSOTFPartyInvite_Type {
  CSOTFPartyInvite_Type_PENDING_INVITE = 1,
  CSOTFPartyInvite_Type_PENDING_JOIN_REQUEST = 2
};
bool CSOTFPartyInvite_Type_IsValid(int value);
const CSOTFPartyInvite_Type CSOTFPartyInvite_Type_Type_MIN = CSOTFPartyInvite_Type_PENDING_INVITE;
const CSOTFPartyInvite_Type CSOTFPartyInvite_Type_Type_MAX = CSOTFPartyInvite_Type_PENDING_JOIN_REQUEST;
const int CSOTFPartyInvite_Type_Type_ARRAYSIZE = CSOTFPartyInvite_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFPartyInvite_Type_descriptor();
inline const ::std::string& CSOTFPartyInvite_Type_Name(CSOTFPartyInvite_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFPartyInvite_Type_descriptor(), value);
}
inline bool CSOTFPartyInvite_Type_Parse(
    const ::std::string& name, CSOTFPartyInvite_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFPartyInvite_Type>(
    CSOTFPartyInvite_Type_descriptor(), name, value);
}
enum CTFLobbyPlayerProto_ConnectState {
  CTFLobbyPlayerProto_ConnectState_INVALID = 0,
  CTFLobbyPlayerProto_ConnectState_RESERVATION_PENDING = 1,
  CTFLobbyPlayerProto_ConnectState_RESERVED = 2,
  CTFLobbyPlayerProto_ConnectState_CONNECTED = 3,
  CTFLobbyPlayerProto_ConnectState_DISCONNECTED = 5
};
bool CTFLobbyPlayerProto_ConnectState_IsValid(int value);
const CTFLobbyPlayerProto_ConnectState CTFLobbyPlayerProto_ConnectState_ConnectState_MIN = CTFLobbyPlayerProto_ConnectState_INVALID;
const CTFLobbyPlayerProto_ConnectState CTFLobbyPlayerProto_ConnectState_ConnectState_MAX = CTFLobbyPlayerProto_ConnectState_DISCONNECTED;
const int CTFLobbyPlayerProto_ConnectState_ConnectState_ARRAYSIZE = CTFLobbyPlayerProto_ConnectState_ConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTFLobbyPlayerProto_ConnectState_descriptor();
inline const ::std::string& CTFLobbyPlayerProto_ConnectState_Name(CTFLobbyPlayerProto_ConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTFLobbyPlayerProto_ConnectState_descriptor(), value);
}
inline bool CTFLobbyPlayerProto_ConnectState_Parse(
    const ::std::string& name, CTFLobbyPlayerProto_ConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTFLobbyPlayerProto_ConnectState>(
    CTFLobbyPlayerProto_ConnectState_descriptor(), name, value);
}
enum CTFLobbyPlayerProto_Type {
  CTFLobbyPlayerProto_Type_INVALID_PLAYER = 0,
  CTFLobbyPlayerProto_Type_MATCH_PLAYER = 1,
  CTFLobbyPlayerProto_Type_STANDBY_PLAYER = 2,
  CTFLobbyPlayerProto_Type_OBSERVING_PLAYER = 3
};
bool CTFLobbyPlayerProto_Type_IsValid(int value);
const CTFLobbyPlayerProto_Type CTFLobbyPlayerProto_Type_Type_MIN = CTFLobbyPlayerProto_Type_INVALID_PLAYER;
const CTFLobbyPlayerProto_Type CTFLobbyPlayerProto_Type_Type_MAX = CTFLobbyPlayerProto_Type_OBSERVING_PLAYER;
const int CTFLobbyPlayerProto_Type_Type_ARRAYSIZE = CTFLobbyPlayerProto_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTFLobbyPlayerProto_Type_descriptor();
inline const ::std::string& CTFLobbyPlayerProto_Type_Name(CTFLobbyPlayerProto_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTFLobbyPlayerProto_Type_descriptor(), value);
}
inline bool CTFLobbyPlayerProto_Type_Parse(
    const ::std::string& name, CTFLobbyPlayerProto_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTFLobbyPlayerProto_Type>(
    CTFLobbyPlayerProto_Type_descriptor(), name, value);
}
enum CSOTFGameServerLobby_State {
  CSOTFGameServerLobby_State_UNKNOWN = 0,
  CSOTFGameServerLobby_State_SERVERSETUP = 1,
  CSOTFGameServerLobby_State_RUN = 2
};
bool CSOTFGameServerLobby_State_IsValid(int value);
const CSOTFGameServerLobby_State CSOTFGameServerLobby_State_State_MIN = CSOTFGameServerLobby_State_UNKNOWN;
const CSOTFGameServerLobby_State CSOTFGameServerLobby_State_State_MAX = CSOTFGameServerLobby_State_RUN;
const int CSOTFGameServerLobby_State_State_ARRAYSIZE = CSOTFGameServerLobby_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFGameServerLobby_State_descriptor();
inline const ::std::string& CSOTFGameServerLobby_State_Name(CSOTFGameServerLobby_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFGameServerLobby_State_descriptor(), value);
}
inline bool CSOTFGameServerLobby_State_Parse(
    const ::std::string& name, CSOTFGameServerLobby_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFGameServerLobby_State>(
    CSOTFGameServerLobby_State_descriptor(), name, value);
}
enum CSOTFGameServerLobby_WarMatch {
  CSOTFGameServerLobby_WarMatch_NOPE = 0,
  CSOTFGameServerLobby_WarMatch_INVADERS_ARE_PYRO = 1,
  CSOTFGameServerLobby_WarMatch_INVADERS_ARE_HEAVY = 2
};
bool CSOTFGameServerLobby_WarMatch_IsValid(int value);
const CSOTFGameServerLobby_WarMatch CSOTFGameServerLobby_WarMatch_WarMatch_MIN = CSOTFGameServerLobby_WarMatch_NOPE;
const CSOTFGameServerLobby_WarMatch CSOTFGameServerLobby_WarMatch_WarMatch_MAX = CSOTFGameServerLobby_WarMatch_INVADERS_ARE_HEAVY;
const int CSOTFGameServerLobby_WarMatch_WarMatch_ARRAYSIZE = CSOTFGameServerLobby_WarMatch_WarMatch_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFGameServerLobby_WarMatch_descriptor();
inline const ::std::string& CSOTFGameServerLobby_WarMatch_Name(CSOTFGameServerLobby_WarMatch value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFGameServerLobby_WarMatch_descriptor(), value);
}
inline bool CSOTFGameServerLobby_WarMatch_Parse(
    const ::std::string& name, CSOTFGameServerLobby_WarMatch* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFGameServerLobby_WarMatch>(
    CSOTFGameServerLobby_WarMatch_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_PlayerConnectState {
  CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID = 0,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED = 1,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED = 2
};
bool CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(int value);
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
const int CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE = CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_PlayerConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_PlayerConnectState>(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_Event {
  CMsgGameServerMatchmakingStatus_Event_None = 0,
  CMsgGameServerMatchmakingStatus_Event_MvMVictory = 1,
  CMsgGameServerMatchmakingStatus_Event_MvMDefeat = 2,
  CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers = 3
};
bool CMsgGameServerMatchmakingStatus_Event_IsValid(int value);
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MIN = CMsgGameServerMatchmakingStatus_Event_None;
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MAX = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
const int CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE = CMsgGameServerMatchmakingStatus_Event_Event_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_Event_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_Event_Name(CMsgGameServerMatchmakingStatus_Event value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_Event_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_Event>(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), name, value);
}
enum CMsgMvMVictoryInfo_GrantReason {
  CMsgMvMVictoryInfo_GrantReason_INVALID = 0,
  CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED = 1,
  CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS = 2,
  CMsgMvMVictoryInfo_GrantReason_MANN_UP = 3,
  CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB = 4
};
bool CMsgMvMVictoryInfo_GrantReason_IsValid(int value);
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN = CMsgMvMVictoryInfo_GrantReason_INVALID;
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
const int CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE = CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgMvMVictoryInfo_GrantReason_descriptor();
inline const ::std::string& CMsgMvMVictoryInfo_GrantReason_Name(CMsgMvMVictoryInfo_GrantReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), value);
}
inline bool CMsgMvMVictoryInfo_GrantReason_Parse(
    const ::std::string& name, CMsgMvMVictoryInfo_GrantReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgMvMVictoryInfo_GrantReason>(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), name, value);
}
enum CMsgTFXPSource_XPSourceType {
  CMsgTFXPSource_XPSourceType_SOURCE_SCORE = 0,
  CMsgTFXPSource_XPSourceType_SOURCE_OBJECTIVE_BONUS = 1,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPLETED_MATCH = 2,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_ABANDON = 3,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_WIN = 4,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_LOSS = 5,
  CMsgTFXPSource_XPSourceType_SOURCE_AUTOBALANCE_BONUS = 6,
  CMsgTFXPSource_XPSourceType_SOURCE_PRESTIGE_BONUS = 7
};
bool CMsgTFXPSource_XPSourceType_IsValid(int value);
const CMsgTFXPSource_XPSourceType CMsgTFXPSource_XPSourceType_XPSourceType_MIN = CMsgTFXPSource_XPSourceType_SOURCE_SCORE;
const CMsgTFXPSource_XPSourceType CMsgTFXPSource_XPSourceType_XPSourceType_MAX = CMsgTFXPSource_XPSourceType_SOURCE_PRESTIGE_BONUS;
const int CMsgTFXPSource_XPSourceType_XPSourceType_ARRAYSIZE = CMsgTFXPSource_XPSourceType_XPSourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgTFXPSource_XPSourceType_descriptor();
inline const ::std::string& CMsgTFXPSource_XPSourceType_Name(CMsgTFXPSource_XPSourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgTFXPSource_XPSourceType_descriptor(), value);
}
inline bool CMsgTFXPSource_XPSourceType_Parse(
    const ::std::string& name, CMsgTFXPSource_XPSourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgTFXPSource_XPSourceType>(
    CMsgTFXPSource_XPSourceType_descriptor(), name, value);
}
enum CMsgGCNotification_NotificationType {
  CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED = 0,
  CMsgGCNotification_NotificationType_NOTIFICATION_CUSTOM_STRING = 1,
  CMsgGCNotification_NotificationType_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS = 2,
  CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED = 3,
  CMsgGCNotification_NotificationType_NOTIFICATION_SUPPORT_MESSAGE = 4,
  CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES = 5
};
bool CMsgGCNotification_NotificationType_IsValid(int value);
const CMsgGCNotification_NotificationType CMsgGCNotification_NotificationType_NotificationType_MIN = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED;
const CMsgGCNotification_NotificationType CMsgGCNotification_NotificationType_NotificationType_MAX = CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES;
const int CMsgGCNotification_NotificationType_NotificationType_ARRAYSIZE = CMsgGCNotification_NotificationType_NotificationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotification_NotificationType_descriptor();
inline const ::std::string& CMsgGCNotification_NotificationType_Name(CMsgGCNotification_NotificationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotification_NotificationType_descriptor(), value);
}
inline bool CMsgGCNotification_NotificationType_Parse(
    const ::std::string& name, CMsgGCNotification_NotificationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotification_NotificationType>(
    CMsgGCNotification_NotificationType_descriptor(), name, value);
}
enum CMsgGC_Match_Result_Status {
  CMsgGC_Match_Result_Status_MATCH_SUCCEEDED = 0,
  CMsgGC_Match_Result_Status_MATCH_FAILED_GC = 1,
  CMsgGC_Match_Result_Status_MATCH_FAILED_TRUSTED = 2,
  CMsgGC_Match_Result_Status_MATCH_FAILED_ABANDON = 3,
  CMsgGC_Match_Result_Status_MATCH_FAILED_UNKNOWN = 5,
  CMsgGC_Match_Result_Status_MATCH_FAILED_TIMEOUT = 6,
  CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON = 7
};
bool CMsgGC_Match_Result_Status_IsValid(int value);
const CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status_Status_MIN = CMsgGC_Match_Result_Status_MATCH_SUCCEEDED;
const CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status_Status_MAX = CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON;
const int CMsgGC_Match_Result_Status_Status_ARRAYSIZE = CMsgGC_Match_Result_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Match_Result_Status_descriptor();
inline const ::std::string& CMsgGC_Match_Result_Status_Name(CMsgGC_Match_Result_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Match_Result_Status_descriptor(), value);
}
inline bool CMsgGC_Match_Result_Status_Parse(
    const ::std::string& name, CMsgGC_Match_Result_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Match_Result_Status>(
    CMsgGC_Match_Result_Status_descriptor(), name, value);
}
enum CMsgGC_ReportPlayer_EReason {
  CMsgGC_ReportPlayer_EReason_kReason_INVALID = 0,
  CMsgGC_ReportPlayer_EReason_kReason_CHEATING = 1,
  CMsgGC_ReportPlayer_EReason_kReason_IDLE = 2,
  CMsgGC_ReportPlayer_EReason_kReason_HARASSMENT = 3,
  CMsgGC_ReportPlayer_EReason_kReason_GRIEFING = 4,
  CMsgGC_ReportPlayer_EReason_kReason_COUNT = 5
};
bool CMsgGC_ReportPlayer_EReason_IsValid(int value);
const CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer_EReason_EReason_MIN = CMsgGC_ReportPlayer_EReason_kReason_INVALID;
const CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer_EReason_EReason_MAX = CMsgGC_ReportPlayer_EReason_kReason_COUNT;
const int CMsgGC_ReportPlayer_EReason_EReason_ARRAYSIZE = CMsgGC_ReportPlayer_EReason_EReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_ReportPlayer_EReason_descriptor();
inline const ::std::string& CMsgGC_ReportPlayer_EReason_Name(CMsgGC_ReportPlayer_EReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_ReportPlayer_EReason_descriptor(), value);
}
inline bool CMsgGC_ReportPlayer_EReason_Parse(
    const ::std::string& name, CMsgGC_ReportPlayer_EReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_ReportPlayer_EReason>(
    CMsgGC_ReportPlayer_EReason_descriptor(), name, value);
}
enum CMsgGCDataCenterPing_Update_Status {
  CMsgGCDataCenterPing_Update_Status_Invalid = 0,
  CMsgGCDataCenterPing_Update_Status_Normal = 1,
  CMsgGCDataCenterPing_Update_Status_Unreachable = 2,
  CMsgGCDataCenterPing_Update_Status_FallbackToDCPing = 3
};
bool CMsgGCDataCenterPing_Update_Status_IsValid(int value);
const CMsgGCDataCenterPing_Update_Status CMsgGCDataCenterPing_Update_Status_Status_MIN = CMsgGCDataCenterPing_Update_Status_Invalid;
const CMsgGCDataCenterPing_Update_Status CMsgGCDataCenterPing_Update_Status_Status_MAX = CMsgGCDataCenterPing_Update_Status_FallbackToDCPing;
const int CMsgGCDataCenterPing_Update_Status_Status_ARRAYSIZE = CMsgGCDataCenterPing_Update_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCDataCenterPing_Update_Status_descriptor();
inline const ::std::string& CMsgGCDataCenterPing_Update_Status_Name(CMsgGCDataCenterPing_Update_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCDataCenterPing_Update_Status_descriptor(), value);
}
inline bool CMsgGCDataCenterPing_Update_Status_Parse(
    const ::std::string& name, CMsgGCDataCenterPing_Update_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCDataCenterPing_Update_Status>(
    CMsgGCDataCenterPing_Update_Status_descriptor(), name, value);
}
enum ETFGCMsg {
  k_EMsgGCReportWarKill = 5001,
  k_EMsgGCKickPlayer_DEPRECATED = 5020,
  k_EMsgGCStartedTraining_DEPRECATED = 5021,
  k_EMsgGCFreeTrial_ChooseMostHelpfulFriend = 5022,
  k_EMsgGCRequestTF2Friends = 5023,
  k_EMsgGCRequestTF2FriendsResponse = 5024,
  k_EMsgGCReplay_SubmitContestEntry = 5026,
  k_EMsgGCReplay_SubmitContestEntryResponse = 5027,
  k_EMsgGCSaxxy_Awarded = 5029,
  k_EMsgGCFreeTrial_ThankedBySomeone = 5028,
  k_EMsgGCFreeTrial_ThankedSomeone = 5030,
  k_EMsgGCFreeTrial_ConvertedToPremium = 5031,
  k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED = 5032,
  k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED = 5033,
  k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED = 5034,
  k_EMsgGCCoaching_AddToCoaches = 5200,
  k_EMsgGCCoaching_AddToCoachesResponse = 5201,
  k_EMsgGCCoaching_RemoveFromCoaches = 5202,
  k_EMsgGCCoaching_RemoveFromCoachesResponse = 5203,
  k_EMsgGCCoaching_FindCoach = 5204,
  k_EMsgGCCoaching_FindCoachResponse = 5205,
  k_EMsgGCCoaching_AskCoach = 5206,
  k_EMsgGCCoaching_AskCoachResponse = 5207,
  k_EMsgGCCoaching_CoachJoinGame = 5208,
  k_EMsgGCCoaching_CoachJoining = 5209,
  k_EMsgGCCoaching_CoachJoined = 5210,
  k_EMsgGCCoaching_LikeCurrentCoach = 5211,
  k_EMsgGCCoaching_RemoveCurrentCoach = 5212,
  k_EMsgGCCoaching_AlreadyRatedCoach = 5213,
  k_EMsgGC_Duel_Request = 5500,
  k_EMsgGC_Duel_Response = 5501,
  k_EMsgGC_Duel_Results = 5502,
  k_EMsgGC_Duel_Status = 5503,
  k_EMsgGC_Halloween_ReservedItem_DEPRECATED = 5600,
  k_EMsgGC_Halloween_GrantItem_DEPRECATED = 5601,
  k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED = 5604,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED = 5605,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED = 5606,
  k_EMsgGC_Halloween_ReservedItem = 5607,
  k_EMsgGC_Halloween_GrantItem = 5608,
  k_EMsgGC_Halloween_GrantItemResponse = 5609,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2 = 5610,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2 = 5611,
  k_EMsgGC_Halloween_ServerBossEvent = 5612,
  k_EMsgGC_Halloween_Merasmus2012 = 5613,
  k_EMsgGC_Halloween_UpdateMerasmusLootLevel = 5614,
  k_EMsgGC_GameServer_LevelInfo = 5700,
  k_EMsgGC_GameServer_AuthChallenge = 5701,
  k_EMsgGC_GameServer_AuthChallengeResponse = 5702,
  k_EMsgGC_GameServer_CreateIdentity = 5703,
  k_EMsgGC_GameServer_CreateIdentityResponse = 5704,
  k_EMsgGC_GameServer_List = 5705,
  k_EMsgGC_GameServer_ListResponse = 5706,
  k_EMsgGC_GameServer_AuthResult = 5707,
  k_EMsgGC_GameServer_ResetIdentity = 5708,
  k_EMsgGC_GameServer_ResetIdentityResponse = 5709,
  k_EMsgGC_Client_UseServerModificationItem = 5710,
  k_EMsgGC_Client_UseServerModificationItem_Response = 5711,
  k_EMsgGC_GameServer_UseServerModificationItem = 5712,
  k_EMsgGC_GameServer_UseServerModificationItem_Response = 5713,
  k_EMsgGC_GameServer_ServerModificationItemExpired = 5714,
  k_EMsgGC_GameServer_ModificationItemState = 5715,
  k_EMsgGC_GameServer_AckPolicy = 5716,
  k_EMsgGC_GameServer_AckPolicyResponse = 5717,
  k_EMsgGC_QP_ScoreServers = 5800,
  k_EMsgGC_QP_ScoreServersResponse = 5801,
  k_EMsgGC_QP_PlayerJoining = 5802,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED = 6000,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2 = 6001,
  k_EMsgGC_IncrementKillCountAttribute_DEPRECATED = 6100,
  k_EMsgGC_IncrementKillCountResponse_DEPRECATED = 6101,
  k_EMsgGCAbandonCurrentGame = 6235,
  k_EMsgForceSOCacheResend = 6237,
  k_EMsgGCRequestChatChannelList = 6260,
  k_EMsgGCRequestChatChannelListResponse = 6261,
  k_EMsgGCReadyUp = 6270,
  k_EMsgGCKickedFromMatchmakingQueue = 6271,
  k_EMsgGCLeaverDetected = 6272,
  k_EMsgGCLeaverDetectedResponse = 6287,
  k_EMsgGCExitMatchmaking = 6289,
  k_EMsgGCMatchmakingProgress = 6293,
  k_EMsgGCMvMVictoryInfo = 6294,
  k_EMsgGCGameServerMatchmakingStatus = 6295,
  k_EMsgGCMvMVictory = 6297,
  k_EMsgGCMvMVictoryReply = 6298,
  k_EMsgGCGameServerKickingLobby = 6299,
  k_EMsgGCLeaveGameAndPrepareToJoinParty = 6300,
  k_EMsgGC_UpdatePeriodicEvent = 6400,
  k_EMsgGC_DuckLeaderboard_IndividualUpdate = 6401,
  k_EMsgGC_Client2GCEconPreviewDataBlockRequest = 6402,
  k_EMsgGC_Client2GCEconPreviewDataBlockResponse = 6403,
  k_EMsgGC_ClientVerificationChallenge = 6500,
  k_EMsgGC_ClientVerificationChallengeResponse = 6501,
  k_EMsgGC_ClientVerificationVerboseResponse = 6502,
  k_EMsgGC_ClientSetItemSlotAttribute = 6503,
  k_EMsgGC_War_IndividualUpdate = 6505,
  k_EMsgGC_War_JoinWar = 6506,
  k_EMsgGC_War_RequestGlobalStats = 6507,
  k_EMsgGC_War_GlobalStatsResponse = 6508,
  k_EMsgGC_WorldItemPlacement_Attribute = 6510,
  k_EMsgGC_WorldItemPlacement_Update = 6511,
  k_EMsgGC_Match_Result = 6512,
  k_EMsgGCVoteKickPlayerRequest = 6513,
  k_EMsgGCVoteKickPlayerRequestResponse = 6514,
  k_EMsgGC_DailyCompetitiveStatsRollup = 6516,
  k_EMsgGC_DailyCompetitiveStatsRollup_Response = 6517,
  k_EMsgGC_WorldStatusBroadcast = 6518,
  k_EMsgGC_ReportPlayer = 6519,
  k_EMsgGC_Match_ResultResponse = 6520,
  k_EMsgGCGameServerKickingLobbyResponse = 6521,
  k_EMsgGCPlayerLeftMatch = 6522,
  k_EMsgGCPlayerLeftMatchResponse = 6523,
  k_EMsgGCRequestMatchMakerStats = 6524,
  k_EMsgGCMatchMakerStatsResponse = 6525,
  k_EMsgGCMatchHistoryLoad = 6526,
  k_EMsgGC_AcknowledgeXP = 6527,
  k_EMsgGCDataCenterPing_Update = 6528,
  k_EMsgGC_NotificationAcknowledge = 6529,
  k_EMsgGC_NotificationAcknowledgeReply = 6530,
  k_EMsgGC_KickPlayerFromLobby = 6531,
  k_EMsgGC_SurveyQuestionRequest = 6534,
  k_EMsgGC_SurveyQuestionResponse = 6535,
  k_EMsgGC_TFClientInit = 6536,
  k_EMsgGC_NewMatchForLobbyRequest = 6537,
  k_EMsgGC_NewMatchForLobbyResponse = 6538,
  k_EMsgGC_ChangeMatchPlayerTeamsRequest = 6539,
  k_EMsgGC_ChangeMatchPlayerTeamsResponse = 6540,
  k_EMsgGC_QuestIdentify = 6541,
  k_EMsgGC_QuestDevGive = 6542,
  k_EMsgGCQuestComplete_Debug = 6544,
  k_EMsgGC_QuestMapDebug = 6545,
  k_EMsgGC_QuestMapUnlockNode = 6547,
  k_EMsgGC_QuestMapPurchaseReward = 6549,
  k_EMsgGC_SetDisablePartyQuestProgress = 6550,
  k_EMsgGCQuestProgressReport = 6553,
  k_EMsgGCParty_SetOptions = 6554,
  k_EMsgGCParty_SetOptionsResponse = 6555,
  k_EMsgGCParty_QueueForMatch = 6556,
  k_EMsgGCParty_QueueForMatchResponse = 6557,
  k_EMsgGCParty_RemoveFromQueue = 6558,
  k_EMsgGCParty_RemoveFromQueueResponse = 6559,
  k_EMsgGCParty_InvitePlayer = 6560,
  k_EMsgGCParty_RequestJoinPlayer = 6561,
  k_EMsgGCParty_SendChat = 6562,
  k_EMsgGCParty_ChatMsg = 6563,
  k_EMsgGCQuestNodeTurnIn = 6564,
  k_EMsgGCConsumePaintKit = 6565,
  k_EMsgGC_Painkit_DevGrant = 6566,
  k_EMsgGCParty_QueueForStandby = 6567,
  k_EMsgGCParty_QueueForStandbyResponse = 6568,
  k_EMsgGCParty_RemoveFromStandbyQueue = 6569,
  k_EMsgGCParty_RemoveFromStandbyQueueResponse = 6570,
  k_EMsgGCParty_ClearPendingPlayer = 6571,
  k_EMsgGCParty_ClearPendingPlayerResponse = 6572,
  k_EMsgGCParty_ClearOtherPartyRequest = 6573,
  k_EMsgGCParty_ClearOtherPartyRequestResponse = 6574,
  k_EMsgGCParty_PromoteToLeader = 6575,
  k_EMsgGCParty_KickMember = 6576,
  k_EMsgGCQuestStrangeEvent = 6577,
  k_EMsgGC_AcceptLobbyInvite = 6578,
  k_EMsgGC_AcceptLobbyInviteReply = 6579,
  k_EMsgGC_SDRTicket = 6580,
  k_EMsgGC_ProcessMatchVoteKick = 6581,
  k_EMsgGC_ProcessMatchVoteKickResponse = 6582,
  k_EMsgGCToGC_SendAccountBannedNotifications = 6584,
  k_EMsgGCToGC_SendNotification = 6585,
  k_EMsgGCParty_MMError = 6586,
  k_EMsgGCDev_GrantWarKill = 10001
};
bool ETFGCMsg_IsValid(int value);
const ETFGCMsg ETFGCMsg_MIN = k_EMsgGCReportWarKill;
const ETFGCMsg ETFGCMsg_MAX = k_EMsgGCDev_GrantWarKill;
const int ETFGCMsg_ARRAYSIZE = ETFGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFGCMsg_descriptor();
inline const ::std::string& ETFGCMsg_Name(ETFGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFGCMsg_descriptor(), value);
}
inline bool ETFGCMsg_Parse(
    const ::std::string& name, ETFGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFGCMsg>(
    ETFGCMsg_descriptor(), name, value);
}
enum EServerModificationItemType {
  kGameServerModificationItem_Halloween = 1
};
bool EServerModificationItemType_IsValid(int value);
const EServerModificationItemType EServerModificationItemType_MIN = kGameServerModificationItem_Halloween;
const EServerModificationItemType EServerModificationItemType_MAX = kGameServerModificationItem_Halloween;
const int EServerModificationItemType_ARRAYSIZE = EServerModificationItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerModificationItemType_descriptor();
inline const ::std::string& EServerModificationItemType_Name(EServerModificationItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerModificationItemType_descriptor(), value);
}
inline bool EServerModificationItemType_Parse(
    const ::std::string& name, EServerModificationItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerModificationItemType>(
    EServerModificationItemType_descriptor(), name, value);
}
enum ETFSyncedMMMenuStep {
  k_eTFSyncedMMMenuStep_Invalid = -1,
  k_eTFSyncedMMMenuStep_None = 0,
  k_eTFSyncedMMMenuStep_Configuring_Mode = 1,
  k_eTFSyncedMMMenuStep_MvM_Selecting_Mode = 2,
  k_eTFSyncedMMMenuStep_MvM_Selecting_Tour = 3,
  k_eTFSyncedMMMenuStep_MvM_Selecting_Missions = 4
};
bool ETFSyncedMMMenuStep_IsValid(int value);
const ETFSyncedMMMenuStep ETFSyncedMMMenuStep_MIN = k_eTFSyncedMMMenuStep_Invalid;
const ETFSyncedMMMenuStep ETFSyncedMMMenuStep_MAX = k_eTFSyncedMMMenuStep_MvM_Selecting_Missions;
const int ETFSyncedMMMenuStep_ARRAYSIZE = ETFSyncedMMMenuStep_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFSyncedMMMenuStep_descriptor();
inline const ::std::string& ETFSyncedMMMenuStep_Name(ETFSyncedMMMenuStep value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFSyncedMMMenuStep_descriptor(), value);
}
inline bool ETFSyncedMMMenuStep_Parse(
    const ::std::string& name, ETFSyncedMMMenuStep* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFSyncedMMMenuStep>(
    ETFSyncedMMMenuStep_descriptor(), name, value);
}
enum ETFMatchGroup {
  k_eTFMatchGroup_Invalid = -1,
  k_eTFMatchGroup_MvM_Practice = 0,
  k_eTFMatchGroup_MvM_MannUp = 1,
  k_eTFMatchGroup_First = 0,
  k_eTFMatchGroup_MvM_Default = 0,
  k_eTFMatchGroup_MvM_First = 0,
  k_eTFMatchGroup_MvM_Last = 1,
  k_eTFMatchGroup_Ladder_6v6 = 2,
  k_eTFMatchGroup_Ladder_9v9 = 3,
  k_eTFMatchGroup_Ladder_12v12 = 4,
  k_eTFMatchGroup_Ladder_Default = 2,
  k_eTFMatchGroup_Ladder_First = 2,
  k_eTFMatchGroup_Ladder_Last = 4,
  k_eTFMatchGroup_Casual_6v6 = 5,
  k_eTFMatchGroup_Casual_9v9 = 6,
  k_eTFMatchGroup_Casual_12v12 = 7,
  k_eTFMatchGroup_Casual_Default = 7,
  k_eTFMatchGroup_Casual_First = 5,
  k_eTFMatchGroup_Casual_Last = 7,
  k_eTFMatchGroup_Event_Placeholder = 8,
  k_eTFMatchGroup_Event_Default = 8,
  k_eTFMatchGroup_Event_First = 8,
  k_eTFMatchGroup_Event_Last = 8
};
bool ETFMatchGroup_IsValid(int value);
const ETFMatchGroup ETFMatchGroup_MIN = k_eTFMatchGroup_Invalid;
const ETFMatchGroup ETFMatchGroup_MAX = k_eTFMatchGroup_Event_Placeholder;
const int ETFMatchGroup_ARRAYSIZE = ETFMatchGroup_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFMatchGroup_descriptor();
inline const ::std::string& ETFMatchGroup_Name(ETFMatchGroup value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFMatchGroup_descriptor(), value);
}
inline bool ETFMatchGroup_Parse(
    const ::std::string& name, ETFMatchGroup* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFMatchGroup>(
    ETFMatchGroup_descriptor(), name, value);
}
enum ETFPartyChatType {
  k_eTFPartyChatType_Invalid = 0,
  k_eTFPartyChatType_MemberChat = 1,
  k_eTFPartyChatType_Synthetic_MemberJoin = 1000,
  k_eTFPartyChatType_Synthetic_MemberLeave = 1001,
  k_eTFPartyChatType_Synthetic_SendFailed = 1002,
  k_eTFPartyChatType_Synthetic_MemberOnline = 1003,
  k_eTFPartyChatType_Synthetic_MemberOffline = 1004
};
bool ETFPartyChatType_IsValid(int value);
const ETFPartyChatType ETFPartyChatType_MIN = k_eTFPartyChatType_Invalid;
const ETFPartyChatType ETFPartyChatType_MAX = k_eTFPartyChatType_Synthetic_MemberOffline;
const int ETFPartyChatType_ARRAYSIZE = ETFPartyChatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFPartyChatType_descriptor();
inline const ::std::string& ETFPartyChatType_Name(ETFPartyChatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFPartyChatType_descriptor(), value);
}
inline bool ETFPartyChatType_Parse(
    const ::std::string& name, ETFPartyChatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFPartyChatType>(
    ETFPartyChatType_descriptor(), name, value);
}
enum TF_GC_GameState {
  TF_GC_GAMESTATE_STATE_INIT = 0,
  TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
  TF_GC_GAMESTATE_STRATEGY_TIME = 3,
  TF_GC_GAMESTATE_GAME_IN_PROGRESS = 5,
  TF_GC_GAMESTATE_POST_GAME = 6,
  TF_GC_GAMESTATE_DISCONNECT = 7,
  TF_GC_GAMESTATE_LAST = 8
};
bool TF_GC_GameState_IsValid(int value);
const TF_GC_GameState TF_GC_GameState_MIN = TF_GC_GAMESTATE_STATE_INIT;
const TF_GC_GameState TF_GC_GameState_MAX = TF_GC_GAMESTATE_LAST;
const int TF_GC_GameState_ARRAYSIZE = TF_GC_GameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_GameState_descriptor();
inline const ::std::string& TF_GC_GameState_Name(TF_GC_GameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_GameState_descriptor(), value);
}
inline bool TF_GC_GameState_Parse(
    const ::std::string& name, TF_GC_GameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_GameState>(
    TF_GC_GameState_descriptor(), name, value);
}
enum TF_GC_TEAM {
  TF_GC_TEAM_DEFENDERS = 0,
  TF_GC_TEAM_INVADERS = 1,
  TF_GC_TEAM_BROADCASTER = 2,
  TF_GC_TEAM_SPECTATOR = 3,
  TF_GC_TEAM_PLAYER_POOL = 4,
  TF_GC_TEAM_NOTEAM = 5
};
bool TF_GC_TEAM_IsValid(int value);
const TF_GC_TEAM TF_GC_TEAM_MIN = TF_GC_TEAM_DEFENDERS;
const TF_GC_TEAM TF_GC_TEAM_MAX = TF_GC_TEAM_NOTEAM;
const int TF_GC_TEAM_ARRAYSIZE = TF_GC_TEAM_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_TEAM_descriptor();
inline const ::std::string& TF_GC_TEAM_Name(TF_GC_TEAM value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_TEAM_descriptor(), value);
}
inline bool TF_GC_TEAM_Parse(
    const ::std::string& name, TF_GC_TEAM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_TEAM>(
    TF_GC_TEAM_descriptor(), name, value);
}
enum TFMatchLeaveReason {
  TFMatchLeaveReason_UNSPECIFIED = 0,
  TFMatchLeaveReason_VOTE_KICK = 1,
  TFMatchLeaveReason_IDLE = 2,
  TFMatchLeaveReason_ADMIN_KICK = 3,
  TFMatchLeaveReason_AWOL = 4,
  TFMatchLeaveReason_NO_SHOW = 5,
  TFMatchLeaveReason_GC_REMOVED = 6
};
bool TFMatchLeaveReason_IsValid(int value);
const TFMatchLeaveReason TFMatchLeaveReason_MIN = TFMatchLeaveReason_UNSPECIFIED;
const TFMatchLeaveReason TFMatchLeaveReason_MAX = TFMatchLeaveReason_GC_REMOVED;
const int TFMatchLeaveReason_ARRAYSIZE = TFMatchLeaveReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFMatchLeaveReason_descriptor();
inline const ::std::string& TFMatchLeaveReason_Name(TFMatchLeaveReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFMatchLeaveReason_descriptor(), value);
}
inline bool TFMatchLeaveReason_Parse(
    const ::std::string& name, TFMatchLeaveReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFMatchLeaveReason>(
    TFMatchLeaveReason_descriptor(), name, value);
}
enum TFVoteKickReason {
  TFVoteKickReason_Invalid = -1,
  TFVoteKickReason_Other = 0,
  TFVoteKickReason_Cheating = 1,
  TFVoteKickReason_Idle = 2,
  TFVoteKickReason_Scamming = 3
};
bool TFVoteKickReason_IsValid(int value);
const TFVoteKickReason TFVoteKickReason_MIN = TFVoteKickReason_Invalid;
const TFVoteKickReason TFVoteKickReason_MAX = TFVoteKickReason_Scamming;
const int TFVoteKickReason_ARRAYSIZE = TFVoteKickReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFVoteKickReason_descriptor();
inline const ::std::string& TFVoteKickReason_Name(TFVoteKickReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFVoteKickReason_descriptor(), value);
}
inline bool TFVoteKickReason_Parse(
    const ::std::string& name, TFVoteKickReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFVoteKickReason>(
    TFVoteKickReason_descriptor(), name, value);
}
enum ServerMatchmakingState {
  ServerMatchmakingState_INVALID = 0,
  ServerMatchmakingState_NOT_PARTICIPATING = 1,
  ServerMatchmakingState_EMPTY = 2,
  ServerMatchmakingState_ACTIVE_MATCH_REQUESTING_LATE_JOIN = 3,
  ServerMatchmakingState_ACTIVE_MATCH = 4
};
bool ServerMatchmakingState_IsValid(int value);
const ServerMatchmakingState ServerMatchmakingState_MIN = ServerMatchmakingState_INVALID;
const ServerMatchmakingState ServerMatchmakingState_MAX = ServerMatchmakingState_ACTIVE_MATCH;
const int ServerMatchmakingState_ARRAYSIZE = ServerMatchmakingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerMatchmakingState_descriptor();
inline const ::std::string& ServerMatchmakingState_Name(ServerMatchmakingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerMatchmakingState_descriptor(), value);
}
inline bool ServerMatchmakingState_Parse(
    const ::std::string& name, ServerMatchmakingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerMatchmakingState>(
    ServerMatchmakingState_descriptor(), name, value);
}
enum SurveyQuestionType {
  QUESTION_MATCH_QUALITY = 0,
  QUESTION_MAP_QUALITY = 1,
  QUESTION_COMP_INQUIRY = 2,
  QUESTION_CASUAL_INQUIRY = 3,
  QUESTION_RANDOM_CRIT = 4
};
bool SurveyQuestionType_IsValid(int value);
const SurveyQuestionType SurveyQuestionType_MIN = QUESTION_MATCH_QUALITY;
const SurveyQuestionType SurveyQuestionType_MAX = QUESTION_RANDOM_CRIT;
const int SurveyQuestionType_ARRAYSIZE = SurveyQuestionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SurveyQuestionType_descriptor();
inline const ::std::string& SurveyQuestionType_Name(SurveyQuestionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SurveyQuestionType_descriptor(), value);
}
inline bool SurveyQuestionType_Parse(
    const ::std::string& name, SurveyQuestionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SurveyQuestionType>(
    SurveyQuestionType_descriptor(), name, value);
}
// ===================================================================

class CMsgTFGoldenWrenchBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFGoldenWrenchBroadcast();
  virtual ~CMsgTFGoldenWrenchBroadcast();

  CMsgTFGoldenWrenchBroadcast(const CMsgTFGoldenWrenchBroadcast& from);

  inline CMsgTFGoldenWrenchBroadcast& operator=(const CMsgTFGoldenWrenchBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFGoldenWrenchBroadcast& default_instance();

  void Swap(CMsgTFGoldenWrenchBroadcast* other);

  // implements Message ----------------------------------------------

  CMsgTFGoldenWrenchBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void MergeFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wrench_number = 1;
  inline bool has_wrench_number() const;
  inline void clear_wrench_number();
  static const int kWrenchNumberFieldNumber = 1;
  inline ::google::protobuf::int32 wrench_number() const;
  inline void set_wrench_number(::google::protobuf::int32 value);

  // optional bool deleted = 2;
  inline bool has_deleted() const;
  inline void clear_deleted();
  static const int kDeletedFieldNumber = 2;
  inline bool deleted() const;
  inline void set_deleted(bool value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgTFGoldenWrenchBroadcast)
 private:
  inline void set_has_wrench_number();
  inline void clear_has_wrench_number();
  inline void set_has_deleted();
  inline void clear_has_deleted();
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 wrench_number_;
  bool deleted_;
  ::std::string* user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFGoldenWrenchBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFSaxxyBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFSaxxyBroadcast();
  virtual ~CMsgTFSaxxyBroadcast();

  CMsgTFSaxxyBroadcast(const CMsgTFSaxxyBroadcast& from);

  inline CMsgTFSaxxyBroadcast& operator=(const CMsgTFSaxxyBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFSaxxyBroadcast& default_instance();

  void Swap(CMsgTFSaxxyBroadcast* other);

  // implements Message ----------------------------------------------

  CMsgTFSaxxyBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFSaxxyBroadcast& from);
  void MergeFrom(const CMsgTFSaxxyBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 category_number = 1;
  inline bool has_category_number() const;
  inline void clear_category_number();
  static const int kCategoryNumberFieldNumber = 1;
  inline ::google::protobuf::int32 category_number() const;
  inline void set_category_number(::google::protobuf::int32 value);

  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgTFSaxxyBroadcast)
 private:
  inline void set_has_category_number();
  inline void clear_has_category_number();
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_name_;
  ::google::protobuf::int32 category_number_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFSaxxyBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCTFSpecificItemBroadcast : public ::google::protobuf::Message {
 public:
  CMsgGCTFSpecificItemBroadcast();
  virtual ~CMsgGCTFSpecificItemBroadcast();

  CMsgGCTFSpecificItemBroadcast(const CMsgGCTFSpecificItemBroadcast& from);

  inline CMsgGCTFSpecificItemBroadcast& operator=(const CMsgGCTFSpecificItemBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCTFSpecificItemBroadcast& default_instance();

  void Swap(CMsgGCTFSpecificItemBroadcast* other);

  // implements Message ----------------------------------------------

  CMsgGCTFSpecificItemBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void MergeFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def_index = 1;
  inline bool has_item_def_index() const;
  inline void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 item_def_index() const;
  inline void set_item_def_index(::google::protobuf::uint32 value);

  // optional bool was_destruction = 2;
  inline bool has_was_destruction() const;
  inline void clear_was_destruction();
  static const int kWasDestructionFieldNumber = 2;
  inline bool was_destruction() const;
  inline void set_was_destruction(bool value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgGCTFSpecificItemBroadcast)
 private:
  inline void set_has_item_def_index();
  inline void clear_has_item_def_index();
  inline void set_has_was_destruction();
  inline void clear_has_was_destruction();
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_index_;
  bool was_destruction_;
  ::std::string* user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCTFSpecificItemBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFWorldStatus : public ::google::protobuf::Message {
 public:
  CMsgTFWorldStatus();
  virtual ~CMsgTFWorldStatus();

  CMsgTFWorldStatus(const CMsgTFWorldStatus& from);

  inline CMsgTFWorldStatus& operator=(const CMsgTFWorldStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFWorldStatus& default_instance();

  void Swap(CMsgTFWorldStatus* other);

  // implements Message ----------------------------------------------

  CMsgTFWorldStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFWorldStatus& from);
  void MergeFrom(const CMsgTFWorldStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool beta_stress_test_event_active = 1 [default = false];
  inline bool has_beta_stress_test_event_active() const;
  inline void clear_beta_stress_test_event_active();
  static const int kBetaStressTestEventActiveFieldNumber = 1;
  inline bool beta_stress_test_event_active() const;
  inline void set_beta_stress_test_event_active(bool value);

  // optional .ETFMatchGroup event_match_group = 2 [default = k_eTFMatchGroup_Invalid];
  inline bool has_event_match_group() const;
  inline void clear_event_match_group();
  static const int kEventMatchGroupFieldNumber = 2;
  inline ::ETFMatchGroup event_match_group() const;
  inline void set_event_match_group(::ETFMatchGroup value);

  // optional fixed32 event_expire_time = 3 [default = 0];
  inline bool has_event_expire_time() const;
  inline void clear_event_expire_time();
  static const int kEventExpireTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 event_expire_time() const;
  inline void set_event_expire_time(::google::protobuf::uint32 value);

  // optional uint32 active_client_version = 4;
  inline bool has_active_client_version() const;
  inline void clear_active_client_version();
  static const int kActiveClientVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 active_client_version() const;
  inline void set_active_client_version(::google::protobuf::uint32 value);

  // repeated .ETFMatchGroup disabled_match_groups = 5;
  inline int disabled_match_groups_size() const;
  inline void clear_disabled_match_groups();
  static const int kDisabledMatchGroupsFieldNumber = 5;
  inline ::ETFMatchGroup disabled_match_groups(int index) const;
  inline void set_disabled_match_groups(int index, ::ETFMatchGroup value);
  inline void add_disabled_match_groups(::ETFMatchGroup value);
  inline const ::google::protobuf::RepeatedField<int>& disabled_match_groups() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_disabled_match_groups();

  // @@protoc_insertion_point(class_scope:CMsgTFWorldStatus)
 private:
  inline void set_has_beta_stress_test_event_active();
  inline void clear_has_beta_stress_test_event_active();
  inline void set_has_event_match_group();
  inline void clear_has_event_match_group();
  inline void set_has_event_expire_time();
  inline void clear_has_event_expire_time();
  inline void set_has_active_client_version();
  inline void clear_has_active_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool beta_stress_test_event_active_;
  int event_match_group_;
  ::google::protobuf::uint32 event_expire_time_;
  ::google::protobuf::uint32 active_client_version_;
  ::google::protobuf::RepeatedField<int> disabled_match_groups_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFWorldStatus* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFDuelSummary : public ::google::protobuf::Message {
 public:
  CSOTFDuelSummary();
  virtual ~CSOTFDuelSummary();

  CSOTFDuelSummary(const CSOTFDuelSummary& from);

  inline CSOTFDuelSummary& operator=(const CSOTFDuelSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFDuelSummary& default_instance();

  void Swap(CSOTFDuelSummary* other);

  // implements Message ----------------------------------------------

  CSOTFDuelSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFDuelSummary& from);
  void MergeFrom(const CSOTFDuelSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 duel_wins = 2;
  inline bool has_duel_wins() const;
  inline void clear_duel_wins();
  static const int kDuelWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 duel_wins() const;
  inline void set_duel_wins(::google::protobuf::uint32 value);

  // optional uint32 duel_losses = 3;
  inline bool has_duel_losses() const;
  inline void clear_duel_losses();
  static const int kDuelLossesFieldNumber = 3;
  inline ::google::protobuf::uint32 duel_losses() const;
  inline void set_duel_losses(::google::protobuf::uint32 value);

  // optional uint32 last_duel_account_id = 4;
  inline bool has_last_duel_account_id() const;
  inline void clear_last_duel_account_id();
  static const int kLastDuelAccountIdFieldNumber = 4;
  inline ::google::protobuf::uint32 last_duel_account_id() const;
  inline void set_last_duel_account_id(::google::protobuf::uint32 value);

  // optional uint32 last_duel_timestamp = 5;
  inline bool has_last_duel_timestamp() const;
  inline void clear_last_duel_timestamp();
  static const int kLastDuelTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 last_duel_timestamp() const;
  inline void set_last_duel_timestamp(::google::protobuf::uint32 value);

  // optional uint32 last_duel_status = 6;
  inline bool has_last_duel_status() const;
  inline void clear_last_duel_status();
  static const int kLastDuelStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 last_duel_status() const;
  inline void set_last_duel_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFDuelSummary)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_duel_wins();
  inline void clear_has_duel_wins();
  inline void set_has_duel_losses();
  inline void clear_has_duel_losses();
  inline void set_has_last_duel_account_id();
  inline void clear_has_last_duel_account_id();
  inline void set_has_last_duel_timestamp();
  inline void clear_has_last_duel_timestamp();
  inline void set_has_last_duel_status();
  inline void clear_has_last_duel_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 duel_wins_;
  ::google::protobuf::uint32 duel_losses_;
  ::google::protobuf::uint32 last_duel_account_id_;
  ::google::protobuf::uint32 last_duel_timestamp_;
  ::google::protobuf::uint32 last_duel_status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFDuelSummary* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFMapContribution : public ::google::protobuf::Message {
 public:
  CSOTFMapContribution();
  virtual ~CSOTFMapContribution();

  CSOTFMapContribution(const CSOTFMapContribution& from);

  inline CSOTFMapContribution& operator=(const CSOTFMapContribution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMapContribution& default_instance();

  void Swap(CSOTFMapContribution* other);

  // implements Message ----------------------------------------------

  CSOTFMapContribution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFMapContribution& from);
  void MergeFrom(const CSOTFMapContribution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 def_index = 2;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 contribution_level = 3;
  inline bool has_contribution_level() const;
  inline void clear_contribution_level();
  static const int kContributionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 contribution_level() const;
  inline void set_contribution_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFMapContribution)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_contribution_level();
  inline void clear_has_contribution_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 contribution_level_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFMapContribution* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialChooseMostHelpfulFriend : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialChooseMostHelpfulFriend();
  virtual ~CMsgTFFreeTrialChooseMostHelpfulFriend();

  CMsgTFFreeTrialChooseMostHelpfulFriend(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);

  inline CMsgTFFreeTrialChooseMostHelpfulFriend& operator=(const CMsgTFFreeTrialChooseMostHelpfulFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialChooseMostHelpfulFriend& default_instance();

  void Swap(CMsgTFFreeTrialChooseMostHelpfulFriend* other);

  // implements Message ----------------------------------------------

  CMsgTFFreeTrialChooseMostHelpfulFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void MergeFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_friend = 1;
  inline bool has_account_id_friend() const;
  inline void clear_account_id_friend();
  static const int kAccountIdFriendFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend() const;
  inline void set_account_id_friend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialChooseMostHelpfulFriend)
 private:
  inline void set_has_account_id_friend();
  inline void clear_has_account_id_friend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_friend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFFreeTrialChooseMostHelpfulFriend* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2Friends : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2Friends();
  virtual ~CMsgTFRequestTF2Friends();

  CMsgTFRequestTF2Friends(const CMsgTFRequestTF2Friends& from);

  inline CMsgTFRequestTF2Friends& operator=(const CMsgTFRequestTF2Friends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2Friends& default_instance();

  void Swap(CMsgTFRequestTF2Friends* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestTF2Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2Friends& from);
  void MergeFrom(const CMsgTFRequestTF2Friends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2Friends)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestTF2Friends* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2FriendsResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2FriendsResponse();
  virtual ~CMsgTFRequestTF2FriendsResponse();

  CMsgTFRequestTF2FriendsResponse(const CMsgTFRequestTF2FriendsResponse& from);

  inline CMsgTFRequestTF2FriendsResponse& operator=(const CMsgTFRequestTF2FriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2FriendsResponse& default_instance();

  void Swap(CMsgTFRequestTF2FriendsResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestTF2FriendsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void MergeFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2FriendsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestTF2FriendsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPlayerInfo : public ::google::protobuf::Message {
 public:
  CSOTFPlayerInfo();
  virtual ~CSOTFPlayerInfo();

  CSOTFPlayerInfo(const CSOTFPlayerInfo& from);

  inline CSOTFPlayerInfo& operator=(const CSOTFPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPlayerInfo& default_instance();

  void Swap(CSOTFPlayerInfo* other);

  // implements Message ----------------------------------------------

  CSOTFPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPlayerInfo& from);
  void MergeFrom(const CSOTFPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_new_users_helped = 1;
  inline bool has_num_new_users_helped() const;
  inline void clear_num_new_users_helped();
  static const int kNumNewUsersHelpedFieldNumber = 1;
  inline ::google::protobuf::uint32 num_new_users_helped() const;
  inline void set_num_new_users_helped(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPlayerInfo)
 private:
  inline void set_has_num_new_users_helped();
  inline void clear_has_num_new_users_helped();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_new_users_helped_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedBySomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedBySomeone();
  virtual ~CMsgTFThankedBySomeone();

  CMsgTFThankedBySomeone(const CMsgTFThankedBySomeone& from);

  inline CMsgTFThankedBySomeone& operator=(const CMsgTFThankedBySomeone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedBySomeone& default_instance();

  void Swap(CMsgTFThankedBySomeone* other);

  // implements Message ----------------------------------------------

  CMsgTFThankedBySomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedBySomeone& from);
  void MergeFrom(const CMsgTFThankedBySomeone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 thanker_steam_id = 1;
  inline bool has_thanker_steam_id() const;
  inline void clear_thanker_steam_id();
  static const int kThankerSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 thanker_steam_id() const;
  inline void set_thanker_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFThankedBySomeone)
 private:
  inline void set_has_thanker_steam_id();
  inline void clear_has_thanker_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 thanker_steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFThankedBySomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedSomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedSomeone();
  virtual ~CMsgTFThankedSomeone();

  CMsgTFThankedSomeone(const CMsgTFThankedSomeone& from);

  inline CMsgTFThankedSomeone& operator=(const CMsgTFThankedSomeone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedSomeone& default_instance();

  void Swap(CMsgTFThankedSomeone* other);

  // implements Message ----------------------------------------------

  CMsgTFThankedSomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedSomeone& from);
  void MergeFrom(const CMsgTFThankedSomeone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFThankedSomeone)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFThankedSomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialConvertedToPremium : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialConvertedToPremium();
  virtual ~CMsgTFFreeTrialConvertedToPremium();

  CMsgTFFreeTrialConvertedToPremium(const CMsgTFFreeTrialConvertedToPremium& from);

  inline CMsgTFFreeTrialConvertedToPremium& operator=(const CMsgTFFreeTrialConvertedToPremium& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialConvertedToPremium& default_instance();

  void Swap(CMsgTFFreeTrialConvertedToPremium* other);

  // implements Message ----------------------------------------------

  CMsgTFFreeTrialConvertedToPremium* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void MergeFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialConvertedToPremium)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFFreeTrialConvertedToPremium* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSaxxyAwarded : public ::google::protobuf::Message {
 public:
  CMsgSaxxyAwarded();
  virtual ~CMsgSaxxyAwarded();

  CMsgSaxxyAwarded(const CMsgSaxxyAwarded& from);

  inline CMsgSaxxyAwarded& operator=(const CMsgSaxxyAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaxxyAwarded& default_instance();

  void Swap(CMsgSaxxyAwarded* other);

  // implements Message ----------------------------------------------

  CMsgSaxxyAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSaxxyAwarded& from);
  void MergeFrom(const CMsgSaxxyAwarded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 category = 1;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // repeated string winner_names = 2;
  inline int winner_names_size() const;
  inline void clear_winner_names();
  static const int kWinnerNamesFieldNumber = 2;
  inline const ::std::string& winner_names(int index) const;
  inline ::std::string* mutable_winner_names(int index);
  inline void set_winner_names(int index, const ::std::string& value);
  inline void set_winner_names(int index, const char* value);
  inline void set_winner_names(int index, const char* value, size_t size);
  inline ::std::string* add_winner_names();
  inline void add_winner_names(const ::std::string& value);
  inline void add_winner_names(const char* value);
  inline void add_winner_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& winner_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_winner_names();

  // @@protoc_insertion_point(class_scope:CMsgSaxxyAwarded)
 private:
  inline void set_has_category();
  inline void clear_has_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> winner_names_;
  ::google::protobuf::uint32 category_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSaxxyAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntry : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntry();
  virtual ~CMsgReplaySubmitContestEntry();

  CMsgReplaySubmitContestEntry(const CMsgReplaySubmitContestEntry& from);

  inline CMsgReplaySubmitContestEntry& operator=(const CMsgReplaySubmitContestEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntry& default_instance();

  void Swap(CMsgReplaySubmitContestEntry* other);

  // implements Message ----------------------------------------------

  CMsgReplaySubmitContestEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntry& from);
  void MergeFrom(const CMsgReplaySubmitContestEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string youtube_url = 1;
  inline bool has_youtube_url() const;
  inline void clear_youtube_url();
  static const int kYoutubeUrlFieldNumber = 1;
  inline const ::std::string& youtube_url() const;
  inline void set_youtube_url(const ::std::string& value);
  inline void set_youtube_url(const char* value);
  inline void set_youtube_url(const char* value, size_t size);
  inline ::std::string* mutable_youtube_url();
  inline ::std::string* release_youtube_url();
  inline void set_allocated_youtube_url(::std::string* youtube_url);

  // optional uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntry)
 private:
  inline void set_has_youtube_url();
  inline void clear_has_youtube_url();
  inline void set_has_category();
  inline void clear_has_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* youtube_url_;
  ::google::protobuf::uint32 category_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntryResponse : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntryResponse();
  virtual ~CMsgReplaySubmitContestEntryResponse();

  CMsgReplaySubmitContestEntryResponse(const CMsgReplaySubmitContestEntryResponse& from);

  inline CMsgReplaySubmitContestEntryResponse& operator=(const CMsgReplaySubmitContestEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntryResponse& default_instance();

  void Swap(CMsgReplaySubmitContestEntryResponse* other);

  // implements Message ----------------------------------------------

  CMsgReplaySubmitContestEntryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void MergeFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntryResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CReplayCachedContestData : public ::google::protobuf::Message {
 public:
  CReplayCachedContestData();
  virtual ~CReplayCachedContestData();

  CReplayCachedContestData(const CReplayCachedContestData& from);

  inline CReplayCachedContestData& operator=(const CReplayCachedContestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CReplayCachedContestData& default_instance();

  void Swap(CReplayCachedContestData* other);

  // implements Message ----------------------------------------------

  CReplayCachedContestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CReplayCachedContestData& from);
  void MergeFrom(const CReplayCachedContestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 num_votes_last_day = 2;
  inline bool has_num_votes_last_day() const;
  inline void clear_num_votes_last_day();
  static const int kNumVotesLastDayFieldNumber = 2;
  inline ::google::protobuf::uint32 num_votes_last_day() const;
  inline void set_num_votes_last_day(::google::protobuf::uint32 value);

  // repeated uint32 video_entry_ids = 3;
  inline int video_entry_ids_size() const;
  inline void clear_video_entry_ids();
  static const int kVideoEntryIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 video_entry_ids(int index) const;
  inline void set_video_entry_ids(int index, ::google::protobuf::uint32 value);
  inline void add_video_entry_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      video_entry_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_video_entry_ids();

  // optional uint32 num_flags_last_day = 4;
  inline bool has_num_flags_last_day() const;
  inline void clear_num_flags_last_day();
  static const int kNumFlagsLastDayFieldNumber = 4;
  inline ::google::protobuf::uint32 num_flags_last_day() const;
  inline void set_num_flags_last_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CReplayCachedContestData)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_num_votes_last_day();
  inline void clear_has_num_votes_last_day();
  inline void set_has_num_flags_last_day();
  inline void clear_has_num_flags_last_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 num_votes_last_day_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > video_entry_ids_;
  ::google::protobuf::uint32 num_flags_last_day_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CReplayCachedContestData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AddToCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AddToCoaches();
  virtual ~CMsgTFCoaching_AddToCoaches();

  CMsgTFCoaching_AddToCoaches(const CMsgTFCoaching_AddToCoaches& from);

  inline CMsgTFCoaching_AddToCoaches& operator=(const CMsgTFCoaching_AddToCoaches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AddToCoaches& default_instance();

  void Swap(CMsgTFCoaching_AddToCoaches* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_AddToCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AddToCoaches& from);
  void MergeFrom(const CMsgTFCoaching_AddToCoaches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AddToCoaches)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_AddToCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveFromCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveFromCoaches();
  virtual ~CMsgTFCoaching_RemoveFromCoaches();

  CMsgTFCoaching_RemoveFromCoaches(const CMsgTFCoaching_RemoveFromCoaches& from);

  inline CMsgTFCoaching_RemoveFromCoaches& operator=(const CMsgTFCoaching_RemoveFromCoaches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveFromCoaches& default_instance();

  void Swap(CMsgTFCoaching_RemoveFromCoaches* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_RemoveFromCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void MergeFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveFromCoaches)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveFromCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoach();
  virtual ~CMsgTFCoaching_FindCoach();

  CMsgTFCoaching_FindCoach(const CMsgTFCoaching_FindCoach& from);

  inline CMsgTFCoaching_FindCoach& operator=(const CMsgTFCoaching_FindCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoach& default_instance();

  void Swap(CMsgTFCoaching_FindCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_FindCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoach& from);
  void MergeFrom(const CMsgTFCoaching_FindCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_friend_as_coach = 1;
  inline bool has_account_id_friend_as_coach() const;
  inline void clear_account_id_friend_as_coach();
  static const int kAccountIdFriendAsCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend_as_coach() const;
  inline void set_account_id_friend_as_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoach)
 private:
  inline void set_has_account_id_friend_as_coach();
  inline void clear_has_account_id_friend_as_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_friend_as_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoachResponse();
  virtual ~CMsgTFCoaching_FindCoachResponse();

  CMsgTFCoaching_FindCoachResponse(const CMsgTFCoaching_FindCoachResponse& from);

  inline CMsgTFCoaching_FindCoachResponse& operator=(const CMsgTFCoaching_FindCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoachResponse& default_instance();

  void Swap(CMsgTFCoaching_FindCoachResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_FindCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool found_coach = 1;
  inline bool has_found_coach() const;
  inline void clear_found_coach();
  static const int kFoundCoachFieldNumber = 1;
  inline bool found_coach() const;
  inline void set_found_coach(bool value);

  // optional uint32 num_likes = 2;
  inline bool has_num_likes() const;
  inline void clear_num_likes();
  static const int kNumLikesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_likes() const;
  inline void set_num_likes(::google::protobuf::uint32 value);

  // optional string coach_name = 3;
  inline bool has_coach_name() const;
  inline void clear_coach_name();
  static const int kCoachNameFieldNumber = 3;
  inline const ::std::string& coach_name() const;
  inline void set_coach_name(const ::std::string& value);
  inline void set_coach_name(const char* value);
  inline void set_coach_name(const char* value, size_t size);
  inline ::std::string* mutable_coach_name();
  inline ::std::string* release_coach_name();
  inline void set_allocated_coach_name(::std::string* coach_name);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoachResponse)
 private:
  inline void set_has_found_coach();
  inline void clear_has_found_coach();
  inline void set_has_num_likes();
  inline void clear_has_num_likes();
  inline void set_has_coach_name();
  inline void clear_has_coach_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool found_coach_;
  ::google::protobuf::uint32 num_likes_;
  ::std::string* coach_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoach();
  virtual ~CMsgTFCoaching_AskCoach();

  CMsgTFCoaching_AskCoach(const CMsgTFCoaching_AskCoach& from);

  inline CMsgTFCoaching_AskCoach& operator=(const CMsgTFCoaching_AskCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoach& default_instance();

  void Swap(CMsgTFCoaching_AskCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_AskCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoach& from);
  void MergeFrom(const CMsgTFCoaching_AskCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_student = 1;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);

  // optional bool student_is_friend = 2;
  inline bool has_student_is_friend() const;
  inline void clear_student_is_friend();
  static const int kStudentIsFriendFieldNumber = 2;
  inline bool student_is_friend() const;
  inline void set_student_is_friend(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoach)
 private:
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();
  inline void set_has_student_is_friend();
  inline void clear_has_student_is_friend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_student_;
  bool student_is_friend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoachResponse();
  virtual ~CMsgTFCoaching_AskCoachResponse();

  CMsgTFCoaching_AskCoachResponse(const CMsgTFCoaching_AskCoachResponse& from);

  inline CMsgTFCoaching_AskCoachResponse& operator=(const CMsgTFCoaching_AskCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoachResponse& default_instance();

  void Swap(CMsgTFCoaching_AskCoachResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_AskCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accept_coaching_assignment = 1;
  inline bool has_accept_coaching_assignment() const;
  inline void clear_accept_coaching_assignment();
  static const int kAcceptCoachingAssignmentFieldNumber = 1;
  inline bool accept_coaching_assignment() const;
  inline void set_accept_coaching_assignment(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoachResponse)
 private:
  inline void set_has_accept_coaching_assignment();
  inline void clear_has_accept_coaching_assignment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accept_coaching_assignment_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoinGame : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoinGame();
  virtual ~CMsgTFCoaching_CoachJoinGame();

  CMsgTFCoaching_CoachJoinGame(const CMsgTFCoaching_CoachJoinGame& from);

  inline CMsgTFCoaching_CoachJoinGame& operator=(const CMsgTFCoaching_CoachJoinGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoinGame& default_instance();

  void Swap(CMsgTFCoaching_CoachJoinGame* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_CoachJoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool join_game = 1;
  inline bool has_join_game() const;
  inline void clear_join_game();
  static const int kJoinGameFieldNumber = 1;
  inline bool join_game() const;
  inline void set_join_game(bool value);

  // optional uint32 server_address = 2;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 2;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 3;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 account_id_student = 4;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoinGame)
 private:
  inline void set_has_join_game();
  inline void clear_has_join_game();
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool join_game_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 account_id_student_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoinGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoining : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoining();
  virtual ~CMsgTFCoaching_CoachJoining();

  CMsgTFCoaching_CoachJoining(const CMsgTFCoaching_CoachJoining& from);

  inline CMsgTFCoaching_CoachJoining& operator=(const CMsgTFCoaching_CoachJoining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoining& default_instance();

  void Swap(CMsgTFCoaching_CoachJoining* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_CoachJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoining& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoining& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);

  // optional uint32 account_id_student = 2;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoining)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  ::google::protobuf::uint32 account_id_student_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoined : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoined();
  virtual ~CMsgTFCoaching_CoachJoined();

  CMsgTFCoaching_CoachJoined(const CMsgTFCoaching_CoachJoined& from);

  inline CMsgTFCoaching_CoachJoined& operator=(const CMsgTFCoaching_CoachJoined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoined& default_instance();

  void Swap(CMsgTFCoaching_CoachJoined* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_CoachJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoined& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoined)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoined* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_LikeCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_LikeCurrentCoach();
  virtual ~CMsgTFCoaching_LikeCurrentCoach();

  CMsgTFCoaching_LikeCurrentCoach(const CMsgTFCoaching_LikeCurrentCoach& from);

  inline CMsgTFCoaching_LikeCurrentCoach& operator=(const CMsgTFCoaching_LikeCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_LikeCurrentCoach& default_instance();

  void Swap(CMsgTFCoaching_LikeCurrentCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_LikeCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool like_coach = 1;
  inline bool has_like_coach() const;
  inline void clear_like_coach();
  static const int kLikeCoachFieldNumber = 1;
  inline bool like_coach() const;
  inline void set_like_coach(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_LikeCurrentCoach)
 private:
  inline void set_has_like_coach();
  inline void clear_has_like_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool like_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_LikeCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveCurrentCoach();
  virtual ~CMsgTFCoaching_RemoveCurrentCoach();

  CMsgTFCoaching_RemoveCurrentCoach(const CMsgTFCoaching_RemoveCurrentCoach& from);

  inline CMsgTFCoaching_RemoveCurrentCoach& operator=(const CMsgTFCoaching_RemoveCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveCurrentCoach& default_instance();

  void Swap(CMsgTFCoaching_RemoveCurrentCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_RemoveCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveCurrentCoach)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServers_ServerInfo();

  CMsgTFQuickplay_ScoreServers_ServerInfo(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);

  inline CMsgTFQuickplay_ScoreServers_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServers_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers_ServerInfo& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServers_ServerInfo* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServers_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 num_users = 3;
  inline bool has_num_users() const;
  inline void clear_num_users();
  static const int kNumUsersFieldNumber = 3;
  inline ::google::protobuf::uint32 num_users() const;
  inline void set_num_users(::google::protobuf::uint32 value);

  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 max_users = 5;
  inline bool has_max_users() const;
  inline void clear_max_users();
  static const int kMaxUsersFieldNumber = 5;
  inline ::google::protobuf::uint32 max_users() const;
  inline void set_max_users(::google::protobuf::uint32 value);

  // optional float user_score = 6;
  inline bool has_user_score() const;
  inline void clear_user_score();
  static const int kUserScoreFieldNumber = 6;
  inline float user_score() const;
  inline void set_user_score(float value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers.ServerInfo)
 private:
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_num_users();
  inline void clear_has_num_users();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_max_users();
  inline void clear_has_max_users();
  inline void set_has_user_score();
  inline void clear_has_user_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 num_users_;
  ::google::protobuf::uint32 max_users_;
  float user_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers();
  virtual ~CMsgTFQuickplay_ScoreServers();

  CMsgTFQuickplay_ScoreServers(const CMsgTFQuickplay_ScoreServers& from);

  inline CMsgTFQuickplay_ScoreServers& operator=(const CMsgTFQuickplay_ScoreServers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServers* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServers* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFQuickplay_ScoreServers_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
      mutable_servers();

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo > servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServersResponse_ServerInfo();

  CMsgTFQuickplay_ScoreServersResponse_ServerInfo(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);

  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional float total_score = 3;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 3;
  inline float total_score() const;
  inline void set_total_score(float value);

  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 options_score = 5;
  inline bool has_options_score() const;
  inline void clear_options_score();
  static const int kOptionsScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 options_score() const;
  inline void set_options_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse.ServerInfo)
 private:
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_options_score();
  inline void clear_has_options_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  float total_score_;
  ::google::protobuf::uint32 options_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse();
  virtual ~CMsgTFQuickplay_ScoreServersResponse();

  CMsgTFQuickplay_ScoreServersResponse(const CMsgTFQuickplay_ScoreServersResponse& from);

  inline CMsgTFQuickplay_ScoreServersResponse& operator=(const CMsgTFQuickplay_ScoreServersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServersResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFQuickplay_ScoreServersResponse_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
      mutable_servers();

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo > servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_PlayerJoining : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_PlayerJoining();
  virtual ~CMsgTFQuickplay_PlayerJoining();

  CMsgTFQuickplay_PlayerJoining(const CMsgTFQuickplay_PlayerJoining& from);

  inline CMsgTFQuickplay_PlayerJoining& operator=(const CMsgTFQuickplay_PlayerJoining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_PlayerJoining& default_instance();

  void Swap(CMsgTFQuickplay_PlayerJoining* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_PlayerJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void MergeFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_PlayerJoining)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_PlayerJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_LevelInfo : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_LevelInfo();
  virtual ~CMsgGC_GameServer_LevelInfo();

  CMsgGC_GameServer_LevelInfo(const CMsgGC_GameServer_LevelInfo& from);

  inline CMsgGC_GameServer_LevelInfo& operator=(const CMsgGC_GameServer_LevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_LevelInfo& default_instance();

  void Swap(CMsgGC_GameServer_LevelInfo* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_LevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_LevelInfo& from);
  void MergeFrom(const CMsgGC_GameServer_LevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool level_loaded = 1;
  inline bool has_level_loaded() const;
  inline void clear_level_loaded();
  static const int kLevelLoadedFieldNumber = 1;
  inline bool level_loaded() const;
  inline void set_level_loaded(bool value);

  // optional string level_name = 2;
  inline bool has_level_name() const;
  inline void clear_level_name();
  static const int kLevelNameFieldNumber = 2;
  inline const ::std::string& level_name() const;
  inline void set_level_name(const ::std::string& value);
  inline void set_level_name(const char* value);
  inline void set_level_name(const char* value, size_t size);
  inline ::std::string* mutable_level_name();
  inline ::std::string* release_level_name();
  inline void set_allocated_level_name(::std::string* level_name);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_LevelInfo)
 private:
  inline void set_has_level_loaded();
  inline void clear_has_level_loaded();
  inline void set_has_level_name();
  inline void clear_has_level_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* level_name_;
  bool level_loaded_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_LevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallenge : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallenge();
  virtual ~CMsgGC_GameServer_AuthChallenge();

  CMsgGC_GameServer_AuthChallenge(const CMsgGC_GameServer_AuthChallenge& from);

  inline CMsgGC_GameServer_AuthChallenge& operator=(const CMsgGC_GameServer_AuthChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallenge& default_instance();

  void Swap(CMsgGC_GameServer_AuthChallenge* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AuthChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string challenge_string = 1;
  inline bool has_challenge_string() const;
  inline void clear_challenge_string();
  static const int kChallengeStringFieldNumber = 1;
  inline const ::std::string& challenge_string() const;
  inline void set_challenge_string(const ::std::string& value);
  inline void set_challenge_string(const char* value);
  inline void set_challenge_string(const char* value, size_t size);
  inline ::std::string* mutable_challenge_string();
  inline ::std::string* release_challenge_string();
  inline void set_allocated_challenge_string(::std::string* challenge_string);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallenge)
 private:
  inline void set_has_challenge_string();
  inline void clear_has_challenge_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* challenge_string_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthResult : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthResult();
  virtual ~CMsgGC_GameServer_AuthResult();

  CMsgGC_GameServer_AuthResult(const CMsgGC_GameServer_AuthResult& from);

  inline CMsgGC_GameServer_AuthResult& operator=(const CMsgGC_GameServer_AuthResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthResult& default_instance();

  void Swap(CMsgGC_GameServer_AuthResult* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AuthResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthResult& from);
  void MergeFrom(const CMsgGC_GameServer_AuthResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool authenticated = 1;
  inline bool has_authenticated() const;
  inline void clear_authenticated();
  static const int kAuthenticatedFieldNumber = 1;
  inline bool authenticated() const;
  inline void set_authenticated(bool value);

  // optional int32 game_server_standing = 2;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 2;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);

  // optional int32 game_server_standing_trend = 3;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);

  // optional bool is_valve_server = 4;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 4;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);

  // optional string message = 5;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 5;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthResult)
 private:
  inline void set_has_authenticated();
  inline void clear_has_authenticated();
  inline void set_has_game_server_standing();
  inline void clear_has_game_server_standing();
  inline void set_has_game_server_standing_trend();
  inline void clear_has_game_server_standing_trend();
  inline void set_has_is_valve_server();
  inline void clear_has_is_valve_server();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 game_server_standing_;
  bool authenticated_;
  bool is_valve_server_;
  ::std::string* message_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallengeResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallengeResponse();
  virtual ~CMsgGC_GameServer_AuthChallengeResponse();

  CMsgGC_GameServer_AuthChallengeResponse(const CMsgGC_GameServer_AuthChallengeResponse& from);

  inline CMsgGC_GameServer_AuthChallengeResponse& operator=(const CMsgGC_GameServer_AuthChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallengeResponse& default_instance();

  void Swap(CMsgGC_GameServer_AuthChallengeResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AuthChallengeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional bytes hashed_challenge_string = 2;
  inline bool has_hashed_challenge_string() const;
  inline void clear_hashed_challenge_string();
  static const int kHashedChallengeStringFieldNumber = 2;
  inline const ::std::string& hashed_challenge_string() const;
  inline void set_hashed_challenge_string(const ::std::string& value);
  inline void set_hashed_challenge_string(const char* value);
  inline void set_hashed_challenge_string(const void* value, size_t size);
  inline ::std::string* mutable_hashed_challenge_string();
  inline ::std::string* release_hashed_challenge_string();
  inline void set_allocated_hashed_challenge_string(::std::string* hashed_challenge_string);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallengeResponse)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_hashed_challenge_string();
  inline void clear_has_hashed_challenge_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* hashed_challenge_string_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallengeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentity();
  virtual ~CMsgGC_GameServer_CreateIdentity();

  CMsgGC_GameServer_CreateIdentity(const CMsgGC_GameServer_CreateIdentity& from);

  inline CMsgGC_GameServer_CreateIdentity& operator=(const CMsgGC_GameServer_CreateIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentity& default_instance();

  void Swap(CMsgGC_GameServer_CreateIdentity* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_CreateIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentity)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentityResponse();
  virtual ~CMsgGC_GameServer_CreateIdentityResponse();

  CMsgGC_GameServer_CreateIdentityResponse(const CMsgGC_GameServer_CreateIdentityResponse& from);

  inline CMsgGC_GameServer_CreateIdentityResponse& operator=(const CMsgGC_GameServer_CreateIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentityResponse& default_instance();

  void Swap(CMsgGC_GameServer_CreateIdentityResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_CreateIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_CreateIdentityResponse_EStatus EStatus;
  static const EStatus kStatus_GenericFailure = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure;
  static const EStatus kStatus_TooMany = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany;
  static const EStatus kStatus_NoPrivs = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
  static const EStatus kStatus_Created = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
  static inline bool EStatus_IsValid(int value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value);
  }
  static const EStatus EStatus_MIN =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX;
  static const int EStatus_ARRAYSIZE =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool account_created = 1;
  inline bool has_account_created() const;
  inline void clear_account_created();
  static const int kAccountCreatedFieldNumber = 1;
  inline bool account_created() const;
  inline void set_account_created(bool value);

  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  inline void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus status() const;
  inline void set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentityResponse)
 private:
  inline void set_has_account_created();
  inline void clear_has_account_created();
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool account_created_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  int status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_List : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_List();
  virtual ~CMsgGC_GameServer_List();

  CMsgGC_GameServer_List(const CMsgGC_GameServer_List& from);

  inline CMsgGC_GameServer_List& operator=(const CMsgGC_GameServer_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_List& default_instance();

  void Swap(CMsgGC_GameServer_List* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_List& from);
  void MergeFrom(const CMsgGC_GameServer_List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_List)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_List* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse_GameServerIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse_GameServerIdentity();
  virtual ~CMsgGC_GameServer_ListResponse_GameServerIdentity();

  CMsgGC_GameServer_ListResponse_GameServerIdentity(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);

  inline CMsgGC_GameServer_ListResponse_GameServerIdentity& operator=(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse_GameServerIdentity& default_instance();

  void Swap(CMsgGC_GameServer_ListResponse_GameServerIdentity* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ListResponse_GameServerIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional string game_server_identity_token = 2;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 2;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  inline void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional int32 game_server_standing = 3;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);

  // optional int32 game_server_standing_trend = 4;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 4;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse.GameServerIdentity)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  inline void set_has_game_server_standing();
  inline void clear_has_game_server_standing();
  inline void set_has_game_server_standing_trend();
  inline void clear_has_game_server_standing_trend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* game_server_identity_token_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::google::protobuf::int32 game_server_standing_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse_GameServerIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse();
  virtual ~CMsgGC_GameServer_ListResponse();

  CMsgGC_GameServer_ListResponse(const CMsgGC_GameServer_ListResponse& from);

  inline CMsgGC_GameServer_ListResponse& operator=(const CMsgGC_GameServer_ListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse& default_instance();

  void Swap(CMsgGC_GameServer_ListResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_ListResponse_GameServerIdentity GameServerIdentity;

  // accessors -------------------------------------------------------

  // repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
  inline int owned_game_servers_size() const;
  inline void clear_owned_game_servers();
  static const int kOwnedGameServersFieldNumber = 1;
  inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& owned_game_servers(int index) const;
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* mutable_owned_game_servers(int index);
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* add_owned_game_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
      owned_game_servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
      mutable_owned_game_servers();

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity > owned_game_servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentity();
  virtual ~CMsgGC_GameServer_ResetIdentity();

  CMsgGC_GameServer_ResetIdentity(const CMsgGC_GameServer_ResetIdentity& from);

  inline CMsgGC_GameServer_ResetIdentity& operator=(const CMsgGC_GameServer_ResetIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentity& default_instance();

  void Swap(CMsgGC_GameServer_ResetIdentity* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ResetIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentity)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentityResponse();
  virtual ~CMsgGC_GameServer_ResetIdentityResponse();

  CMsgGC_GameServer_ResetIdentityResponse(const CMsgGC_GameServer_ResetIdentityResponse& from);

  inline CMsgGC_GameServer_ResetIdentityResponse& operator=(const CMsgGC_GameServer_ResetIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentityResponse& default_instance();

  void Swap(CMsgGC_GameServer_ResetIdentityResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ResetIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool game_server_identity_token_reset = 1;
  inline bool has_game_server_identity_token_reset() const;
  inline void clear_game_server_identity_token_reset();
  static const int kGameServerIdentityTokenResetFieldNumber = 1;
  inline bool game_server_identity_token_reset() const;
  inline void set_game_server_identity_token_reset(bool value);

  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  inline void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentityResponse)
 private:
  inline void set_has_game_server_identity_token_reset();
  inline void clear_has_game_server_identity_token_reset();
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool game_server_identity_token_reset_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicy : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AckPolicy();
  virtual ~CMsgGC_GameServer_AckPolicy();

  CMsgGC_GameServer_AckPolicy(const CMsgGC_GameServer_AckPolicy& from);

  inline CMsgGC_GameServer_AckPolicy& operator=(const CMsgGC_GameServer_AckPolicy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicy& default_instance();

  void Swap(CMsgGC_GameServer_AckPolicy* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AckPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AckPolicy& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicy)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AckPolicy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicyResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AckPolicyResponse();
  virtual ~CMsgGC_GameServer_AckPolicyResponse();

  CMsgGC_GameServer_AckPolicyResponse(const CMsgGC_GameServer_AckPolicyResponse& from);

  inline CMsgGC_GameServer_AckPolicyResponse& operator=(const CMsgGC_GameServer_AckPolicyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicyResponse& default_instance();

  void Swap(CMsgGC_GameServer_AckPolicyResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AckPolicyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicyResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AckPolicyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Client_UseServerModificationItem();
  virtual ~CMsgGC_Client_UseServerModificationItem();

  CMsgGC_Client_UseServerModificationItem(const CMsgGC_Client_UseServerModificationItem& from);

  inline CMsgGC_Client_UseServerModificationItem& operator=(const CMsgGC_Client_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem& default_instance();

  void Swap(CMsgGC_Client_UseServerModificationItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_Client_UseServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Client_UseServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_Client_UseServerModificationItem_Response();
  virtual ~CMsgGC_Client_UseServerModificationItem_Response();

  CMsgGC_Client_UseServerModificationItem_Response(const CMsgGC_Client_UseServerModificationItem_Response& from);

  inline CMsgGC_Client_UseServerModificationItem_Response& operator=(const CMsgGC_Client_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem_Response& default_instance();

  void Swap(CMsgGC_Client_UseServerModificationItem_Response* other);

  // implements Message ----------------------------------------------

  CMsgGC_Client_UseServerModificationItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse EServerModificationItemResponse;
  static const EServerModificationItemResponse kServerModificationItemResponse_AlreadyInUse = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
  static const EServerModificationItemResponse kServerModificationItemResponse_NotOnAuthenticatedServer = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer;
  static const EServerModificationItemResponse kServerModificationItemResponse_ServerReject = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject;
  static const EServerModificationItemResponse kServerModificationItemResponse_InternalError = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError;
  static const EServerModificationItemResponse kServerModificationItemResponse_EventAlreadyActive = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
  static inline bool EServerModificationItemResponse_IsValid(int value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value);
  }
  static const EServerModificationItemResponse EServerModificationItemResponse_MIN =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN;
  static const EServerModificationItemResponse EServerModificationItemResponse_MAX =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX;
  static const int EServerModificationItemResponse_ARRAYSIZE =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemResponse_descriptor() {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemResponse_Name(EServerModificationItemResponse value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(value);
  }
  static inline bool EServerModificationItemResponse_Parse(const ::std::string& name,
      EServerModificationItemResponse* value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1;
  inline bool has_response_code() const;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse response_code() const;
  inline void set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem_Response)
 private:
  inline void set_has_response_code();
  inline void clear_has_response_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int response_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Client_UseServerModificationItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_UseServerModificationItem();
  virtual ~CMsgGC_GameServer_UseServerModificationItem();

  CMsgGC_GameServer_UseServerModificationItem(const CMsgGC_GameServer_UseServerModificationItem& from);

  inline CMsgGC_GameServer_UseServerModificationItem& operator=(const CMsgGC_GameServer_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem& default_instance();

  void Swap(CMsgGC_GameServer_UseServerModificationItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_UseServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1;
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_UseServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_UseServerModificationItem_Response();
  virtual ~CMsgGC_GameServer_UseServerModificationItem_Response();

  CMsgGC_GameServer_UseServerModificationItem_Response(const CMsgGC_GameServer_UseServerModificationItem_Response& from);

  inline CMsgGC_GameServer_UseServerModificationItem_Response& operator=(const CMsgGC_GameServer_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem_Response& default_instance();

  void Swap(CMsgGC_GameServer_UseServerModificationItem_Response* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_UseServerModificationItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse EServerModificationItemServerResponse;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_Accepted = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_NoVoteCalled = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_VoteFailed = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
  static inline bool EServerModificationItemServerResponse_IsValid(int value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value);
  }
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MIN =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN;
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MAX =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX;
  static const int EServerModificationItemServerResponse_ARRAYSIZE =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemServerResponse_descriptor() {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemServerResponse_Name(EServerModificationItemServerResponse value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(value);
  }
  static inline bool EServerModificationItemServerResponse_Parse(const ::std::string& name,
      EServerModificationItemServerResponse* value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1;
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2;
  inline bool has_server_response_code() const;
  inline void clear_server_response_code();
  static const int kServerResponseCodeFieldNumber = 2;
  inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse server_response_code() const;
  inline void set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem_Response)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();
  inline void set_has_server_response_code();
  inline void clear_has_server_response_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  int server_response_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_UseServerModificationItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItemExpired : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ServerModificationItemExpired();
  virtual ~CMsgGC_GameServer_ServerModificationItemExpired();

  CMsgGC_GameServer_ServerModificationItemExpired(const CMsgGC_GameServer_ServerModificationItemExpired& from);

  inline CMsgGC_GameServer_ServerModificationItemExpired& operator=(const CMsgGC_GameServer_ServerModificationItemExpired& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItemExpired& default_instance();

  void Swap(CMsgGC_GameServer_ServerModificationItemExpired* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ServerModificationItemExpired* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1;
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItemExpired)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ServerModificationItemExpired* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ServerModificationItem();
  virtual ~CMsgGC_GameServer_ServerModificationItem();

  CMsgGC_GameServer_ServerModificationItem(const CMsgGC_GameServer_ServerModificationItem& from);

  inline CMsgGC_GameServer_ServerModificationItem& operator=(const CMsgGC_GameServer_ServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItem& default_instance();

  void Swap(CMsgGC_GameServer_ServerModificationItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1;
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // optional bool active = 2;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 2;
  inline bool active() const;
  inline void set_active(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItem)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  bool active_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ReservedItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_ReservedItem();
  virtual ~CMsgGC_Halloween_ReservedItem();

  CMsgGC_Halloween_ReservedItem(const CMsgGC_Halloween_ReservedItem& from);

  inline CMsgGC_Halloween_ReservedItem& operator=(const CMsgGC_Halloween_ReservedItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ReservedItem& default_instance();

  void Swap(CMsgGC_Halloween_ReservedItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_ReservedItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_ReservedItem& from);
  void MergeFrom(const CMsgGC_Halloween_ReservedItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float x = 1;
  inline int x_size() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x(int index) const;
  inline void set_x(int index, float value);
  inline void add_x(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      x() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_x();

  // repeated float y = 2;
  inline int y_size() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y(int index) const;
  inline void set_y(int index, float value);
  inline void add_y(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      y() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_y();

  // repeated float z = 3;
  inline int z_size() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z(int index) const;
  inline void set_z(int index, float value);
  inline void add_z(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      z() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_z();

  // optional uint32 spawn_meta_info = 7;
  inline bool has_spawn_meta_info() const;
  inline void clear_spawn_meta_info();
  static const int kSpawnMetaInfoFieldNumber = 7;
  inline ::google::protobuf::uint32 spawn_meta_info() const;
  inline void set_spawn_meta_info(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ReservedItem)
 private:
  inline void set_has_spawn_meta_info();
  inline void clear_has_spawn_meta_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > x_;
  ::google::protobuf::RepeatedField< float > y_;
  ::google::protobuf::RepeatedField< float > z_;
  ::google::protobuf::uint32 spawn_meta_info_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_ReservedItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_GrantItem();
  virtual ~CMsgGC_Halloween_GrantItem();

  CMsgGC_Halloween_GrantItem(const CMsgGC_Halloween_GrantItem& from);

  inline CMsgGC_Halloween_GrantItem& operator=(const CMsgGC_Halloween_GrantItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItem& default_instance();

  void Swap(CMsgGC_Halloween_GrantItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_GrantItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_GrantItem& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 level_id = 2;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 2;
  inline ::google::protobuf::uint32 level_id() const;
  inline void set_level_id(::google::protobuf::uint32 value);

  // optional bool flagged = 3;
  inline bool has_flagged() const;
  inline void clear_flagged();
  static const int kFlaggedFieldNumber = 3;
  inline bool flagged() const;
  inline void set_flagged(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItem)
 private:
  inline void set_has_recipient_account_id();
  inline void clear_has_recipient_account_id();
  inline void set_has_level_id();
  inline void clear_has_level_id();
  inline void set_has_flagged();
  inline void clear_has_flagged();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 level_id_;
  bool flagged_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_GrantItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItemResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_GrantItemResponse();
  virtual ~CMsgGC_Halloween_GrantItemResponse();

  CMsgGC_Halloween_GrantItemResponse(const CMsgGC_Halloween_GrantItemResponse& from);

  inline CMsgGC_Halloween_GrantItemResponse& operator=(const CMsgGC_Halloween_GrantItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItemResponse& default_instance();

  void Swap(CMsgGC_Halloween_GrantItemResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_GrantItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItemResponse)
 private:
  inline void set_has_recipient_account_id();
  inline void clear_has_recipient_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipient_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_GrantItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ItemClaimed : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_ItemClaimed();
  virtual ~CMsgGC_Halloween_ItemClaimed();

  CMsgGC_Halloween_ItemClaimed(const CMsgGC_Halloween_ItemClaimed& from);

  inline CMsgGC_Halloween_ItemClaimed& operator=(const CMsgGC_Halloween_ItemClaimed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ItemClaimed& default_instance();

  void Swap(CMsgGC_Halloween_ItemClaimed* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_ItemClaimed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void MergeFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ItemClaimed)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_ItemClaimed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_Query : public ::google::protobuf::Message {
 public:
  CMsgGC_PickupItemEligibility_Query();
  virtual ~CMsgGC_PickupItemEligibility_Query();

  CMsgGC_PickupItemEligibility_Query(const CMsgGC_PickupItemEligibility_Query& from);

  inline CMsgGC_PickupItemEligibility_Query& operator=(const CMsgGC_PickupItemEligibility_Query& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_Query& default_instance();

  void Swap(CMsgGC_PickupItemEligibility_Query* other);

  // implements Message ----------------------------------------------

  CMsgGC_PickupItemEligibility_Query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 seconds_ago = 2;
  inline bool has_seconds_ago() const;
  inline void clear_seconds_ago();
  static const int kSecondsAgoFieldNumber = 2;
  inline ::google::protobuf::uint32 seconds_ago() const;
  inline void set_seconds_ago(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_Query)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_seconds_ago();
  inline void clear_has_seconds_ago();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seconds_ago_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_PickupItemEligibility_Query* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_QueryResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_PickupItemEligibility_QueryResponse();
  virtual ~CMsgGC_PickupItemEligibility_QueryResponse();

  CMsgGC_PickupItemEligibility_QueryResponse(const CMsgGC_PickupItemEligibility_QueryResponse& from);

  inline CMsgGC_PickupItemEligibility_QueryResponse& operator=(const CMsgGC_PickupItemEligibility_QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_QueryResponse& default_instance();

  void Swap(CMsgGC_PickupItemEligibility_QueryResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_PickupItemEligibility_QueryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bool was_eligible = 2;
  inline bool has_was_eligible() const;
  inline void clear_was_eligible();
  static const int kWasEligibleFieldNumber = 2;
  inline bool was_eligible() const;
  inline void set_was_eligible(bool value);

  // optional uint32 level_id = 3;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 level_id() const;
  inline void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_QueryResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_was_eligible();
  inline void clear_has_was_eligible();
  inline void set_has_level_id();
  inline void clear_has_level_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool was_eligible_;
  ::google::protobuf::uint32 level_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_PickupItemEligibility_QueryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyMember_Activity : public ::google::protobuf::Message {
 public:
  CSOTFPartyMember_Activity();
  virtual ~CSOTFPartyMember_Activity();

  CSOTFPartyMember_Activity(const CSOTFPartyMember_Activity& from);

  inline CSOTFPartyMember_Activity& operator=(const CSOTFPartyMember_Activity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyMember_Activity& default_instance();

  void Swap(CSOTFPartyMember_Activity* other);

  // implements Message ----------------------------------------------

  CSOTFPartyMember_Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyMember_Activity& from);
  void MergeFrom(const CSOTFPartyMember_Activity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional .ETFMatchGroup lobby_match_group = 2;
  inline bool has_lobby_match_group() const;
  inline void clear_lobby_match_group();
  static const int kLobbyMatchGroupFieldNumber = 2;
  inline ::ETFMatchGroup lobby_match_group() const;
  inline void set_lobby_match_group(::ETFMatchGroup value);

  // optional bool multiqueue_blocked = 3;
  inline bool has_multiqueue_blocked() const;
  inline void clear_multiqueue_blocked();
  static const int kMultiqueueBlockedFieldNumber = 3;
  inline bool multiqueue_blocked() const;
  inline void set_multiqueue_blocked(bool value);

  // optional bool online = 4;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 4;
  inline bool online() const;
  inline void set_online(bool value);

  // optional uint32 client_version = 5;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyMember.Activity)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_lobby_match_group();
  inline void clear_has_lobby_match_group();
  inline void set_has_multiqueue_blocked();
  inline void clear_has_multiqueue_blocked();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_client_version();
  inline void clear_has_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  int lobby_match_group_;
  bool multiqueue_blocked_;
  bool online_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyMember_Activity* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyMember : public ::google::protobuf::Message {
 public:
  CSOTFPartyMember();
  virtual ~CSOTFPartyMember();

  CSOTFPartyMember(const CSOTFPartyMember& from);

  inline CSOTFPartyMember& operator=(const CSOTFPartyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyMember& default_instance();

  void Swap(CSOTFPartyMember* other);

  // implements Message ----------------------------------------------

  CSOTFPartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyMember& from);
  void MergeFrom(const CSOTFPartyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFPartyMember_Activity Activity;

  // accessors -------------------------------------------------------

  // optional bool owns_ticket = 2;
  inline bool has_owns_ticket() const;
  inline void clear_owns_ticket();
  static const int kOwnsTicketFieldNumber = 2;
  inline bool owns_ticket() const;
  inline void set_owns_ticket(bool value);

  // optional uint32 completed_missions = 3;
  inline bool has_completed_missions() const;
  inline void clear_completed_missions();
  static const int kCompletedMissionsFieldNumber = 3;
  inline ::google::protobuf::uint32 completed_missions() const;
  inline void set_completed_missions(::google::protobuf::uint32 value);

  // optional uint32 badge_level = 4;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // optional bool competitive_access = 9;
  inline bool has_competitive_access() const;
  inline void clear_competitive_access();
  static const int kCompetitiveAccessFieldNumber = 9;
  inline bool competitive_access() const;
  inline void set_competitive_access(bool value);

  // optional uint32 experience = 14;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 14;
  inline ::google::protobuf::uint32 experience() const;
  inline void set_experience(::google::protobuf::uint32 value);

  // optional .CTFPerPlayerMatchCriteriaProto player_criteria = 16;
  inline bool has_player_criteria() const;
  inline void clear_player_criteria();
  static const int kPlayerCriteriaFieldNumber = 16;
  inline const ::CTFPerPlayerMatchCriteriaProto& player_criteria() const;
  inline ::CTFPerPlayerMatchCriteriaProto* mutable_player_criteria();
  inline ::CTFPerPlayerMatchCriteriaProto* release_player_criteria();
  inline void set_allocated_player_criteria(::CTFPerPlayerMatchCriteriaProto* player_criteria);

  // optional .CSOTFPartyMember.Activity activity = 17;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 17;
  inline const ::CSOTFPartyMember_Activity& activity() const;
  inline ::CSOTFPartyMember_Activity* mutable_activity();
  inline ::CSOTFPartyMember_Activity* release_activity();
  inline void set_allocated_activity(::CSOTFPartyMember_Activity* activity);

  // optional bool casual_banned = 18;
  inline bool has_casual_banned() const;
  inline void clear_casual_banned();
  static const int kCasualBannedFieldNumber = 18;
  inline bool casual_banned() const;
  inline void set_casual_banned(bool value);

  // optional bool ranked_banned = 19;
  inline bool has_ranked_banned() const;
  inline void clear_ranked_banned();
  static const int kRankedBannedFieldNumber = 19;
  inline bool ranked_banned() const;
  inline void set_ranked_banned(bool value);

  // optional bool casual_low_priority = 20;
  inline bool has_casual_low_priority() const;
  inline void clear_casual_low_priority();
  static const int kCasualLowPriorityFieldNumber = 20;
  inline bool casual_low_priority() const;
  inline void set_casual_low_priority(bool value);

  // optional bool ranked_low_priority = 21;
  inline bool has_ranked_low_priority() const;
  inline void clear_ranked_low_priority();
  static const int kRankedLowPriorityFieldNumber = 21;
  inline bool ranked_low_priority() const;
  inline void set_ranked_low_priority(bool value);

  // optional bool lobby_standby = 22;
  inline bool has_lobby_standby() const;
  inline void clear_lobby_standby();
  static const int kLobbyStandbyFieldNumber = 22;
  inline bool lobby_standby() const;
  inline void set_lobby_standby(bool value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyMember)
 private:
  inline void set_has_owns_ticket();
  inline void clear_has_owns_ticket();
  inline void set_has_completed_missions();
  inline void clear_has_completed_missions();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();
  inline void set_has_competitive_access();
  inline void clear_has_competitive_access();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_player_criteria();
  inline void clear_has_player_criteria();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_casual_banned();
  inline void clear_has_casual_banned();
  inline void set_has_ranked_banned();
  inline void clear_has_ranked_banned();
  inline void set_has_casual_low_priority();
  inline void clear_has_casual_low_priority();
  inline void set_has_ranked_low_priority();
  inline void clear_has_ranked_low_priority();
  inline void set_has_lobby_standby();
  inline void clear_has_lobby_standby();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 completed_missions_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 experience_;
  bool owns_ticket_;
  bool competitive_access_;
  bool casual_banned_;
  bool ranked_banned_;
  ::CTFPerPlayerMatchCriteriaProto* player_criteria_;
  ::CSOTFPartyMember_Activity* activity_;
  bool casual_low_priority_;
  bool ranked_low_priority_;
  bool lobby_standby_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyMember* default_instance_;
};
// -------------------------------------------------------------------

class TFPendingPartyMember : public ::google::protobuf::Message {
 public:
  TFPendingPartyMember();
  virtual ~TFPendingPartyMember();

  TFPendingPartyMember(const TFPendingPartyMember& from);

  inline TFPendingPartyMember& operator=(const TFPendingPartyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFPendingPartyMember& default_instance();

  void Swap(TFPendingPartyMember* other);

  // implements Message ----------------------------------------------

  TFPendingPartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFPendingPartyMember& from);
  void MergeFrom(const TFPendingPartyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TFPendingPartyMember_EType EType;
  static const EType Invited = TFPendingPartyMember_EType_Invited;
  static const EType RequestedToJoin = TFPendingPartyMember_EType_RequestedToJoin;
  static inline bool EType_IsValid(int value) {
    return TFPendingPartyMember_EType_IsValid(value);
  }
  static const EType EType_MIN =
    TFPendingPartyMember_EType_EType_MIN;
  static const EType EType_MAX =
    TFPendingPartyMember_EType_EType_MAX;
  static const int EType_ARRAYSIZE =
    TFPendingPartyMember_EType_EType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EType_descriptor() {
    return TFPendingPartyMember_EType_descriptor();
  }
  static inline const ::std::string& EType_Name(EType value) {
    return TFPendingPartyMember_EType_Name(value);
  }
  static inline bool EType_Parse(const ::std::string& name,
      EType* value) {
    return TFPendingPartyMember_EType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional .TFPendingPartyMember.EType type = 2 [default = Invited];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TFPendingPartyMember_EType type() const;
  inline void set_type(::TFPendingPartyMember_EType value);

  // optional fixed64 inviter = 3;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 3;
  inline ::google::protobuf::uint64 inviter() const;
  inline void set_inviter(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TFPendingPartyMember)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_inviter();
  inline void clear_has_inviter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 inviter_;
  int type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static TFPendingPartyMember* default_instance_;
};
// -------------------------------------------------------------------

class TFSyncedMMUIState : public ::google::protobuf::Message {
 public:
  TFSyncedMMUIState();
  virtual ~TFSyncedMMUIState();

  TFSyncedMMUIState(const TFSyncedMMUIState& from);

  inline TFSyncedMMUIState& operator=(const TFSyncedMMUIState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFSyncedMMUIState& default_instance();

  void Swap(TFSyncedMMUIState* other);

  // implements Message ----------------------------------------------

  TFSyncedMMUIState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFSyncedMMUIState& from);
  void MergeFrom(const TFSyncedMMUIState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ETFSyncedMMMenuStep menu_step = 1 [default = k_eTFSyncedMMMenuStep_None];
  inline bool has_menu_step() const;
  inline void clear_menu_step();
  static const int kMenuStepFieldNumber = 1;
  inline ::ETFSyncedMMMenuStep menu_step() const;
  inline void set_menu_step(::ETFSyncedMMMenuStep value);

  // optional .ETFMatchGroup match_group = 2 [default = k_eTFMatchGroup_Invalid];
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::ETFMatchGroup match_group() const;
  inline void set_match_group(::ETFMatchGroup value);

  // @@protoc_insertion_point(class_scope:TFSyncedMMUIState)
 private:
  inline void set_has_menu_step();
  inline void clear_has_menu_step();
  inline void set_has_match_group();
  inline void clear_has_match_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int menu_step_;
  int match_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static TFSyncedMMUIState* default_instance_;
};
// -------------------------------------------------------------------

class CTFGroupMatchCriteriaProto : public ::google::protobuf::Message {
 public:
  CTFGroupMatchCriteriaProto();
  virtual ~CTFGroupMatchCriteriaProto();

  CTFGroupMatchCriteriaProto(const CTFGroupMatchCriteriaProto& from);

  inline CTFGroupMatchCriteriaProto& operator=(const CTFGroupMatchCriteriaProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFGroupMatchCriteriaProto& default_instance();

  void Swap(CTFGroupMatchCriteriaProto* other);

  // implements Message ----------------------------------------------

  CTFGroupMatchCriteriaProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFGroupMatchCriteriaProto& from);
  void MergeFrom(const CTFGroupMatchCriteriaProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool late_join_ok = 5;
  inline bool has_late_join_ok() const;
  inline void clear_late_join_ok();
  static const int kLateJoinOkFieldNumber = 5;
  inline bool late_join_ok() const;
  inline void set_late_join_ok(bool value);

  // optional uint32 custom_ping_tolerance = 13 [default = 0];
  inline bool has_custom_ping_tolerance() const;
  inline void clear_custom_ping_tolerance();
  static const int kCustomPingToleranceFieldNumber = 13;
  inline ::google::protobuf::uint32 custom_ping_tolerance() const;
  inline void set_custom_ping_tolerance(::google::protobuf::uint32 value);

  // optional string mvm_mannup_tour = 10;
  inline bool has_mvm_mannup_tour() const;
  inline void clear_mvm_mannup_tour();
  static const int kMvmMannupTourFieldNumber = 10;
  inline const ::std::string& mvm_mannup_tour() const;
  inline void set_mvm_mannup_tour(const ::std::string& value);
  inline void set_mvm_mannup_tour(const char* value);
  inline void set_mvm_mannup_tour(const char* value, size_t size);
  inline ::std::string* mutable_mvm_mannup_tour();
  inline ::std::string* release_mvm_mannup_tour();
  inline void set_allocated_mvm_mannup_tour(::std::string* mvm_mannup_tour);

  // repeated string mvm_mannup_missions = 15;
  inline int mvm_mannup_missions_size() const;
  inline void clear_mvm_mannup_missions();
  static const int kMvmMannupMissionsFieldNumber = 15;
  inline const ::std::string& mvm_mannup_missions(int index) const;
  inline ::std::string* mutable_mvm_mannup_missions(int index);
  inline void set_mvm_mannup_missions(int index, const ::std::string& value);
  inline void set_mvm_mannup_missions(int index, const char* value);
  inline void set_mvm_mannup_missions(int index, const char* value, size_t size);
  inline ::std::string* add_mvm_mannup_missions();
  inline void add_mvm_mannup_missions(const ::std::string& value);
  inline void add_mvm_mannup_missions(const char* value);
  inline void add_mvm_mannup_missions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& mvm_mannup_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mvm_mannup_missions();

  // repeated string mvm_bootcamp_missions = 16;
  inline int mvm_bootcamp_missions_size() const;
  inline void clear_mvm_bootcamp_missions();
  static const int kMvmBootcampMissionsFieldNumber = 16;
  inline const ::std::string& mvm_bootcamp_missions(int index) const;
  inline ::std::string* mutable_mvm_bootcamp_missions(int index);
  inline void set_mvm_bootcamp_missions(int index, const ::std::string& value);
  inline void set_mvm_bootcamp_missions(int index, const char* value);
  inline void set_mvm_bootcamp_missions(int index, const char* value, size_t size);
  inline ::std::string* add_mvm_bootcamp_missions();
  inline void add_mvm_bootcamp_missions(const ::std::string& value);
  inline void add_mvm_bootcamp_missions(const char* value);
  inline void add_mvm_bootcamp_missions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& mvm_bootcamp_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mvm_bootcamp_missions();

  // optional .CTFCasualMatchCriteria casual_criteria = 12;
  inline bool has_casual_criteria() const;
  inline void clear_casual_criteria();
  static const int kCasualCriteriaFieldNumber = 12;
  inline const ::CTFCasualMatchCriteria& casual_criteria() const;
  inline ::CTFCasualMatchCriteria* mutable_casual_criteria();
  inline ::CTFCasualMatchCriteria* release_casual_criteria();
  inline void set_allocated_casual_criteria(::CTFCasualMatchCriteria* casual_criteria);

  // @@protoc_insertion_point(class_scope:CTFGroupMatchCriteriaProto)
 private:
  inline void set_has_late_join_ok();
  inline void clear_has_late_join_ok();
  inline void set_has_custom_ping_tolerance();
  inline void clear_has_custom_ping_tolerance();
  inline void set_has_mvm_mannup_tour();
  inline void clear_has_mvm_mannup_tour();
  inline void set_has_casual_criteria();
  inline void clear_has_casual_criteria();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool late_join_ok_;
  ::google::protobuf::uint32 custom_ping_tolerance_;
  ::std::string* mvm_mannup_tour_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mvm_mannup_missions_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mvm_bootcamp_missions_;
  ::CTFCasualMatchCriteria* casual_criteria_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFGroupMatchCriteriaProto* default_instance_;
};
// -------------------------------------------------------------------

class CTFCasualMatchCriteria : public ::google::protobuf::Message {
 public:
  CTFCasualMatchCriteria();
  virtual ~CTFCasualMatchCriteria();

  CTFCasualMatchCriteria(const CTFCasualMatchCriteria& from);

  inline CTFCasualMatchCriteria& operator=(const CTFCasualMatchCriteria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFCasualMatchCriteria& default_instance();

  void Swap(CTFCasualMatchCriteria* other);

  // implements Message ----------------------------------------------

  CTFCasualMatchCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFCasualMatchCriteria& from);
  void MergeFrom(const CTFCasualMatchCriteria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 selected_maps_bits = 3;
  inline int selected_maps_bits_size() const;
  inline void clear_selected_maps_bits();
  static const int kSelectedMapsBitsFieldNumber = 3;
  inline ::google::protobuf::uint32 selected_maps_bits(int index) const;
  inline void set_selected_maps_bits(int index, ::google::protobuf::uint32 value);
  inline void add_selected_maps_bits(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      selected_maps_bits() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_selected_maps_bits();

  // @@protoc_insertion_point(class_scope:CTFCasualMatchCriteria)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > selected_maps_bits_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFCasualMatchCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CTFPerPlayerMatchCriteriaProto : public ::google::protobuf::Message {
 public:
  CTFPerPlayerMatchCriteriaProto();
  virtual ~CTFPerPlayerMatchCriteriaProto();

  CTFPerPlayerMatchCriteriaProto(const CTFPerPlayerMatchCriteriaProto& from);

  inline CTFPerPlayerMatchCriteriaProto& operator=(const CTFPerPlayerMatchCriteriaProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFPerPlayerMatchCriteriaProto& default_instance();

  void Swap(CTFPerPlayerMatchCriteriaProto* other);

  // implements Message ----------------------------------------------

  CTFPerPlayerMatchCriteriaProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFPerPlayerMatchCriteriaProto& from);
  void MergeFrom(const CTFPerPlayerMatchCriteriaProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool mvm_squad_surplus = 1;
  inline bool has_mvm_squad_surplus() const;
  inline void clear_mvm_squad_surplus();
  static const int kMvmSquadSurplusFieldNumber = 1;
  inline bool mvm_squad_surplus() const;
  inline void set_mvm_squad_surplus(bool value);

  // @@protoc_insertion_point(class_scope:CTFPerPlayerMatchCriteriaProto)
 private:
  inline void set_has_mvm_squad_surplus();
  inline void clear_has_mvm_squad_surplus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool mvm_squad_surplus_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFPerPlayerMatchCriteriaProto* default_instance_;
};
// -------------------------------------------------------------------

class CTFPartyOptions : public ::google::protobuf::Message {
 public:
  CTFPartyOptions();
  virtual ~CTFPartyOptions();

  CTFPartyOptions(const CTFPartyOptions& from);

  inline CTFPartyOptions& operator=(const CTFPartyOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFPartyOptions& default_instance();

  void Swap(CTFPartyOptions* other);

  // implements Message ----------------------------------------------

  CTFPartyOptions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFPartyOptions& from);
  void MergeFrom(const CTFPartyOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool overwrite_existing = 1;
  inline bool has_overwrite_existing() const;
  inline void clear_overwrite_existing();
  static const int kOverwriteExistingFieldNumber = 1;
  inline bool overwrite_existing() const;
  inline void set_overwrite_existing(bool value);

  // optional .CTFGroupMatchCriteriaProto group_criteria = 2;
  inline bool has_group_criteria() const;
  inline void clear_group_criteria();
  static const int kGroupCriteriaFieldNumber = 2;
  inline const ::CTFGroupMatchCriteriaProto& group_criteria() const;
  inline ::CTFGroupMatchCriteriaProto* mutable_group_criteria();
  inline ::CTFGroupMatchCriteriaProto* release_group_criteria();
  inline void set_allocated_group_criteria(::CTFGroupMatchCriteriaProto* group_criteria);

  // optional .CTFPerPlayerMatchCriteriaProto player_criteria = 3;
  inline bool has_player_criteria() const;
  inline void clear_player_criteria();
  static const int kPlayerCriteriaFieldNumber = 3;
  inline const ::CTFPerPlayerMatchCriteriaProto& player_criteria() const;
  inline ::CTFPerPlayerMatchCriteriaProto* mutable_player_criteria();
  inline ::CTFPerPlayerMatchCriteriaProto* release_player_criteria();
  inline void set_allocated_player_criteria(::CTFPerPlayerMatchCriteriaProto* player_criteria);

  // optional .TFSyncedMMUIState player_uistate = 5;
  inline bool has_player_uistate() const;
  inline void clear_player_uistate();
  static const int kPlayerUistateFieldNumber = 5;
  inline const ::TFSyncedMMUIState& player_uistate() const;
  inline ::TFSyncedMMUIState* mutable_player_uistate();
  inline ::TFSyncedMMUIState* release_player_uistate();
  inline void set_allocated_player_uistate(::TFSyncedMMUIState* player_uistate);

  // @@protoc_insertion_point(class_scope:CTFPartyOptions)
 private:
  inline void set_has_overwrite_existing();
  inline void clear_has_overwrite_existing();
  inline void set_has_group_criteria();
  inline void clear_has_group_criteria();
  inline void set_has_player_criteria();
  inline void clear_has_player_criteria();
  inline void set_has_player_uistate();
  inline void clear_has_player_uistate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CTFGroupMatchCriteriaProto* group_criteria_;
  ::CTFPerPlayerMatchCriteriaProto* player_criteria_;
  ::TFSyncedMMUIState* player_uistate_;
  bool overwrite_existing_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFPartyOptions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartySetOptions : public ::google::protobuf::Message {
 public:
  CMsgPartySetOptions();
  virtual ~CMsgPartySetOptions();

  CMsgPartySetOptions(const CMsgPartySetOptions& from);

  inline CMsgPartySetOptions& operator=(const CMsgPartySetOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartySetOptions& default_instance();

  void Swap(CMsgPartySetOptions* other);

  // implements Message ----------------------------------------------

  CMsgPartySetOptions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartySetOptions& from);
  void MergeFrom(const CMsgPartySetOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional .CTFPartyOptions options = 2;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 2;
  inline const ::CTFPartyOptions& options() const;
  inline ::CTFPartyOptions* mutable_options();
  inline ::CTFPartyOptions* release_options();
  inline void set_allocated_options(::CTFPartyOptions* options);

  // @@protoc_insertion_point(class_scope:CMsgPartySetOptions)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::CTFPartyOptions* options_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartySetOptions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartySetOptionsResponse : public ::google::protobuf::Message {
 public:
  CMsgPartySetOptionsResponse();
  virtual ~CMsgPartySetOptionsResponse();

  CMsgPartySetOptionsResponse(const CMsgPartySetOptionsResponse& from);

  inline CMsgPartySetOptionsResponse& operator=(const CMsgPartySetOptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartySetOptionsResponse& default_instance();

  void Swap(CMsgPartySetOptionsResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartySetOptionsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartySetOptionsResponse& from);
  void MergeFrom(const CMsgPartySetOptionsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartySetOptionsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartySetOptionsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyQueueForMatch : public ::google::protobuf::Message {
 public:
  CMsgPartyQueueForMatch();
  virtual ~CMsgPartyQueueForMatch();

  CMsgPartyQueueForMatch(const CMsgPartyQueueForMatch& from);

  inline CMsgPartyQueueForMatch& operator=(const CMsgPartyQueueForMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyQueueForMatch& default_instance();

  void Swap(CMsgPartyQueueForMatch* other);

  // implements Message ----------------------------------------------

  CMsgPartyQueueForMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyQueueForMatch& from);
  void MergeFrom(const CMsgPartyQueueForMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional .CTFPartyOptions final_options = 2;
  inline bool has_final_options() const;
  inline void clear_final_options();
  static const int kFinalOptionsFieldNumber = 2;
  inline const ::CTFPartyOptions& final_options() const;
  inline ::CTFPartyOptions* mutable_final_options();
  inline ::CTFPartyOptions* release_final_options();
  inline void set_allocated_final_options(::CTFPartyOptions* final_options);

  // optional .ETFMatchGroup match_group = 3;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 3;
  inline ::ETFMatchGroup match_group() const;
  inline void set_match_group(::ETFMatchGroup value);

  // @@protoc_insertion_point(class_scope:CMsgPartyQueueForMatch)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_final_options();
  inline void clear_has_final_options();
  inline void set_has_match_group();
  inline void clear_has_match_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::CTFPartyOptions* final_options_;
  int match_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyQueueForMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyQueueForMatchResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyQueueForMatchResponse();
  virtual ~CMsgPartyQueueForMatchResponse();

  CMsgPartyQueueForMatchResponse(const CMsgPartyQueueForMatchResponse& from);

  inline CMsgPartyQueueForMatchResponse& operator=(const CMsgPartyQueueForMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyQueueForMatchResponse& default_instance();

  void Swap(CMsgPartyQueueForMatchResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartyQueueForMatchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyQueueForMatchResponse& from);
  void MergeFrom(const CMsgPartyQueueForMatchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartyQueueForMatchResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyQueueForMatchResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyQueueForStandby : public ::google::protobuf::Message {
 public:
  CMsgPartyQueueForStandby();
  virtual ~CMsgPartyQueueForStandby();

  CMsgPartyQueueForStandby(const CMsgPartyQueueForStandby& from);

  inline CMsgPartyQueueForStandby& operator=(const CMsgPartyQueueForStandby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyQueueForStandby& default_instance();

  void Swap(CMsgPartyQueueForStandby* other);

  // implements Message ----------------------------------------------

  CMsgPartyQueueForStandby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyQueueForStandby& from);
  void MergeFrom(const CMsgPartyQueueForStandby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 party_lobby_id = 2;
  inline bool has_party_lobby_id() const;
  inline void clear_party_lobby_id();
  static const int kPartyLobbyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 party_lobby_id() const;
  inline void set_party_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyQueueForStandby)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_party_lobby_id();
  inline void clear_has_party_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 party_lobby_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyQueueForStandby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyQueueForStandbyResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyQueueForStandbyResponse();
  virtual ~CMsgPartyQueueForStandbyResponse();

  CMsgPartyQueueForStandbyResponse(const CMsgPartyQueueForStandbyResponse& from);

  inline CMsgPartyQueueForStandbyResponse& operator=(const CMsgPartyQueueForStandbyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyQueueForStandbyResponse& default_instance();

  void Swap(CMsgPartyQueueForStandbyResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartyQueueForStandbyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyQueueForStandbyResponse& from);
  void MergeFrom(const CMsgPartyQueueForStandbyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartyQueueForStandbyResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyQueueForStandbyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyRemoveFromQueue : public ::google::protobuf::Message {
 public:
  CMsgPartyRemoveFromQueue();
  virtual ~CMsgPartyRemoveFromQueue();

  CMsgPartyRemoveFromQueue(const CMsgPartyRemoveFromQueue& from);

  inline CMsgPartyRemoveFromQueue& operator=(const CMsgPartyRemoveFromQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyRemoveFromQueue& default_instance();

  void Swap(CMsgPartyRemoveFromQueue* other);

  // implements Message ----------------------------------------------

  CMsgPartyRemoveFromQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyRemoveFromQueue& from);
  void MergeFrom(const CMsgPartyRemoveFromQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional .ETFMatchGroup match_group = 2;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::ETFMatchGroup match_group() const;
  inline void set_match_group(::ETFMatchGroup value);

  // @@protoc_insertion_point(class_scope:CMsgPartyRemoveFromQueue)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_match_group();
  inline void clear_has_match_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  int match_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyRemoveFromQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyRemoveFromQueueResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyRemoveFromQueueResponse();
  virtual ~CMsgPartyRemoveFromQueueResponse();

  CMsgPartyRemoveFromQueueResponse(const CMsgPartyRemoveFromQueueResponse& from);

  inline CMsgPartyRemoveFromQueueResponse& operator=(const CMsgPartyRemoveFromQueueResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyRemoveFromQueueResponse& default_instance();

  void Swap(CMsgPartyRemoveFromQueueResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartyRemoveFromQueueResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyRemoveFromQueueResponse& from);
  void MergeFrom(const CMsgPartyRemoveFromQueueResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartyRemoveFromQueueResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyRemoveFromQueueResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyRemoveFromStandbyQueue : public ::google::protobuf::Message {
 public:
  CMsgPartyRemoveFromStandbyQueue();
  virtual ~CMsgPartyRemoveFromStandbyQueue();

  CMsgPartyRemoveFromStandbyQueue(const CMsgPartyRemoveFromStandbyQueue& from);

  inline CMsgPartyRemoveFromStandbyQueue& operator=(const CMsgPartyRemoveFromStandbyQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyRemoveFromStandbyQueue& default_instance();

  void Swap(CMsgPartyRemoveFromStandbyQueue* other);

  // implements Message ----------------------------------------------

  CMsgPartyRemoveFromStandbyQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyRemoveFromStandbyQueue& from);
  void MergeFrom(const CMsgPartyRemoveFromStandbyQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyRemoveFromStandbyQueue)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyRemoveFromStandbyQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyRemoveFromStandbyQueueResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyRemoveFromStandbyQueueResponse();
  virtual ~CMsgPartyRemoveFromStandbyQueueResponse();

  CMsgPartyRemoveFromStandbyQueueResponse(const CMsgPartyRemoveFromStandbyQueueResponse& from);

  inline CMsgPartyRemoveFromStandbyQueueResponse& operator=(const CMsgPartyRemoveFromStandbyQueueResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyRemoveFromStandbyQueueResponse& default_instance();

  void Swap(CMsgPartyRemoveFromStandbyQueueResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartyRemoveFromStandbyQueueResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyRemoveFromStandbyQueueResponse& from);
  void MergeFrom(const CMsgPartyRemoveFromStandbyQueueResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartyRemoveFromStandbyQueueResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyRemoveFromStandbyQueueResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyInvitePlayer : public ::google::protobuf::Message {
 public:
  CMsgPartyInvitePlayer();
  virtual ~CMsgPartyInvitePlayer();

  CMsgPartyInvitePlayer(const CMsgPartyInvitePlayer& from);

  inline CMsgPartyInvitePlayer& operator=(const CMsgPartyInvitePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyInvitePlayer& default_instance();

  void Swap(CMsgPartyInvitePlayer* other);

  // implements Message ----------------------------------------------

  CMsgPartyInvitePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyInvitePlayer& from);
  void MergeFrom(const CMsgPartyInvitePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional bool expecting_request_to_join = 3;
  inline bool has_expecting_request_to_join() const;
  inline void clear_expecting_request_to_join();
  static const int kExpectingRequestToJoinFieldNumber = 3;
  inline bool expecting_request_to_join() const;
  inline void set_expecting_request_to_join(bool value);

  // @@protoc_insertion_point(class_scope:CMsgPartyInvitePlayer)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_expecting_request_to_join();
  inline void clear_has_expecting_request_to_join();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 player_id_;
  bool expecting_request_to_join_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyInvitePlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyRequestJoinPlayer : public ::google::protobuf::Message {
 public:
  CMsgPartyRequestJoinPlayer();
  virtual ~CMsgPartyRequestJoinPlayer();

  CMsgPartyRequestJoinPlayer(const CMsgPartyRequestJoinPlayer& from);

  inline CMsgPartyRequestJoinPlayer& operator=(const CMsgPartyRequestJoinPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyRequestJoinPlayer& default_instance();

  void Swap(CMsgPartyRequestJoinPlayer* other);

  // implements Message ----------------------------------------------

  CMsgPartyRequestJoinPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyRequestJoinPlayer& from);
  void MergeFrom(const CMsgPartyRequestJoinPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 current_party_id = 1;
  inline bool has_current_party_id() const;
  inline void clear_current_party_id();
  static const int kCurrentPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 current_party_id() const;
  inline void set_current_party_id(::google::protobuf::uint64 value);

  // optional fixed64 join_player_id = 2;
  inline bool has_join_player_id() const;
  inline void clear_join_player_id();
  static const int kJoinPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 join_player_id() const;
  inline void set_join_player_id(::google::protobuf::uint64 value);

  // optional fixed64 join_party_id = 3;
  inline bool has_join_party_id() const;
  inline void clear_join_party_id();
  static const int kJoinPartyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 join_party_id() const;
  inline void set_join_party_id(::google::protobuf::uint64 value);

  // optional bool expecting_invite = 4;
  inline bool has_expecting_invite() const;
  inline void clear_expecting_invite();
  static const int kExpectingInviteFieldNumber = 4;
  inline bool expecting_invite() const;
  inline void set_expecting_invite(bool value);

  // @@protoc_insertion_point(class_scope:CMsgPartyRequestJoinPlayer)
 private:
  inline void set_has_current_party_id();
  inline void clear_has_current_party_id();
  inline void set_has_join_player_id();
  inline void clear_has_join_player_id();
  inline void set_has_join_party_id();
  inline void clear_has_join_party_id();
  inline void set_has_expecting_invite();
  inline void clear_has_expecting_invite();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 current_party_id_;
  ::google::protobuf::uint64 join_player_id_;
  ::google::protobuf::uint64 join_party_id_;
  bool expecting_invite_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyRequestJoinPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyClearPendingPlayer : public ::google::protobuf::Message {
 public:
  CMsgPartyClearPendingPlayer();
  virtual ~CMsgPartyClearPendingPlayer();

  CMsgPartyClearPendingPlayer(const CMsgPartyClearPendingPlayer& from);

  inline CMsgPartyClearPendingPlayer& operator=(const CMsgPartyClearPendingPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyClearPendingPlayer& default_instance();

  void Swap(CMsgPartyClearPendingPlayer* other);

  // implements Message ----------------------------------------------

  CMsgPartyClearPendingPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyClearPendingPlayer& from);
  void MergeFrom(const CMsgPartyClearPendingPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 pending_player_id = 2;
  inline bool has_pending_player_id() const;
  inline void clear_pending_player_id();
  static const int kPendingPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint64 pending_player_id() const;
  inline void set_pending_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyClearPendingPlayer)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_pending_player_id();
  inline void clear_has_pending_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 pending_player_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyClearPendingPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyMMError : public ::google::protobuf::Message {
 public:
  CMsgPartyMMError();
  virtual ~CMsgPartyMMError();

  CMsgPartyMMError(const CMsgPartyMMError& from);

  inline CMsgPartyMMError& operator=(const CMsgPartyMMError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyMMError& default_instance();

  void Swap(CMsgPartyMMError* other);

  // implements Message ----------------------------------------------

  CMsgPartyMMError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyMMError& from);
  void MergeFrom(const CMsgPartyMMError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPartyMMError_Type Type;
  static const Type QUEUE_KICK_NO_PING = CMsgPartyMMError_Type_QUEUE_KICK_NO_PING;
  static const Type QUEUE_KICK_AUTH = CMsgPartyMMError_Type_QUEUE_KICK_AUTH;
  static inline bool Type_IsValid(int value) {
    return CMsgPartyMMError_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CMsgPartyMMError_Type_Type_MIN;
  static const Type Type_MAX =
    CMsgPartyMMError_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CMsgPartyMMError_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return CMsgPartyMMError_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return CMsgPartyMMError_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return CMsgPartyMMError_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgPartyMMError.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::CMsgPartyMMError_Type type() const;
  inline void set_type(::CMsgPartyMMError_Type value);

  // @@protoc_insertion_point(class_scope:CMsgPartyMMError)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyMMError* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyClearPendingPlayerResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyClearPendingPlayerResponse();
  virtual ~CMsgPartyClearPendingPlayerResponse();

  CMsgPartyClearPendingPlayerResponse(const CMsgPartyClearPendingPlayerResponse& from);

  inline CMsgPartyClearPendingPlayerResponse& operator=(const CMsgPartyClearPendingPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyClearPendingPlayerResponse& default_instance();

  void Swap(CMsgPartyClearPendingPlayerResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartyClearPendingPlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyClearPendingPlayerResponse& from);
  void MergeFrom(const CMsgPartyClearPendingPlayerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartyClearPendingPlayerResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyClearPendingPlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyClearOtherPartyRequest : public ::google::protobuf::Message {
 public:
  CMsgPartyClearOtherPartyRequest();
  virtual ~CMsgPartyClearOtherPartyRequest();

  CMsgPartyClearOtherPartyRequest(const CMsgPartyClearOtherPartyRequest& from);

  inline CMsgPartyClearOtherPartyRequest& operator=(const CMsgPartyClearOtherPartyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyClearOtherPartyRequest& default_instance();

  void Swap(CMsgPartyClearOtherPartyRequest* other);

  // implements Message ----------------------------------------------

  CMsgPartyClearOtherPartyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyClearOtherPartyRequest& from);
  void MergeFrom(const CMsgPartyClearOtherPartyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 other_party_id = 1;
  inline bool has_other_party_id() const;
  inline void clear_other_party_id();
  static const int kOtherPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 other_party_id() const;
  inline void set_other_party_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyClearOtherPartyRequest)
 private:
  inline void set_has_other_party_id();
  inline void clear_has_other_party_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 other_party_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyClearOtherPartyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyClearOtherPartyRequestResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyClearOtherPartyRequestResponse();
  virtual ~CMsgPartyClearOtherPartyRequestResponse();

  CMsgPartyClearOtherPartyRequestResponse(const CMsgPartyClearOtherPartyRequestResponse& from);

  inline CMsgPartyClearOtherPartyRequestResponse& operator=(const CMsgPartyClearOtherPartyRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyClearOtherPartyRequestResponse& default_instance();

  void Swap(CMsgPartyClearOtherPartyRequestResponse* other);

  // implements Message ----------------------------------------------

  CMsgPartyClearOtherPartyRequestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyClearOtherPartyRequestResponse& from);
  void MergeFrom(const CMsgPartyClearOtherPartyRequestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPartyClearOtherPartyRequestResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyClearOtherPartyRequestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyPromoteToLeader : public ::google::protobuf::Message {
 public:
  CMsgPartyPromoteToLeader();
  virtual ~CMsgPartyPromoteToLeader();

  CMsgPartyPromoteToLeader(const CMsgPartyPromoteToLeader& from);

  inline CMsgPartyPromoteToLeader& operator=(const CMsgPartyPromoteToLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyPromoteToLeader& default_instance();

  void Swap(CMsgPartyPromoteToLeader* other);

  // implements Message ----------------------------------------------

  CMsgPartyPromoteToLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyPromoteToLeader& from);
  void MergeFrom(const CMsgPartyPromoteToLeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 new_leader_id = 2;
  inline bool has_new_leader_id() const;
  inline void clear_new_leader_id();
  static const int kNewLeaderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 new_leader_id() const;
  inline void set_new_leader_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyPromoteToLeader)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_new_leader_id();
  inline void clear_has_new_leader_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 new_leader_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyPromoteToLeader* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyKickMember : public ::google::protobuf::Message {
 public:
  CMsgPartyKickMember();
  virtual ~CMsgPartyKickMember();

  CMsgPartyKickMember(const CMsgPartyKickMember& from);

  inline CMsgPartyKickMember& operator=(const CMsgPartyKickMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyKickMember& default_instance();

  void Swap(CMsgPartyKickMember* other);

  // implements Message ----------------------------------------------

  CMsgPartyKickMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyKickMember& from);
  void MergeFrom(const CMsgPartyKickMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::uint64 target_id() const;
  inline void set_target_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPartyKickMember)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_target_id();
  inline void clear_has_target_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 target_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyKickMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartySendChat : public ::google::protobuf::Message {
 public:
  CMsgPartySendChat();
  virtual ~CMsgPartySendChat();

  CMsgPartySendChat(const CMsgPartySendChat& from);

  inline CMsgPartySendChat& operator=(const CMsgPartySendChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartySendChat& default_instance();

  void Swap(CMsgPartySendChat* other);

  // implements Message ----------------------------------------------

  CMsgPartySendChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartySendChat& from);
  void MergeFrom(const CMsgPartySendChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:CMsgPartySendChat)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::std::string* msg_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartySendChat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyChatMsg : public ::google::protobuf::Message {
 public:
  CMsgPartyChatMsg();
  virtual ~CMsgPartyChatMsg();

  CMsgPartyChatMsg(const CMsgPartyChatMsg& from);

  inline CMsgPartyChatMsg& operator=(const CMsgPartyChatMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyChatMsg& default_instance();

  void Swap(CMsgPartyChatMsg* other);

  // implements Message ----------------------------------------------

  CMsgPartyChatMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyChatMsg& from);
  void MergeFrom(const CMsgPartyChatMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ETFPartyChatType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::ETFPartyChatType type() const;
  inline void set_type(::ETFPartyChatType value);

  // optional fixed64 actor_id = 2;
  inline bool has_actor_id() const;
  inline void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  inline ::google::protobuf::uint64 actor_id() const;
  inline void set_actor_id(::google::protobuf::uint64 value);

  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:CMsgPartyChatMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_actor_id();
  inline void clear_has_actor_id();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 actor_id_;
  ::std::string* msg_;
  int type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPartyChatMsg* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFParty_QueueEntry : public ::google::protobuf::Message {
 public:
  CSOTFParty_QueueEntry();
  virtual ~CSOTFParty_QueueEntry();

  CSOTFParty_QueueEntry(const CSOTFParty_QueueEntry& from);

  inline CSOTFParty_QueueEntry& operator=(const CSOTFParty_QueueEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFParty_QueueEntry& default_instance();

  void Swap(CSOTFParty_QueueEntry* other);

  // implements Message ----------------------------------------------

  CSOTFParty_QueueEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFParty_QueueEntry& from);
  void MergeFrom(const CSOTFParty_QueueEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ETFMatchGroup match_group = 1;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 1;
  inline ::ETFMatchGroup match_group() const;
  inline void set_match_group(::ETFMatchGroup value);

  // optional fixed32 queued_time = 2;
  inline bool has_queued_time() const;
  inline void clear_queued_time();
  static const int kQueuedTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 queued_time() const;
  inline void set_queued_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFParty.QueueEntry)
 private:
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_queued_time();
  inline void clear_has_queued_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int match_group_;
  ::google::protobuf::uint32 queued_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFParty_QueueEntry* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFParty : public ::google::protobuf::Message {
 public:
  CSOTFParty();
  virtual ~CSOTFParty();

  CSOTFParty(const CSOTFParty& from);

  inline CSOTFParty& operator=(const CSOTFParty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFParty& default_instance();

  void Swap(CSOTFParty* other);

  // implements Message ----------------------------------------------

  CSOTFParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFParty& from);
  void MergeFrom(const CSOTFParty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFParty_QueueEntry QueueEntry;

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 leader_id = 2;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 leader_id() const;
  inline void set_leader_id(::google::protobuf::uint64 value);

  // repeated fixed64 member_ids = 3;
  inline int member_ids_size() const;
  inline void clear_member_ids();
  static const int kMemberIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 member_ids(int index) const;
  inline void set_member_ids(int index, ::google::protobuf::uint64 value);
  inline void add_member_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      member_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_member_ids();

  // repeated .CSOTFPartyMember members = 13;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 13;
  inline const ::CSOTFPartyMember& members(int index) const;
  inline ::CSOTFPartyMember* mutable_members(int index);
  inline ::CSOTFPartyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
      mutable_members();

  // optional uint64 associated_lobby_id = 35;
  inline bool has_associated_lobby_id() const;
  inline void clear_associated_lobby_id();
  static const int kAssociatedLobbyIdFieldNumber = 35;
  inline ::google::protobuf::uint64 associated_lobby_id() const;
  inline void set_associated_lobby_id(::google::protobuf::uint64 value);

  // optional .ETFMatchGroup associated_lobby_match_group = 40;
  inline bool has_associated_lobby_match_group() const;
  inline void clear_associated_lobby_match_group();
  static const int kAssociatedLobbyMatchGroupFieldNumber = 40;
  inline ::ETFMatchGroup associated_lobby_match_group() const;
  inline void set_associated_lobby_match_group(::ETFMatchGroup value);

  // repeated .CSOTFParty.QueueEntry matchmaking_queues = 43;
  inline int matchmaking_queues_size() const;
  inline void clear_matchmaking_queues();
  static const int kMatchmakingQueuesFieldNumber = 43;
  inline const ::CSOTFParty_QueueEntry& matchmaking_queues(int index) const;
  inline ::CSOTFParty_QueueEntry* mutable_matchmaking_queues(int index);
  inline ::CSOTFParty_QueueEntry* add_matchmaking_queues();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFParty_QueueEntry >&
      matchmaking_queues() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFParty_QueueEntry >*
      mutable_matchmaking_queues();

  // optional .CTFGroupMatchCriteriaProto group_criteria = 37;
  inline bool has_group_criteria() const;
  inline void clear_group_criteria();
  static const int kGroupCriteriaFieldNumber = 37;
  inline const ::CTFGroupMatchCriteriaProto& group_criteria() const;
  inline ::CTFGroupMatchCriteriaProto* mutable_group_criteria();
  inline ::CTFGroupMatchCriteriaProto* release_group_criteria();
  inline void set_allocated_group_criteria(::CTFGroupMatchCriteriaProto* group_criteria);

  // optional uint32 casual_banned_time = 18;
  inline bool has_casual_banned_time() const;
  inline void clear_casual_banned_time();
  static const int kCasualBannedTimeFieldNumber = 18;
  inline ::google::protobuf::uint32 casual_banned_time() const;
  inline void set_casual_banned_time(::google::protobuf::uint32 value);

  // optional uint32 casual_low_priority_time = 20;
  inline bool has_casual_low_priority_time() const;
  inline void clear_casual_low_priority_time();
  static const int kCasualLowPriorityTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 casual_low_priority_time() const;
  inline void set_casual_low_priority_time(::google::protobuf::uint32 value);

  // optional uint32 ranked_banned_time = 41;
  inline bool has_ranked_banned_time() const;
  inline void clear_ranked_banned_time();
  static const int kRankedBannedTimeFieldNumber = 41;
  inline ::google::protobuf::uint32 ranked_banned_time() const;
  inline void set_ranked_banned_time(::google::protobuf::uint32 value);

  // optional uint32 ranked_low_priority_time = 42;
  inline bool has_ranked_low_priority_time() const;
  inline void clear_ranked_low_priority_time();
  static const int kRankedLowPriorityTimeFieldNumber = 42;
  inline ::google::protobuf::uint32 ranked_low_priority_time() const;
  inline void set_ranked_low_priority_time(::google::protobuf::uint32 value);

  // optional .TFSyncedMMUIState leader_ui_state = 44;
  inline bool has_leader_ui_state() const;
  inline void clear_leader_ui_state();
  static const int kLeaderUiStateFieldNumber = 44;
  inline const ::TFSyncedMMUIState& leader_ui_state() const;
  inline ::TFSyncedMMUIState* mutable_leader_ui_state();
  inline ::TFSyncedMMUIState* release_leader_ui_state();
  inline void set_allocated_leader_ui_state(::TFSyncedMMUIState* leader_ui_state);

  // repeated .TFPendingPartyMember pending_members = 39;
  inline int pending_members_size() const;
  inline void clear_pending_members();
  static const int kPendingMembersFieldNumber = 39;
  inline const ::TFPendingPartyMember& pending_members(int index) const;
  inline ::TFPendingPartyMember* mutable_pending_members(int index);
  inline ::TFPendingPartyMember* add_pending_members();
  inline const ::google::protobuf::RepeatedPtrField< ::TFPendingPartyMember >&
      pending_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::TFPendingPartyMember >*
      mutable_pending_members();

  // @@protoc_insertion_point(class_scope:CSOTFParty)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_associated_lobby_id();
  inline void clear_has_associated_lobby_id();
  inline void set_has_associated_lobby_match_group();
  inline void clear_has_associated_lobby_match_group();
  inline void set_has_group_criteria();
  inline void clear_has_group_criteria();
  inline void set_has_casual_banned_time();
  inline void clear_has_casual_banned_time();
  inline void set_has_casual_low_priority_time();
  inline void clear_has_casual_low_priority_time();
  inline void set_has_ranked_banned_time();
  inline void clear_has_ranked_banned_time();
  inline void set_has_ranked_low_priority_time();
  inline void clear_has_ranked_low_priority_time();
  inline void set_has_leader_ui_state();
  inline void clear_has_leader_ui_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 leader_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > member_ids_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember > members_;
  ::google::protobuf::uint64 associated_lobby_id_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFParty_QueueEntry > matchmaking_queues_;
  int associated_lobby_match_group_;
  ::google::protobuf::uint32 casual_banned_time_;
  ::CTFGroupMatchCriteriaProto* group_criteria_;
  ::google::protobuf::uint32 casual_low_priority_time_;
  ::google::protobuf::uint32 ranked_banned_time_;
  ::TFSyncedMMUIState* leader_ui_state_;
  ::google::protobuf::RepeatedPtrField< ::TFPendingPartyMember > pending_members_;
  ::google::protobuf::uint32 ranked_low_priority_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFParty* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyInvite_PartyMember : public ::google::protobuf::Message {
 public:
  CSOTFPartyInvite_PartyMember();
  virtual ~CSOTFPartyInvite_PartyMember();

  CSOTFPartyInvite_PartyMember(const CSOTFPartyInvite_PartyMember& from);

  inline CSOTFPartyInvite_PartyMember& operator=(const CSOTFPartyInvite_PartyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite_PartyMember& default_instance();

  void Swap(CSOTFPartyInvite_PartyMember* other);

  // implements Message ----------------------------------------------

  CSOTFPartyInvite_PartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyInvite_PartyMember& from);
  void MergeFrom(const CSOTFPartyInvite_PartyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 2;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite.PartyMember)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyInvite_PartyMember* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyInvite : public ::google::protobuf::Message {
 public:
  CSOTFPartyInvite();
  virtual ~CSOTFPartyInvite();

  CSOTFPartyInvite(const CSOTFPartyInvite& from);

  inline CSOTFPartyInvite& operator=(const CSOTFPartyInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite& default_instance();

  void Swap(CSOTFPartyInvite* other);

  // implements Message ----------------------------------------------

  CSOTFPartyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyInvite& from);
  void MergeFrom(const CSOTFPartyInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFPartyInvite_PartyMember PartyMember;

  typedef CSOTFPartyInvite_Type Type;
  static const Type PENDING_INVITE = CSOTFPartyInvite_Type_PENDING_INVITE;
  static const Type PENDING_JOIN_REQUEST = CSOTFPartyInvite_Type_PENDING_JOIN_REQUEST;
  static inline bool Type_IsValid(int value) {
    return CSOTFPartyInvite_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CSOTFPartyInvite_Type_Type_MIN;
  static const Type Type_MAX =
    CSOTFPartyInvite_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CSOTFPartyInvite_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return CSOTFPartyInvite_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return CSOTFPartyInvite_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return CSOTFPartyInvite_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional fixed64 inviter = 2;
  inline bool has_inviter() const;
  inline void clear_inviter();
  static const int kInviterFieldNumber = 2;
  inline ::google::protobuf::uint64 inviter() const;
  inline void set_inviter(::google::protobuf::uint64 value);

  // repeated .CSOTFPartyInvite.PartyMember members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::CSOTFPartyInvite_PartyMember& members(int index) const;
  inline ::CSOTFPartyInvite_PartyMember* mutable_members(int index);
  inline ::CSOTFPartyInvite_PartyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
      mutable_members();

  // optional .CSOTFPartyInvite.Type type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::CSOTFPartyInvite_Type type() const;
  inline void set_type(::CSOTFPartyInvite_Type value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_inviter();
  inline void clear_has_inviter();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 inviter_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember > members_;
  int type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyInvite* default_instance_;
};
// -------------------------------------------------------------------

class CTFLobbyPlayerProto : public ::google::protobuf::Message {
 public:
  CTFLobbyPlayerProto();
  virtual ~CTFLobbyPlayerProto();

  CTFLobbyPlayerProto(const CTFLobbyPlayerProto& from);

  inline CTFLobbyPlayerProto& operator=(const CTFLobbyPlayerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFLobbyPlayerProto& default_instance();

  void Swap(CTFLobbyPlayerProto* other);

  // implements Message ----------------------------------------------

  CTFLobbyPlayerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFLobbyPlayerProto& from);
  void MergeFrom(const CTFLobbyPlayerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CTFLobbyPlayerProto_ConnectState ConnectState;
  static const ConnectState INVALID = CTFLobbyPlayerProto_ConnectState_INVALID;
  static const ConnectState RESERVATION_PENDING = CTFLobbyPlayerProto_ConnectState_RESERVATION_PENDING;
  static const ConnectState RESERVED = CTFLobbyPlayerProto_ConnectState_RESERVED;
  static const ConnectState CONNECTED = CTFLobbyPlayerProto_ConnectState_CONNECTED;
  static const ConnectState DISCONNECTED = CTFLobbyPlayerProto_ConnectState_DISCONNECTED;
  static inline bool ConnectState_IsValid(int value) {
    return CTFLobbyPlayerProto_ConnectState_IsValid(value);
  }
  static const ConnectState ConnectState_MIN =
    CTFLobbyPlayerProto_ConnectState_ConnectState_MIN;
  static const ConnectState ConnectState_MAX =
    CTFLobbyPlayerProto_ConnectState_ConnectState_MAX;
  static const int ConnectState_ARRAYSIZE =
    CTFLobbyPlayerProto_ConnectState_ConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectState_descriptor() {
    return CTFLobbyPlayerProto_ConnectState_descriptor();
  }
  static inline const ::std::string& ConnectState_Name(ConnectState value) {
    return CTFLobbyPlayerProto_ConnectState_Name(value);
  }
  static inline bool ConnectState_Parse(const ::std::string& name,
      ConnectState* value) {
    return CTFLobbyPlayerProto_ConnectState_Parse(name, value);
  }

  typedef CTFLobbyPlayerProto_Type Type;
  static const Type INVALID_PLAYER = CTFLobbyPlayerProto_Type_INVALID_PLAYER;
  static const Type MATCH_PLAYER = CTFLobbyPlayerProto_Type_MATCH_PLAYER;
  static const Type STANDBY_PLAYER = CTFLobbyPlayerProto_Type_STANDBY_PLAYER;
  static const Type OBSERVING_PLAYER = CTFLobbyPlayerProto_Type_OBSERVING_PLAYER;
  static inline bool Type_IsValid(int value) {
    return CTFLobbyPlayerProto_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CTFLobbyPlayerProto_Type_Type_MIN;
  static const Type Type_MAX =
    CTFLobbyPlayerProto_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CTFLobbyPlayerProto_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return CTFLobbyPlayerProto_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return CTFLobbyPlayerProto_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return CTFLobbyPlayerProto_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional fixed64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional .TF_GC_TEAM team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline ::TF_GC_TEAM team() const;
  inline void set_team(::TF_GC_TEAM value);

  // optional .CTFLobbyPlayerProto.ConnectState connect_state = 13;
  inline bool has_connect_state() const;
  inline void clear_connect_state();
  static const int kConnectStateFieldNumber = 13;
  inline ::CTFLobbyPlayerProto_ConnectState connect_state() const;
  inline void set_connect_state(::CTFLobbyPlayerProto_ConnectState value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 original_party_id = 12;
  inline bool has_original_party_id() const;
  inline void clear_original_party_id();
  static const int kOriginalPartyIdFieldNumber = 12;
  inline ::google::protobuf::uint64 original_party_id() const;
  inline void set_original_party_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 14;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 14;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);

  // optional uint32 badge_level = 15;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // optional uint32 last_connect_time = 17;
  inline bool has_last_connect_time() const;
  inline void clear_last_connect_time();
  static const int kLastConnectTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 last_connect_time() const;
  inline void set_last_connect_time(::google::protobuf::uint32 value);

  // optional .CTFLobbyPlayerProto.Type type = 19;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 19;
  inline ::CTFLobbyPlayerProto_Type type() const;
  inline void set_type(::CTFLobbyPlayerProto_Type value);

  // optional double normalized_rating = 20;
  inline bool has_normalized_rating() const;
  inline void clear_normalized_rating();
  static const int kNormalizedRatingFieldNumber = 20;
  inline double normalized_rating() const;
  inline void set_normalized_rating(double value);

  // optional double normalized_uncertainty = 22;
  inline bool has_normalized_uncertainty() const;
  inline void clear_normalized_uncertainty();
  static const int kNormalizedUncertaintyFieldNumber = 22;
  inline double normalized_uncertainty() const;
  inline void set_normalized_uncertainty(double value);

  // optional uint32 rank = 21;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 21;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional bool chat_suspension = 23;
  inline bool has_chat_suspension() const;
  inline void clear_chat_suspension();
  static const int kChatSuspensionFieldNumber = 23;
  inline bool chat_suspension() const;
  inline void set_chat_suspension(bool value);

  // @@protoc_insertion_point(class_scope:CTFLobbyPlayerProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_connect_state();
  inline void clear_has_connect_state();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_original_party_id();
  inline void clear_has_original_party_id();
  inline void set_has_squad_surplus();
  inline void clear_has_squad_surplus();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();
  inline void set_has_last_connect_time();
  inline void clear_has_last_connect_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_normalized_rating();
  inline void clear_has_normalized_rating();
  inline void set_has_normalized_uncertainty();
  inline void clear_has_normalized_uncertainty();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_chat_suspension();
  inline void clear_has_chat_suspension();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  int team_;
  int connect_state_;
  ::std::string* name_;
  ::google::protobuf::uint64 original_party_id_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 last_connect_time_;
  int type_;
  bool squad_surplus_;
  bool chat_suspension_;
  double normalized_rating_;
  double normalized_uncertainty_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFLobbyPlayerProto* default_instance_;
};
// -------------------------------------------------------------------

class CTFLobbyInviteProto : public ::google::protobuf::Message {
 public:
  CTFLobbyInviteProto();
  virtual ~CTFLobbyInviteProto();

  CTFLobbyInviteProto(const CTFLobbyInviteProto& from);

  inline CTFLobbyInviteProto& operator=(const CTFLobbyInviteProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFLobbyInviteProto& default_instance();

  void Swap(CTFLobbyInviteProto* other);

  // implements Message ----------------------------------------------

  CTFLobbyInviteProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFLobbyInviteProto& from);
  void MergeFrom(const CTFLobbyInviteProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional .ETFMatchGroup match_group = 2;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::ETFMatchGroup match_group() const;
  inline void set_match_group(::ETFMatchGroup value);

  // @@protoc_insertion_point(class_scope:CTFLobbyInviteProto)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_match_group();
  inline void clear_has_match_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  int match_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFLobbyInviteProto* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFGameServerLobby : public ::google::protobuf::Message {
 public:
  CSOTFGameServerLobby();
  virtual ~CSOTFGameServerLobby();

  CSOTFGameServerLobby(const CSOTFGameServerLobby& from);

  inline CSOTFGameServerLobby& operator=(const CSOTFGameServerLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFGameServerLobby& default_instance();

  void Swap(CSOTFGameServerLobby* other);

  // implements Message ----------------------------------------------

  CSOTFGameServerLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFGameServerLobby& from);
  void MergeFrom(const CSOTFGameServerLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFGameServerLobby_State State;
  static const State UNKNOWN = CSOTFGameServerLobby_State_UNKNOWN;
  static const State SERVERSETUP = CSOTFGameServerLobby_State_SERVERSETUP;
  static const State RUN = CSOTFGameServerLobby_State_RUN;
  static inline bool State_IsValid(int value) {
    return CSOTFGameServerLobby_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFGameServerLobby_State_State_MIN;
  static const State State_MAX =
    CSOTFGameServerLobby_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFGameServerLobby_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFGameServerLobby_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFGameServerLobby_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFGameServerLobby_State_Parse(name, value);
  }

  typedef CSOTFGameServerLobby_WarMatch WarMatch;
  static const WarMatch NOPE = CSOTFGameServerLobby_WarMatch_NOPE;
  static const WarMatch INVADERS_ARE_PYRO = CSOTFGameServerLobby_WarMatch_INVADERS_ARE_PYRO;
  static const WarMatch INVADERS_ARE_HEAVY = CSOTFGameServerLobby_WarMatch_INVADERS_ARE_HEAVY;
  static inline bool WarMatch_IsValid(int value) {
    return CSOTFGameServerLobby_WarMatch_IsValid(value);
  }
  static const WarMatch WarMatch_MIN =
    CSOTFGameServerLobby_WarMatch_WarMatch_MIN;
  static const WarMatch WarMatch_MAX =
    CSOTFGameServerLobby_WarMatch_WarMatch_MAX;
  static const int WarMatch_ARRAYSIZE =
    CSOTFGameServerLobby_WarMatch_WarMatch_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WarMatch_descriptor() {
    return CSOTFGameServerLobby_WarMatch_descriptor();
  }
  static inline const ::std::string& WarMatch_Name(WarMatch value) {
    return CSOTFGameServerLobby_WarMatch_Name(value);
  }
  static inline bool WarMatch_Parse(const ::std::string& name,
      WarMatch* value) {
    return CSOTFGameServerLobby_WarMatch_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // repeated .CTFLobbyPlayerProto members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::CTFLobbyPlayerProto& members(int index) const;
  inline ::CTFLobbyPlayerProto* mutable_members(int index);
  inline ::CTFLobbyPlayerProto* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >*
      mutable_members();

  // optional fixed64 server_id = 6 [default = 0];
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  inline ::google::protobuf::uint64 server_id() const;
  inline void set_server_id(::google::protobuf::uint64 value);

  // optional .CSOTFGameServerLobby.State state = 4 [default = UNKNOWN];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::CSOTFGameServerLobby_State state() const;
  inline void set_state(::CSOTFGameServerLobby_State value);

  // optional string connect = 5;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 5;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // optional .TF_GC_GameState game_state = 22;
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 22;
  inline ::TF_GC_GameState game_state() const;
  inline void set_game_state(::TF_GC_GameState value);

  // optional double initial_average_mm_rating = 32;
  inline bool has_initial_average_mm_rating() const;
  inline void clear_initial_average_mm_rating();
  static const int kInitialAverageMmRatingFieldNumber = 32;
  inline double initial_average_mm_rating() const;
  inline void set_initial_average_mm_rating(double value);

  // optional string mannup_tour_name = 42;
  inline bool has_mannup_tour_name() const;
  inline void clear_mannup_tour_name();
  static const int kMannupTourNameFieldNumber = 42;
  inline const ::std::string& mannup_tour_name() const;
  inline void set_mannup_tour_name(const ::std::string& value);
  inline void set_mannup_tour_name(const char* value);
  inline void set_mannup_tour_name(const char* value, size_t size);
  inline ::std::string* mutable_mannup_tour_name();
  inline ::std::string* release_mannup_tour_name();
  inline void set_allocated_mannup_tour_name(::std::string* mannup_tour_name);

  // optional string map_name = 38;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 38;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  inline ::std::string* release_map_name();
  inline void set_allocated_map_name(::std::string* map_name);

  // optional string mission_name = 39;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 39;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  inline ::std::string* release_mission_name();
  inline void set_allocated_mission_name(::std::string* mission_name);

  // optional uint32 match_group = 41;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 41;
  inline ::google::protobuf::uint32 match_group() const;
  inline void set_match_group(::google::protobuf::uint32 value);

  // optional uint64 match_id = 30 [default = 0];
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 30;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 formed_time = 36;
  inline bool has_formed_time() const;
  inline void clear_formed_time();
  static const int kFormedTimeFieldNumber = 36;
  inline ::google::protobuf::uint32 formed_time() const;
  inline void set_formed_time(::google::protobuf::uint32 value);

  // optional uint32 flags = 43;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 43;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional bool late_join_eligible = 44;
  inline bool has_late_join_eligible() const;
  inline void clear_late_join_eligible();
  static const int kLateJoinEligibleFieldNumber = 44;
  inline bool late_join_eligible() const;
  inline void set_late_join_eligible(bool value);

  // optional uint32 fixed_match_size = 45;
  inline bool has_fixed_match_size() const;
  inline void clear_fixed_match_size();
  static const int kFixedMatchSizeFieldNumber = 45;
  inline ::google::protobuf::uint32 fixed_match_size() const;
  inline void set_fixed_match_size(::google::protobuf::uint32 value);

  // optional .CSOTFGameServerLobby.WarMatch is_war_match = 46 [default = NOPE];
  inline bool has_is_war_match() const;
  inline void clear_is_war_match();
  static const int kIsWarMatchFieldNumber = 46;
  inline ::CSOTFGameServerLobby_WarMatch is_war_match() const;
  inline void set_is_war_match(::CSOTFGameServerLobby_WarMatch value);

  // repeated uint32 next_maps_for_vote = 47;
  inline int next_maps_for_vote_size() const;
  inline void clear_next_maps_for_vote();
  static const int kNextMapsForVoteFieldNumber = 47;
  inline ::google::protobuf::uint32 next_maps_for_vote(int index) const;
  inline void set_next_maps_for_vote(int index, ::google::protobuf::uint32 value);
  inline void add_next_maps_for_vote(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      next_maps_for_vote() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_next_maps_for_vote();

  // optional uint32 lobby_mm_version = 48;
  inline bool has_lobby_mm_version() const;
  inline void clear_lobby_mm_version();
  static const int kLobbyMmVersionFieldNumber = 48;
  inline ::google::protobuf::uint32 lobby_mm_version() const;
  inline void set_lobby_mm_version(::google::protobuf::uint32 value);

  // repeated .CTFLobbyPlayerProto pending_members = 49;
  inline int pending_members_size() const;
  inline void clear_pending_members();
  static const int kPendingMembersFieldNumber = 49;
  inline const ::CTFLobbyPlayerProto& pending_members(int index) const;
  inline ::CTFLobbyPlayerProto* mutable_pending_members(int index);
  inline ::CTFLobbyPlayerProto* add_pending_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >&
      pending_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >*
      mutable_pending_members();

  // @@protoc_insertion_point(class_scope:CSOTFGameServerLobby)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_connect();
  inline void clear_has_connect();
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_initial_average_mm_rating();
  inline void clear_has_initial_average_mm_rating();
  inline void set_has_mannup_tour_name();
  inline void clear_has_mannup_tour_name();
  inline void set_has_map_name();
  inline void clear_has_map_name();
  inline void set_has_mission_name();
  inline void clear_has_mission_name();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_formed_time();
  inline void clear_has_formed_time();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_late_join_eligible();
  inline void clear_has_late_join_eligible();
  inline void set_has_fixed_match_size();
  inline void clear_has_fixed_match_size();
  inline void set_has_is_war_match();
  inline void clear_has_is_war_match();
  inline void set_has_lobby_mm_version();
  inline void clear_has_lobby_mm_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto > members_;
  ::google::protobuf::uint64 server_id_;
  ::std::string* connect_;
  int state_;
  int game_state_;
  double initial_average_mm_rating_;
  ::std::string* mannup_tour_name_;
  ::std::string* map_name_;
  ::std::string* mission_name_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_group_;
  ::google::protobuf::uint32 formed_time_;
  ::google::protobuf::uint32 flags_;
  bool late_join_eligible_;
  ::google::protobuf::uint32 fixed_match_size_;
  int is_war_match_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > next_maps_for_vote_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto > pending_members_;
  ::google::protobuf::uint32 lobby_mm_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFGameServerLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgExitMatchmaking : public ::google::protobuf::Message {
 public:
  CMsgExitMatchmaking();
  virtual ~CMsgExitMatchmaking();

  CMsgExitMatchmaking(const CMsgExitMatchmaking& from);

  inline CMsgExitMatchmaking& operator=(const CMsgExitMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExitMatchmaking& default_instance();

  void Swap(CMsgExitMatchmaking* other);

  // implements Message ----------------------------------------------

  CMsgExitMatchmaking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExitMatchmaking& from);
  void MergeFrom(const CMsgExitMatchmaking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool explicit_abandon = 1;
  inline bool has_explicit_abandon() const;
  inline void clear_explicit_abandon();
  static const int kExplicitAbandonFieldNumber = 1;
  inline bool explicit_abandon() const;
  inline void set_explicit_abandon(bool value);

  // optional uint64 party_id = 2;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgExitMatchmaking)
 private:
  inline void set_has_explicit_abandon();
  inline void clear_has_explicit_abandon();
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 lobby_id_;
  bool explicit_abandon_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgExitMatchmaking* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcceptLobbyInvite : public ::google::protobuf::Message {
 public:
  CMsgAcceptLobbyInvite();
  virtual ~CMsgAcceptLobbyInvite();

  CMsgAcceptLobbyInvite(const CMsgAcceptLobbyInvite& from);

  inline CMsgAcceptLobbyInvite& operator=(const CMsgAcceptLobbyInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptLobbyInvite& default_instance();

  void Swap(CMsgAcceptLobbyInvite* other);

  // implements Message ----------------------------------------------

  CMsgAcceptLobbyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcceptLobbyInvite& from);
  void MergeFrom(const CMsgAcceptLobbyInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invited_lobby_id = 1;
  inline bool has_invited_lobby_id() const;
  inline void clear_invited_lobby_id();
  static const int kInvitedLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 invited_lobby_id() const;
  inline void set_invited_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 abandoning_match_id = 2;
  inline bool has_abandoning_match_id() const;
  inline void clear_abandoning_match_id();
  static const int kAbandoningMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 abandoning_match_id() const;
  inline void set_abandoning_match_id(::google::protobuf::uint64 value);

  // repeated uint64 abandoning_invite_lobby_ids = 3;
  inline int abandoning_invite_lobby_ids_size() const;
  inline void clear_abandoning_invite_lobby_ids();
  static const int kAbandoningInviteLobbyIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 abandoning_invite_lobby_ids(int index) const;
  inline void set_abandoning_invite_lobby_ids(int index, ::google::protobuf::uint64 value);
  inline void add_abandoning_invite_lobby_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      abandoning_invite_lobby_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_abandoning_invite_lobby_ids();

  // @@protoc_insertion_point(class_scope:CMsgAcceptLobbyInvite)
 private:
  inline void set_has_invited_lobby_id();
  inline void clear_has_invited_lobby_id();
  inline void set_has_abandoning_match_id();
  inline void clear_has_abandoning_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invited_lobby_id_;
  ::google::protobuf::uint64 abandoning_match_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > abandoning_invite_lobby_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAcceptLobbyInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcceptLobbyInviteReply : public ::google::protobuf::Message {
 public:
  CMsgAcceptLobbyInviteReply();
  virtual ~CMsgAcceptLobbyInviteReply();

  CMsgAcceptLobbyInviteReply(const CMsgAcceptLobbyInviteReply& from);

  inline CMsgAcceptLobbyInviteReply& operator=(const CMsgAcceptLobbyInviteReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptLobbyInviteReply& default_instance();

  void Swap(CMsgAcceptLobbyInviteReply* other);

  // implements Message ----------------------------------------------

  CMsgAcceptLobbyInviteReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcceptLobbyInviteReply& from);
  void MergeFrom(const CMsgAcceptLobbyInviteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgAcceptLobbyInviteReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAcceptLobbyInviteReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountRequest : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingSearchCountRequest();
  virtual ~CMsgMatchmakingSearchCountRequest();

  CMsgMatchmakingSearchCountRequest(const CMsgMatchmakingSearchCountRequest& from);

  inline CMsgMatchmakingSearchCountRequest& operator=(const CMsgMatchmakingSearchCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountRequest& default_instance();

  void Swap(CMsgMatchmakingSearchCountRequest* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingSearchCountRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingSearchCountRequest& from);
  void MergeFrom(const CMsgMatchmakingSearchCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingSearchCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountResponse : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingSearchCountResponse();
  virtual ~CMsgMatchmakingSearchCountResponse();

  CMsgMatchmakingSearchCountResponse(const CMsgMatchmakingSearchCountResponse& from);

  inline CMsgMatchmakingSearchCountResponse& operator=(const CMsgMatchmakingSearchCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountResponse& default_instance();

  void Swap(CMsgMatchmakingSearchCountResponse* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingSearchCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingSearchCountResponse& from);
  void MergeFrom(const CMsgMatchmakingSearchCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 searching_players_by_group = 1;
  inline int searching_players_by_group_size() const;
  inline void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 searching_players_by_group(int index) const;
  inline void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingSearchCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgKickedFromMatchmakingQueue : public ::google::protobuf::Message {
 public:
  CMsgKickedFromMatchmakingQueue();
  virtual ~CMsgKickedFromMatchmakingQueue();

  CMsgKickedFromMatchmakingQueue(const CMsgKickedFromMatchmakingQueue& from);

  inline CMsgKickedFromMatchmakingQueue& operator=(const CMsgKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKickedFromMatchmakingQueue& default_instance();

  void Swap(CMsgKickedFromMatchmakingQueue* other);

  // implements Message ----------------------------------------------

  CMsgKickedFromMatchmakingQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgKickedFromMatchmakingQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgKickedFromMatchmakingQueue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgKickedFromMatchmakingQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus_Player : public ::google::protobuf::Message {
 public:
  CMsgGameServerMatchmakingStatus_Player();
  virtual ~CMsgGameServerMatchmakingStatus_Player();

  CMsgGameServerMatchmakingStatus_Player(const CMsgGameServerMatchmakingStatus_Player& from);

  inline CMsgGameServerMatchmakingStatus_Player& operator=(const CMsgGameServerMatchmakingStatus_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus_Player& default_instance();

  void Swap(CMsgGameServerMatchmakingStatus_Player* other);

  // implements Message ----------------------------------------------

  CMsgGameServerMatchmakingStatus_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2;
  inline bool has_connect_state() const;
  inline void clear_connect_state();
  static const int kConnectStateFieldNumber = 2;
  inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state() const;
  inline void set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_connect_state();
  inline void clear_has_connect_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  int connect_state_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerMatchmakingStatus_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus : public ::google::protobuf::Message {
 public:
  CMsgGameServerMatchmakingStatus();
  virtual ~CMsgGameServerMatchmakingStatus();

  CMsgGameServerMatchmakingStatus(const CMsgGameServerMatchmakingStatus& from);

  inline CMsgGameServerMatchmakingStatus& operator=(const CMsgGameServerMatchmakingStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus& default_instance();

  void Swap(CMsgGameServerMatchmakingStatus* other);

  // implements Message ----------------------------------------------

  CMsgGameServerMatchmakingStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerMatchmakingStatus& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerMatchmakingStatus_Player Player;

  typedef CMsgGameServerMatchmakingStatus_PlayerConnectState PlayerConnectState;
  static const PlayerConnectState INVALID = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
  static const PlayerConnectState CONNECTED = CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED;
  static const PlayerConnectState RESERVED = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
  static inline bool PlayerConnectState_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value);
  }
  static const PlayerConnectState PlayerConnectState_MIN =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN;
  static const PlayerConnectState PlayerConnectState_MAX =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX;
  static const int PlayerConnectState_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlayerConnectState_descriptor() {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
  }
  static inline const ::std::string& PlayerConnectState_Name(PlayerConnectState value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(value);
  }
  static inline bool PlayerConnectState_Parse(const ::std::string& name,
      PlayerConnectState* value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(name, value);
  }

  typedef CMsgGameServerMatchmakingStatus_Event Event;
  static const Event None = CMsgGameServerMatchmakingStatus_Event_None;
  static const Event MvMVictory = CMsgGameServerMatchmakingStatus_Event_MvMVictory;
  static const Event MvMDefeat = CMsgGameServerMatchmakingStatus_Event_MvMDefeat;
  static const Event AcknowledgePlayers = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
  static inline bool Event_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_Event_IsValid(value);
  }
  static const Event Event_MIN =
    CMsgGameServerMatchmakingStatus_Event_Event_MIN;
  static const Event Event_MAX =
    CMsgGameServerMatchmakingStatus_Event_Event_MAX;
  static const int Event_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Event_descriptor() {
    return CMsgGameServerMatchmakingStatus_Event_descriptor();
  }
  static inline const ::std::string& Event_Name(Event value) {
    return CMsgGameServerMatchmakingStatus_Event_Name(value);
  }
  static inline bool Event_Parse(const ::std::string& name,
      Event* value) {
    return CMsgGameServerMatchmakingStatus_Event_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 server_version = 16 [default = 1225];
  inline bool has_server_version() const;
  inline void clear_server_version();
  static const int kServerVersionFieldNumber = 16;
  inline ::google::protobuf::uint32 server_version() const;
  inline void set_server_version(::google::protobuf::uint32 value);

  // optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
  inline bool has_matchmaking_state() const;
  inline void clear_matchmaking_state();
  static const int kMatchmakingStateFieldNumber = 1;
  inline ::ServerMatchmakingState matchmaking_state() const;
  inline void set_matchmaking_state(::ServerMatchmakingState value);

  // optional string map = 3;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 3;
  inline const ::std::string& map() const;
  inline void set_map(const ::std::string& value);
  inline void set_map(const char* value);
  inline void set_map(const char* value, size_t size);
  inline ::std::string* mutable_map();
  inline ::std::string* release_map();
  inline void set_allocated_map(::std::string* map);

  // optional string tags = 4;
  inline bool has_tags() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 4;
  inline const ::std::string& tags() const;
  inline void set_tags(const ::std::string& value);
  inline void set_tags(const char* value);
  inline void set_tags(const char* value, size_t size);
  inline ::std::string* mutable_tags();
  inline ::std::string* release_tags();
  inline void set_allocated_tags(::std::string* tags);

  // optional uint32 bot_count = 5;
  inline bool has_bot_count() const;
  inline void clear_bot_count();
  static const int kBotCountFieldNumber = 5;
  inline ::google::protobuf::uint32 bot_count() const;
  inline void set_bot_count(::google::protobuf::uint32 value);

  // optional uint32 num_spectators = 6;
  inline bool has_num_spectators() const;
  inline void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 6;
  inline ::google::protobuf::uint32 num_spectators() const;
  inline void set_num_spectators(::google::protobuf::uint32 value);

  // optional uint32 max_players = 7;
  inline bool has_max_players() const;
  inline void clear_max_players();
  static const int kMaxPlayersFieldNumber = 7;
  inline ::google::protobuf::uint32 max_players() const;
  inline void set_max_players(::google::protobuf::uint32 value);

  // optional uint32 slots_free = 8;
  inline bool has_slots_free() const;
  inline void clear_slots_free();
  static const int kSlotsFreeFieldNumber = 8;
  inline ::google::protobuf::uint32 slots_free() const;
  inline void set_slots_free(::google::protobuf::uint32 value);

  // optional uint32 server_region = 9;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 9;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional float server_loadavg = 10;
  inline bool has_server_loadavg() const;
  inline void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 10;
  inline float server_loadavg() const;
  inline void set_server_loadavg(float value);

  // optional bool server_trusted = 11;
  inline bool has_server_trusted() const;
  inline void clear_server_trusted();
  static const int kServerTrustedFieldNumber = 11;
  inline bool server_trusted() const;
  inline void set_server_trusted(bool value);

  // optional bool server_dedicated = 12;
  inline bool has_server_dedicated() const;
  inline void clear_server_dedicated();
  static const int kServerDedicatedFieldNumber = 12;
  inline bool server_dedicated() const;
  inline void set_server_dedicated(bool value);

  // optional uint32 strict = 17;
  inline bool has_strict() const;
  inline void clear_strict();
  static const int kStrictFieldNumber = 17;
  inline ::google::protobuf::uint32 strict() const;
  inline void set_strict(::google::protobuf::uint32 value);

  // optional string fake_ip = 25;
  inline bool has_fake_ip() const;
  inline void clear_fake_ip();
  static const int kFakeIpFieldNumber = 25;
  inline const ::std::string& fake_ip() const;
  inline void set_fake_ip(const ::std::string& value);
  inline void set_fake_ip(const char* value);
  inline void set_fake_ip(const char* value, size_t size);
  inline ::std::string* mutable_fake_ip();
  inline ::std::string* release_fake_ip();
  inline void set_allocated_fake_ip(::std::string* fake_ip);

  // repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 13;
  inline const ::CMsgGameServerMatchmakingStatus_Player& players(int index) const;
  inline ::CMsgGameServerMatchmakingStatus_Player* mutable_players(int index);
  inline ::CMsgGameServerMatchmakingStatus_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
      mutable_players();

  // optional .TF_GC_GameState game_state = 14;
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 14;
  inline ::TF_GC_GameState game_state() const;
  inline void set_game_state(::TF_GC_GameState value);

  // optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 15;
  inline ::CMsgGameServerMatchmakingStatus_Event event() const;
  inline void set_event(::CMsgGameServerMatchmakingStatus_Event value);

  // optional uint32 mvm_wave = 18;
  inline bool has_mvm_wave() const;
  inline void clear_mvm_wave();
  static const int kMvmWaveFieldNumber = 18;
  inline ::google::protobuf::uint32 mvm_wave() const;
  inline void set_mvm_wave(::google::protobuf::uint32 value);

  // optional uint32 mvm_credits_acquired = 19;
  inline bool has_mvm_credits_acquired() const;
  inline void clear_mvm_credits_acquired();
  static const int kMvmCreditsAcquiredFieldNumber = 19;
  inline ::google::protobuf::uint32 mvm_credits_acquired() const;
  inline void set_mvm_credits_acquired(::google::protobuf::uint32 value);

  // optional uint32 mvm_credits_dropped = 20;
  inline bool has_mvm_credits_dropped() const;
  inline void clear_mvm_credits_dropped();
  static const int kMvmCreditsDroppedFieldNumber = 20;
  inline ::google::protobuf::uint32 mvm_credits_dropped() const;
  inline void set_mvm_credits_dropped(::google::protobuf::uint32 value);

  // optional sint32 match_group = 23 [default = -1];
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 23;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);

  // optional uint32 lobby_mm_version = 24;
  inline bool has_lobby_mm_version() const;
  inline void clear_lobby_mm_version();
  static const int kLobbyMmVersionFieldNumber = 24;
  inline ::google::protobuf::uint32 lobby_mm_version() const;
  inline void set_lobby_mm_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus)
 private:
  inline void set_has_server_version();
  inline void clear_has_server_version();
  inline void set_has_matchmaking_state();
  inline void clear_has_matchmaking_state();
  inline void set_has_map();
  inline void clear_has_map();
  inline void set_has_tags();
  inline void clear_has_tags();
  inline void set_has_bot_count();
  inline void clear_has_bot_count();
  inline void set_has_num_spectators();
  inline void clear_has_num_spectators();
  inline void set_has_max_players();
  inline void clear_has_max_players();
  inline void set_has_slots_free();
  inline void clear_has_slots_free();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_server_loadavg();
  inline void clear_has_server_loadavg();
  inline void set_has_server_trusted();
  inline void clear_has_server_trusted();
  inline void set_has_server_dedicated();
  inline void clear_has_server_dedicated();
  inline void set_has_strict();
  inline void clear_has_strict();
  inline void set_has_fake_ip();
  inline void clear_has_fake_ip();
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_mvm_wave();
  inline void clear_has_mvm_wave();
  inline void set_has_mvm_credits_acquired();
  inline void clear_has_mvm_credits_acquired();
  inline void set_has_mvm_credits_dropped();
  inline void clear_has_mvm_credits_dropped();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_lobby_mm_version();
  inline void clear_has_lobby_mm_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_version_;
  int matchmaking_state_;
  ::std::string* map_;
  ::std::string* tags_;
  ::google::protobuf::uint32 bot_count_;
  ::google::protobuf::uint32 num_spectators_;
  ::google::protobuf::uint32 max_players_;
  ::google::protobuf::uint32 slots_free_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  bool server_trusted_;
  bool server_dedicated_;
  ::google::protobuf::uint32 strict_;
  ::std::string* fake_ip_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player > players_;
  int game_state_;
  int event_;
  ::google::protobuf::uint32 mvm_wave_;
  ::google::protobuf::uint32 mvm_credits_acquired_;
  ::google::protobuf::uint32 mvm_credits_dropped_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 lobby_mm_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerMatchmakingStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingProgress : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingProgress();
  virtual ~CMsgMatchmakingProgress();

  CMsgMatchmakingProgress(const CMsgMatchmakingProgress& from);

  inline CMsgMatchmakingProgress& operator=(const CMsgMatchmakingProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingProgress& default_instance();

  void Swap(CMsgMatchmakingProgress* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingProgress& from);
  void MergeFrom(const CMsgMatchmakingProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 avg_wait_time_new = 4;
  inline bool has_avg_wait_time_new() const;
  inline void clear_avg_wait_time_new();
  static const int kAvgWaitTimeNewFieldNumber = 4;
  inline ::google::protobuf::uint32 avg_wait_time_new() const;
  inline void set_avg_wait_time_new(::google::protobuf::uint32 value);

  // optional uint32 avg_wait_time_join_late = 5;
  inline bool has_avg_wait_time_join_late() const;
  inline void clear_avg_wait_time_join_late();
  static const int kAvgWaitTimeJoinLateFieldNumber = 5;
  inline ::google::protobuf::uint32 avg_wait_time_join_late() const;
  inline void set_avg_wait_time_join_late(::google::protobuf::uint32 value);

  // optional uint32 your_wait_time = 6;
  inline bool has_your_wait_time() const;
  inline void clear_your_wait_time();
  static const int kYourWaitTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 your_wait_time() const;
  inline void set_your_wait_time(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_searching_players = 8;
  inline bool has_matching_worldwide_searching_players() const;
  inline void clear_matching_worldwide_searching_players();
  static const int kMatchingWorldwideSearchingPlayersFieldNumber = 8;
  inline ::google::protobuf::uint32 matching_worldwide_searching_players() const;
  inline void set_matching_worldwide_searching_players(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_searching_players = 9;
  inline bool has_matching_near_you_searching_players() const;
  inline void clear_matching_near_you_searching_players();
  static const int kMatchingNearYouSearchingPlayersFieldNumber = 9;
  inline ::google::protobuf::uint32 matching_near_you_searching_players() const;
  inline void set_matching_near_you_searching_players(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_searching_players = 13;
  inline bool has_total_worldwide_searching_players() const;
  inline void clear_total_worldwide_searching_players();
  static const int kTotalWorldwideSearchingPlayersFieldNumber = 13;
  inline ::google::protobuf::uint32 total_worldwide_searching_players() const;
  inline void set_total_worldwide_searching_players(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_searching_players = 14;
  inline bool has_total_near_you_searching_players() const;
  inline void clear_total_near_you_searching_players();
  static const int kTotalNearYouSearchingPlayersFieldNumber = 14;
  inline ::google::protobuf::uint32 total_near_you_searching_players() const;
  inline void set_total_near_you_searching_players(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_active_players = 15;
  inline bool has_matching_worldwide_active_players() const;
  inline void clear_matching_worldwide_active_players();
  static const int kMatchingWorldwideActivePlayersFieldNumber = 15;
  inline ::google::protobuf::uint32 matching_worldwide_active_players() const;
  inline void set_matching_worldwide_active_players(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_active_players = 16;
  inline bool has_matching_near_you_active_players() const;
  inline void clear_matching_near_you_active_players();
  static const int kMatchingNearYouActivePlayersFieldNumber = 16;
  inline ::google::protobuf::uint32 matching_near_you_active_players() const;
  inline void set_matching_near_you_active_players(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_active_players = 17;
  inline bool has_total_worldwide_active_players() const;
  inline void clear_total_worldwide_active_players();
  static const int kTotalWorldwideActivePlayersFieldNumber = 17;
  inline ::google::protobuf::uint32 total_worldwide_active_players() const;
  inline void set_total_worldwide_active_players(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_active_players = 18;
  inline bool has_total_near_you_active_players() const;
  inline void clear_total_near_you_active_players();
  static const int kTotalNearYouActivePlayersFieldNumber = 18;
  inline ::google::protobuf::uint32 total_near_you_active_players() const;
  inline void set_total_near_you_active_players(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_empty_gameservers = 19;
  inline bool has_matching_worldwide_empty_gameservers() const;
  inline void clear_matching_worldwide_empty_gameservers();
  static const int kMatchingWorldwideEmptyGameserversFieldNumber = 19;
  inline ::google::protobuf::uint32 matching_worldwide_empty_gameservers() const;
  inline void set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_empty_gameservers = 20;
  inline bool has_matching_near_you_empty_gameservers() const;
  inline void clear_matching_near_you_empty_gameservers();
  static const int kMatchingNearYouEmptyGameserversFieldNumber = 20;
  inline ::google::protobuf::uint32 matching_near_you_empty_gameservers() const;
  inline void set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_empty_gameservers = 21;
  inline bool has_total_worldwide_empty_gameservers() const;
  inline void clear_total_worldwide_empty_gameservers();
  static const int kTotalWorldwideEmptyGameserversFieldNumber = 21;
  inline ::google::protobuf::uint32 total_worldwide_empty_gameservers() const;
  inline void set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_empty_gameservers = 22;
  inline bool has_total_near_you_empty_gameservers() const;
  inline void clear_total_near_you_empty_gameservers();
  static const int kTotalNearYouEmptyGameserversFieldNumber = 22;
  inline ::google::protobuf::uint32 total_near_you_empty_gameservers() const;
  inline void set_total_near_you_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 urgency_pct = 1;
  inline bool has_urgency_pct() const;
  inline void clear_urgency_pct();
  static const int kUrgencyPctFieldNumber = 1;
  inline ::google::protobuf::uint32 urgency_pct() const;
  inline void set_urgency_pct(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingProgress)
 private:
  inline void set_has_avg_wait_time_new();
  inline void clear_has_avg_wait_time_new();
  inline void set_has_avg_wait_time_join_late();
  inline void clear_has_avg_wait_time_join_late();
  inline void set_has_your_wait_time();
  inline void clear_has_your_wait_time();
  inline void set_has_matching_worldwide_searching_players();
  inline void clear_has_matching_worldwide_searching_players();
  inline void set_has_matching_near_you_searching_players();
  inline void clear_has_matching_near_you_searching_players();
  inline void set_has_total_worldwide_searching_players();
  inline void clear_has_total_worldwide_searching_players();
  inline void set_has_total_near_you_searching_players();
  inline void clear_has_total_near_you_searching_players();
  inline void set_has_matching_worldwide_active_players();
  inline void clear_has_matching_worldwide_active_players();
  inline void set_has_matching_near_you_active_players();
  inline void clear_has_matching_near_you_active_players();
  inline void set_has_total_worldwide_active_players();
  inline void clear_has_total_worldwide_active_players();
  inline void set_has_total_near_you_active_players();
  inline void clear_has_total_near_you_active_players();
  inline void set_has_matching_worldwide_empty_gameservers();
  inline void clear_has_matching_worldwide_empty_gameservers();
  inline void set_has_matching_near_you_empty_gameservers();
  inline void clear_has_matching_near_you_empty_gameservers();
  inline void set_has_total_worldwide_empty_gameservers();
  inline void clear_has_total_worldwide_empty_gameservers();
  inline void set_has_total_near_you_empty_gameservers();
  inline void clear_has_total_near_you_empty_gameservers();
  inline void set_has_urgency_pct();
  inline void clear_has_urgency_pct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 avg_wait_time_new_;
  ::google::protobuf::uint32 avg_wait_time_join_late_;
  ::google::protobuf::uint32 your_wait_time_;
  ::google::protobuf::uint32 matching_worldwide_searching_players_;
  ::google::protobuf::uint32 matching_near_you_searching_players_;
  ::google::protobuf::uint32 total_worldwide_searching_players_;
  ::google::protobuf::uint32 total_near_you_searching_players_;
  ::google::protobuf::uint32 matching_worldwide_active_players_;
  ::google::protobuf::uint32 matching_near_you_active_players_;
  ::google::protobuf::uint32 total_worldwide_active_players_;
  ::google::protobuf::uint32 total_near_you_active_players_;
  ::google::protobuf::uint32 matching_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 matching_near_you_empty_gameservers_;
  ::google::protobuf::uint32 total_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 total_near_you_empty_gameservers_;
  ::google::protobuf::uint32 urgency_pct_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Item : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo_Item();
  virtual ~CMsgMvMVictoryInfo_Item();

  CMsgMvMVictoryInfo_Item(const CMsgMvMVictoryInfo_Item& from);

  inline CMsgMvMVictoryInfo_Item& operator=(const CMsgMvMVictoryInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Item& default_instance();

  void Swap(CMsgMvMVictoryInfo_Item* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictoryInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo_Item& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1;
  inline bool has_grant_reason() const;
  inline void clear_grant_reason();
  static const int kGrantReasonFieldNumber = 1;
  inline ::CMsgMvMVictoryInfo_GrantReason grant_reason() const;
  inline void set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value);

  // optional bytes item_data = 2;
  inline bool has_item_data() const;
  inline void clear_item_data();
  static const int kItemDataFieldNumber = 2;
  inline const ::std::string& item_data() const;
  inline void set_item_data(const ::std::string& value);
  inline void set_item_data(const char* value);
  inline void set_item_data(const void* value, size_t size);
  inline ::std::string* mutable_item_data();
  inline ::std::string* release_item_data();
  inline void set_allocated_item_data(::std::string* item_data);

  // optional fixed64 squad_surplus_claimer_steam_id = 3;
  inline bool has_squad_surplus_claimer_steam_id() const;
  inline void clear_squad_surplus_claimer_steam_id();
  static const int kSquadSurplusClaimerSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 squad_surplus_claimer_steam_id() const;
  inline void set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Item)
 private:
  inline void set_has_grant_reason();
  inline void clear_has_grant_reason();
  inline void set_has_item_data();
  inline void clear_has_item_data();
  inline void set_has_squad_surplus_claimer_steam_id();
  inline void clear_has_squad_surplus_claimer_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* item_data_;
  ::google::protobuf::uint64 squad_surplus_claimer_steam_id_;
  int grant_reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Player : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo_Player();
  virtual ~CMsgMvMVictoryInfo_Player();

  CMsgMvMVictoryInfo_Player(const CMsgMvMVictoryInfo_Player& from);

  inline CMsgMvMVictoryInfo_Player& operator=(const CMsgMvMVictoryInfo_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Player& default_instance();

  void Swap(CMsgMvMVictoryInfo_Player* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictoryInfo_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo_Player& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool badge_granted = 3;
  inline bool has_badge_granted() const;
  inline void clear_badge_granted();
  static const int kBadgeGrantedFieldNumber = 3;
  inline bool badge_granted() const;
  inline void set_badge_granted(bool value);

  // optional bool badge_progress_updated = 4;
  inline bool has_badge_progress_updated() const;
  inline void clear_badge_progress_updated();
  static const int kBadgeProgressUpdatedFieldNumber = 4;
  inline bool badge_progress_updated() const;
  inline void set_badge_progress_updated(bool value);

  // optional bool badge_leveled = 5;
  inline bool has_badge_leveled() const;
  inline void clear_badge_leveled();
  static const int kBadgeLeveledFieldNumber = 5;
  inline bool badge_leveled() const;
  inline void set_badge_leveled(bool value);

  // optional uint32 badge_level = 6;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // optional uint32 badge_progress_bits = 7;
  inline bool has_badge_progress_bits() const;
  inline void clear_badge_progress_bits();
  static const int kBadgeProgressBitsFieldNumber = 7;
  inline ::google::protobuf::uint32 badge_progress_bits() const;
  inline void set_badge_progress_bits(::google::protobuf::uint32 value);

  // repeated .CMsgMvMVictoryInfo.Item items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::CMsgMvMVictoryInfo_Item& items(int index) const;
  inline ::CMsgMvMVictoryInfo_Item* mutable_items(int index);
  inline ::CMsgMvMVictoryInfo_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
      mutable_items();

  // optional bool voucher_missing = 9;
  inline bool has_voucher_missing() const;
  inline void clear_voucher_missing();
  static const int kVoucherMissingFieldNumber = 9;
  inline bool voucher_missing() const;
  inline void set_voucher_missing(bool value);

  // optional uint32 badge_points = 10;
  inline bool has_badge_points() const;
  inline void clear_badge_points();
  static const int kBadgePointsFieldNumber = 10;
  inline ::google::protobuf::uint32 badge_points() const;
  inline void set_badge_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_badge_granted();
  inline void clear_has_badge_granted();
  inline void set_has_badge_progress_updated();
  inline void clear_has_badge_progress_updated();
  inline void set_has_badge_leveled();
  inline void clear_has_badge_leveled();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();
  inline void set_has_badge_progress_bits();
  inline void clear_has_badge_progress_bits();
  inline void set_has_voucher_missing();
  inline void clear_has_voucher_missing();
  inline void set_has_badge_points();
  inline void clear_has_badge_points();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool badge_granted_;
  bool badge_progress_updated_;
  bool badge_leveled_;
  bool voucher_missing_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item > items_;
  ::google::protobuf::uint32 badge_progress_bits_;
  ::google::protobuf::uint32 badge_points_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo();
  virtual ~CMsgMvMVictoryInfo();

  CMsgMvMVictoryInfo(const CMsgMvMVictoryInfo& from);

  inline CMsgMvMVictoryInfo& operator=(const CMsgMvMVictoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo& default_instance();

  void Swap(CMsgMvMVictoryInfo* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo& from);
  void MergeFrom(const CMsgMvMVictoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgMvMVictoryInfo_Item Item;
  typedef CMsgMvMVictoryInfo_Player Player;

  typedef CMsgMvMVictoryInfo_GrantReason GrantReason;
  static const GrantReason INVALID = CMsgMvMVictoryInfo_GrantReason_INVALID;
  static const GrantReason BADGE_LEVELED = CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED;
  static const GrantReason SQUAD_SURPLUS = CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS;
  static const GrantReason MANN_UP = CMsgMvMVictoryInfo_GrantReason_MANN_UP;
  static const GrantReason HELP_A_NOOB = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
  static inline bool GrantReason_IsValid(int value) {
    return CMsgMvMVictoryInfo_GrantReason_IsValid(value);
  }
  static const GrantReason GrantReason_MIN =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN;
  static const GrantReason GrantReason_MAX =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX;
  static const int GrantReason_ARRAYSIZE =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GrantReason_descriptor() {
    return CMsgMvMVictoryInfo_GrantReason_descriptor();
  }
  static inline const ::std::string& GrantReason_Name(GrantReason value) {
    return CMsgMvMVictoryInfo_GrantReason_Name(value);
  }
  static inline bool GrantReason_Parse(const ::std::string& name,
      GrantReason* value) {
    return CMsgMvMVictoryInfo_GrantReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgMvMVictoryInfo.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgMvMVictoryInfo_Player& players(int index) const;
  inline ::CMsgMvMVictoryInfo_Player* mutable_players(int index);
  inline ::CMsgMvMVictoryInfo_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
      mutable_players();

  // optional string tour_name = 2;
  inline bool has_tour_name() const;
  inline void clear_tour_name();
  static const int kTourNameFieldNumber = 2;
  inline const ::std::string& tour_name() const;
  inline void set_tour_name(const ::std::string& value);
  inline void set_tour_name(const char* value);
  inline void set_tour_name(const char* value, size_t size);
  inline ::std::string* mutable_tour_name();
  inline ::std::string* release_tour_name();
  inline void set_allocated_tour_name(::std::string* tour_name);

  // optional string mission_name = 3;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 3;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  inline ::std::string* release_mission_name();
  inline void set_allocated_mission_name(::std::string* mission_name);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo)
 private:
  inline void set_has_tour_name();
  inline void clear_has_tour_name();
  inline void set_has_mission_name();
  inline void clear_has_mission_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player > players_;
  ::std::string* tour_name_;
  ::std::string* mission_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFHelloResponse : public ::google::protobuf::Message {
 public:
  CGCMsgTFHelloResponse();
  virtual ~CGCMsgTFHelloResponse();

  CGCMsgTFHelloResponse(const CGCMsgTFHelloResponse& from);

  inline CGCMsgTFHelloResponse& operator=(const CGCMsgTFHelloResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFHelloResponse& default_instance();

  void Swap(CGCMsgTFHelloResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgTFHelloResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFHelloResponse& from);
  void MergeFrom(const CGCMsgTFHelloResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version_check = 1;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 1;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);

  // repeated uint64 version_checksum = 2;
  inline int version_checksum_size() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 2;
  inline ::google::protobuf::uint64 version_checksum(int index) const;
  inline void set_version_checksum(int index, ::google::protobuf::uint64 value);
  inline void add_version_checksum(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      version_checksum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_version_checksum();

  // optional uint32 version_verbose = 3;
  inline bool has_version_verbose() const;
  inline void clear_version_verbose();
  static const int kVersionVerboseFieldNumber = 3;
  inline ::google::protobuf::uint32 version_verbose() const;
  inline void set_version_verbose(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFHelloResponse)
 private:
  inline void set_has_version_check();
  inline void clear_has_version_check();
  inline void set_has_version_verbose();
  inline void clear_has_version_verbose();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > version_checksum_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_verbose_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFHelloResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFSync : public ::google::protobuf::Message {
 public:
  CGCMsgTFSync();
  virtual ~CGCMsgTFSync();

  CGCMsgTFSync(const CGCMsgTFSync& from);

  inline CGCMsgTFSync& operator=(const CGCMsgTFSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSync& default_instance();

  void Swap(CGCMsgTFSync* other);

  // implements Message ----------------------------------------------

  CGCMsgTFSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFSync& from);
  void MergeFrom(const CGCMsgTFSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes version_checksum = 1;
  inline bool has_version_checksum() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  inline const ::std::string& version_checksum() const;
  inline void set_version_checksum(const ::std::string& value);
  inline void set_version_checksum(const char* value);
  inline void set_version_checksum(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum();
  inline ::std::string* release_version_checksum();
  inline void set_allocated_version_checksum(::std::string* version_checksum);

  // optional uint32 version_check = 2;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 2;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);

  // optional uint32 version_check_ex = 3;
  inline bool has_version_check_ex() const;
  inline void clear_version_check_ex();
  static const int kVersionCheckExFieldNumber = 3;
  inline ::google::protobuf::uint32 version_check_ex() const;
  inline void set_version_check_ex(::google::protobuf::uint32 value);

  // optional uint32 version_check_ex2 = 4;
  inline bool has_version_check_ex2() const;
  inline void clear_version_check_ex2();
  static const int kVersionCheckEx2FieldNumber = 4;
  inline ::google::protobuf::uint32 version_check_ex2() const;
  inline void set_version_check_ex2(::google::protobuf::uint32 value);

  // optional bytes version_checksum_ex = 5;
  inline bool has_version_checksum_ex() const;
  inline void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 5;
  inline const ::std::string& version_checksum_ex() const;
  inline void set_version_checksum_ex(const ::std::string& value);
  inline void set_version_checksum_ex(const char* value);
  inline void set_version_checksum_ex(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum_ex();
  inline ::std::string* release_version_checksum_ex();
  inline void set_allocated_version_checksum_ex(::std::string* version_checksum_ex);

  // @@protoc_insertion_point(class_scope:CGCMsgTFSync)
 private:
  inline void set_has_version_checksum();
  inline void clear_has_version_checksum();
  inline void set_has_version_check();
  inline void clear_has_version_check();
  inline void set_has_version_check_ex();
  inline void clear_has_version_check_ex();
  inline void set_has_version_check_ex2();
  inline void clear_has_version_check_ex2();
  inline void set_has_version_checksum_ex();
  inline void clear_has_version_checksum_ex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_checksum_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_check_ex_;
  ::std::string* version_checksum_ex_;
  ::google::protobuf::uint32 version_check_ex2_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFSync* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFSyncEx : public ::google::protobuf::Message {
 public:
  CGCMsgTFSyncEx();
  virtual ~CGCMsgTFSyncEx();

  CGCMsgTFSyncEx(const CGCMsgTFSyncEx& from);

  inline CGCMsgTFSyncEx& operator=(const CGCMsgTFSyncEx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSyncEx& default_instance();

  void Swap(CGCMsgTFSyncEx* other);

  // implements Message ----------------------------------------------

  CGCMsgTFSyncEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFSyncEx& from);
  void MergeFrom(const CGCMsgTFSyncEx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string version_checksum = 1;
  inline bool has_version_checksum() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  inline const ::std::string& version_checksum() const;
  inline void set_version_checksum(const ::std::string& value);
  inline void set_version_checksum(const char* value);
  inline void set_version_checksum(const char* value, size_t size);
  inline ::std::string* mutable_version_checksum();
  inline ::std::string* release_version_checksum();
  inline void set_allocated_version_checksum(::std::string* version_checksum);

  // optional bytes version_checksum_ex = 2;
  inline bool has_version_checksum_ex() const;
  inline void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 2;
  inline const ::std::string& version_checksum_ex() const;
  inline void set_version_checksum_ex(const ::std::string& value);
  inline void set_version_checksum_ex(const char* value);
  inline void set_version_checksum_ex(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum_ex();
  inline ::std::string* release_version_checksum_ex();
  inline void set_allocated_version_checksum_ex(::std::string* version_checksum_ex);

  // optional uint32 version_check = 3;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 3;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFSyncEx)
 private:
  inline void set_has_version_checksum();
  inline void clear_has_version_checksum();
  inline void set_has_version_checksum_ex();
  inline void clear_has_version_checksum_ex();
  inline void set_has_version_check();
  inline void clear_has_version_check();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_checksum_;
  ::std::string* version_checksum_ex_;
  ::google::protobuf::uint32 version_check_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFSyncEx* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictory_Player : public ::google::protobuf::Message {
 public:
  CMsgMvMVictory_Player();
  virtual ~CMsgMvMVictory_Player();

  CMsgMvMVictory_Player(const CMsgMvMVictory_Player& from);

  inline CMsgMvMVictory_Player& operator=(const CMsgMvMVictory_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory_Player& default_instance();

  void Swap(CMsgMvMVictory_Player* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictory_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictory_Player& from);
  void MergeFrom(const CMsgMvMVictory_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 2;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 2;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictory.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_squad_surplus();
  inline void clear_has_squad_surplus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool squad_surplus_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictory_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictory : public ::google::protobuf::Message {
 public:
  CMsgMvMVictory();
  virtual ~CMsgMvMVictory();

  CMsgMvMVictory(const CMsgMvMVictory& from);

  inline CMsgMvMVictory& operator=(const CMsgMvMVictory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory& default_instance();

  void Swap(CMsgMvMVictory* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictory& from);
  void MergeFrom(const CMsgMvMVictory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgMvMVictory_Player Player;

  // accessors -------------------------------------------------------

  // optional uint32 legacy_mission_index = 1;
  inline bool has_legacy_mission_index() const;
  inline void clear_legacy_mission_index();
  static const int kLegacyMissionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 legacy_mission_index() const;
  inline void set_legacy_mission_index(::google::protobuf::uint32 value);

  // optional string tour_name_mannup = 5;
  inline bool has_tour_name_mannup() const;
  inline void clear_tour_name_mannup();
  static const int kTourNameMannupFieldNumber = 5;
  inline const ::std::string& tour_name_mannup() const;
  inline void set_tour_name_mannup(const ::std::string& value);
  inline void set_tour_name_mannup(const char* value);
  inline void set_tour_name_mannup(const char* value, size_t size);
  inline ::std::string* mutable_tour_name_mannup();
  inline ::std::string* release_tour_name_mannup();
  inline void set_allocated_tour_name_mannup(::std::string* tour_name_mannup);

  // optional string mission_name = 6;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 6;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  inline ::std::string* release_mission_name();
  inline void set_allocated_mission_name(::std::string* mission_name);

  // repeated .CMsgMvMVictory.Player players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::CMsgMvMVictory_Player& players(int index) const;
  inline ::CMsgMvMVictory_Player* mutable_players(int index);
  inline ::CMsgMvMVictory_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
      mutable_players();

  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional fixed32 event_time = 4;
  inline bool has_event_time() const;
  inline void clear_event_time();
  static const int kEventTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 event_time() const;
  inline void set_event_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictory)
 private:
  inline void set_has_legacy_mission_index();
  inline void clear_has_legacy_mission_index();
  inline void set_has_tour_name_mannup();
  inline void clear_has_tour_name_mannup();
  inline void set_has_mission_name();
  inline void clear_has_mission_name();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_event_time();
  inline void clear_has_event_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tour_name_mannup_;
  ::std::string* mission_name_;
  ::google::protobuf::uint32 legacy_mission_index_;
  ::google::protobuf::uint32 event_time_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player > players_;
  ::google::protobuf::uint64 lobby_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMMannUpVictoryReply : public ::google::protobuf::Message {
 public:
  CMsgMvMMannUpVictoryReply();
  virtual ~CMsgMvMMannUpVictoryReply();

  CMsgMvMMannUpVictoryReply(const CMsgMvMMannUpVictoryReply& from);

  inline CMsgMvMMannUpVictoryReply& operator=(const CMsgMvMMannUpVictoryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMMannUpVictoryReply& default_instance();

  void Swap(CMsgMvMMannUpVictoryReply* other);

  // implements Message ----------------------------------------------

  CMsgMvMMannUpVictoryReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMMannUpVictoryReply& from);
  void MergeFrom(const CMsgMvMMannUpVictoryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgMvMMannUpVictoryReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMMannUpVictoryReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobby : public ::google::protobuf::Message {
 public:
  CMsgGameServerKickingLobby();
  virtual ~CMsgGameServerKickingLobby();

  CMsgGameServerKickingLobby(const CMsgGameServerKickingLobby& from);

  inline CMsgGameServerKickingLobby& operator=(const CMsgGameServerKickingLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobby& default_instance();

  void Swap(CMsgGameServerKickingLobby* other);

  // implements Message ----------------------------------------------

  CMsgGameServerKickingLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerKickingLobby& from);
  void MergeFrom(const CMsgGameServerKickingLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 match_id = 4;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobby)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerKickingLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobbyResponse : public ::google::protobuf::Message {
 public:
  CMsgGameServerKickingLobbyResponse();
  virtual ~CMsgGameServerKickingLobbyResponse();

  CMsgGameServerKickingLobbyResponse(const CMsgGameServerKickingLobbyResponse& from);

  inline CMsgGameServerKickingLobbyResponse& operator=(const CMsgGameServerKickingLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobbyResponse& default_instance();

  void Swap(CMsgGameServerKickingLobbyResponse* other);

  // implements Message ----------------------------------------------

  CMsgGameServerKickingLobbyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerKickingLobbyResponse& from);
  void MergeFrom(const CMsgGameServerKickingLobbyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobbyResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerKickingLobbyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveGameAndPrepareToJoinParty : public ::google::protobuf::Message {
 public:
  CMsgLeaveGameAndPrepareToJoinParty();
  virtual ~CMsgLeaveGameAndPrepareToJoinParty();

  CMsgLeaveGameAndPrepareToJoinParty(const CMsgLeaveGameAndPrepareToJoinParty& from);

  inline CMsgLeaveGameAndPrepareToJoinParty& operator=(const CMsgLeaveGameAndPrepareToJoinParty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveGameAndPrepareToJoinParty& default_instance();

  void Swap(CMsgLeaveGameAndPrepareToJoinParty* other);

  // implements Message ----------------------------------------------

  CMsgLeaveGameAndPrepareToJoinParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void MergeFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgLeaveGameAndPrepareToJoinParty)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaveGameAndPrepareToJoinParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerLeftMatch : public ::google::protobuf::Message {
 public:
  CMsgPlayerLeftMatch();
  virtual ~CMsgPlayerLeftMatch();

  CMsgPlayerLeftMatch(const CMsgPlayerLeftMatch& from);

  inline CMsgPlayerLeftMatch& operator=(const CMsgPlayerLeftMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerLeftMatch& default_instance();

  void Swap(CMsgPlayerLeftMatch* other);

  // implements Message ----------------------------------------------

  CMsgPlayerLeftMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerLeftMatch& from);
  void MergeFrom(const CMsgPlayerLeftMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional .TFMatchLeaveReason leave_reason = 2;
  inline bool has_leave_reason() const;
  inline void clear_leave_reason();
  static const int kLeaveReasonFieldNumber = 2;
  inline ::TFMatchLeaveReason leave_reason() const;
  inline void set_leave_reason(::TFMatchLeaveReason value);

  // optional bool was_abandon = 3;
  inline bool has_was_abandon() const;
  inline void clear_was_abandon();
  static const int kWasAbandonFieldNumber = 3;
  inline bool was_abandon() const;
  inline void set_was_abandon(bool value);

  // optional uint64 lobby_id = 4;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 match_id = 5;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // repeated .CMsgTFXPSource xp_breakdown = 6;
  inline int xp_breakdown_size() const;
  inline void clear_xp_breakdown();
  static const int kXpBreakdownFieldNumber = 6;
  inline const ::CMsgTFXPSource& xp_breakdown(int index) const;
  inline ::CMsgTFXPSource* mutable_xp_breakdown(int index);
  inline ::CMsgTFXPSource* add_xp_breakdown();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
      xp_breakdown() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
      mutable_xp_breakdown();

  // @@protoc_insertion_point(class_scope:CMsgPlayerLeftMatch)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_leave_reason();
  inline void clear_has_leave_reason();
  inline void set_has_was_abandon();
  inline void clear_has_was_abandon();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  int leave_reason_;
  bool was_abandon_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource > xp_breakdown_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPlayerLeftMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerLeftMatchResponse : public ::google::protobuf::Message {
 public:
  CMsgPlayerLeftMatchResponse();
  virtual ~CMsgPlayerLeftMatchResponse();

  CMsgPlayerLeftMatchResponse(const CMsgPlayerLeftMatchResponse& from);

  inline CMsgPlayerLeftMatchResponse& operator=(const CMsgPlayerLeftMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerLeftMatchResponse& default_instance();

  void Swap(CMsgPlayerLeftMatchResponse* other);

  // implements Message ----------------------------------------------

  CMsgPlayerLeftMatchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerLeftMatchResponse& from);
  void MergeFrom(const CMsgPlayerLeftMatchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPlayerLeftMatchResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPlayerLeftMatchResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgProcessMatchVoteKick_Vote : public ::google::protobuf::Message {
 public:
  CMsgProcessMatchVoteKick_Vote();
  virtual ~CMsgProcessMatchVoteKick_Vote();

  CMsgProcessMatchVoteKick_Vote(const CMsgProcessMatchVoteKick_Vote& from);

  inline CMsgProcessMatchVoteKick_Vote& operator=(const CMsgProcessMatchVoteKick_Vote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgProcessMatchVoteKick_Vote& default_instance();

  void Swap(CMsgProcessMatchVoteKick_Vote* other);

  // implements Message ----------------------------------------------

  CMsgProcessMatchVoteKick_Vote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgProcessMatchVoteKick_Vote& from);
  void MergeFrom(const CMsgProcessMatchVoteKick_Vote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool vote_yay = 2;
  inline bool has_vote_yay() const;
  inline void clear_vote_yay();
  static const int kVoteYayFieldNumber = 2;
  inline bool vote_yay() const;
  inline void set_vote_yay(bool value);

  // @@protoc_insertion_point(class_scope:CMsgProcessMatchVoteKick.Vote)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_vote_yay();
  inline void clear_has_vote_yay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool vote_yay_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgProcessMatchVoteKick_Vote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgProcessMatchVoteKick : public ::google::protobuf::Message {
 public:
  CMsgProcessMatchVoteKick();
  virtual ~CMsgProcessMatchVoteKick();

  CMsgProcessMatchVoteKick(const CMsgProcessMatchVoteKick& from);

  inline CMsgProcessMatchVoteKick& operator=(const CMsgProcessMatchVoteKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgProcessMatchVoteKick& default_instance();

  void Swap(CMsgProcessMatchVoteKick* other);

  // implements Message ----------------------------------------------

  CMsgProcessMatchVoteKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgProcessMatchVoteKick& from);
  void MergeFrom(const CMsgProcessMatchVoteKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgProcessMatchVoteKick_Vote Vote;

  // accessors -------------------------------------------------------

  // optional fixed64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional fixed64 initiator_steam_id = 2;
  inline bool has_initiator_steam_id() const;
  inline void clear_initiator_steam_id();
  static const int kInitiatorSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 initiator_steam_id() const;
  inline void set_initiator_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 target_steam_id = 3;
  inline bool has_target_steam_id() const;
  inline void clear_target_steam_id();
  static const int kTargetSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 target_steam_id() const;
  inline void set_target_steam_id(::google::protobuf::uint64 value);

  // optional .TFVoteKickReason reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::TFVoteKickReason reason() const;
  inline void set_reason(::TFVoteKickReason value);

  // repeated .CMsgProcessMatchVoteKick.Vote votes = 5;
  inline int votes_size() const;
  inline void clear_votes();
  static const int kVotesFieldNumber = 5;
  inline const ::CMsgProcessMatchVoteKick_Vote& votes(int index) const;
  inline ::CMsgProcessMatchVoteKick_Vote* mutable_votes(int index);
  inline ::CMsgProcessMatchVoteKick_Vote* add_votes();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgProcessMatchVoteKick_Vote >&
      votes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgProcessMatchVoteKick_Vote >*
      mutable_votes();

  // optional bool default_pass = 6;
  inline bool has_default_pass() const;
  inline void clear_default_pass();
  static const int kDefaultPassFieldNumber = 6;
  inline bool default_pass() const;
  inline void set_default_pass(bool value);

  // @@protoc_insertion_point(class_scope:CMsgProcessMatchVoteKick)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_initiator_steam_id();
  inline void clear_has_initiator_steam_id();
  inline void set_has_target_steam_id();
  inline void clear_has_target_steam_id();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_default_pass();
  inline void clear_has_default_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint64 initiator_steam_id_;
  ::google::protobuf::uint64 target_steam_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgProcessMatchVoteKick_Vote > votes_;
  int reason_;
  bool default_pass_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgProcessMatchVoteKick* default_instance_;
};
// -------------------------------------------------------------------

class CMsgProcessMatchVoteKickResponse : public ::google::protobuf::Message {
 public:
  CMsgProcessMatchVoteKickResponse();
  virtual ~CMsgProcessMatchVoteKickResponse();

  CMsgProcessMatchVoteKickResponse(const CMsgProcessMatchVoteKickResponse& from);

  inline CMsgProcessMatchVoteKickResponse& operator=(const CMsgProcessMatchVoteKickResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgProcessMatchVoteKickResponse& default_instance();

  void Swap(CMsgProcessMatchVoteKickResponse* other);

  // implements Message ----------------------------------------------

  CMsgProcessMatchVoteKickResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgProcessMatchVoteKickResponse& from);
  void MergeFrom(const CMsgProcessMatchVoteKickResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool rip = 1;
  inline bool has_rip() const;
  inline void clear_rip();
  static const int kRipFieldNumber = 1;
  inline bool rip() const;
  inline void set_rip(bool value);

  // @@protoc_insertion_point(class_scope:CMsgProcessMatchVoteKickResponse)
 private:
  inline void set_has_rip();
  inline void clear_has_rip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool rip_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgProcessMatchVoteKickResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHalloween_ServerBossEvent : public ::google::protobuf::Message {
 public:
  CMsgHalloween_ServerBossEvent();
  virtual ~CMsgHalloween_ServerBossEvent();

  CMsgHalloween_ServerBossEvent(const CMsgHalloween_ServerBossEvent& from);

  inline CMsgHalloween_ServerBossEvent& operator=(const CMsgHalloween_ServerBossEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_ServerBossEvent& default_instance();

  void Swap(CMsgHalloween_ServerBossEvent* other);

  // implements Message ----------------------------------------------

  CMsgHalloween_ServerBossEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHalloween_ServerBossEvent& from);
  void MergeFrom(const CMsgHalloween_ServerBossEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_counter = 1;
  inline bool has_event_counter() const;
  inline void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  inline ::google::protobuf::uint32 event_counter() const;
  inline void set_event_counter(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 boss_type = 3;
  inline bool has_boss_type() const;
  inline void clear_boss_type();
  static const int kBossTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 boss_type() const;
  inline void set_boss_type(::google::protobuf::uint32 value);

  // optional uint32 boss_level = 4;
  inline bool has_boss_level() const;
  inline void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 boss_level() const;
  inline void set_boss_level(::google::protobuf::uint32 value);

  // optional uint32 event_type = 5;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);

  // optional uint32 players_involved = 6;
  inline bool has_players_involved() const;
  inline void clear_players_involved();
  static const int kPlayersInvolvedFieldNumber = 6;
  inline ::google::protobuf::uint32 players_involved() const;
  inline void set_players_involved(::google::protobuf::uint32 value);

  // optional float elapsed_time = 7;
  inline bool has_elapsed_time() const;
  inline void clear_elapsed_time();
  static const int kElapsedTimeFieldNumber = 7;
  inline float elapsed_time() const;
  inline void set_elapsed_time(float value);

  // @@protoc_insertion_point(class_scope:CMsgHalloween_ServerBossEvent)
 private:
  inline void set_has_event_counter();
  inline void clear_has_event_counter();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_boss_type();
  inline void clear_has_boss_type();
  inline void set_has_boss_level();
  inline void clear_has_boss_level();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_players_involved();
  inline void clear_has_players_involved();
  inline void set_has_elapsed_time();
  inline void clear_has_elapsed_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 boss_type_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 players_involved_;
  float elapsed_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHalloween_ServerBossEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHalloween_Merasmus2012 : public ::google::protobuf::Message {
 public:
  CMsgHalloween_Merasmus2012();
  virtual ~CMsgHalloween_Merasmus2012();

  CMsgHalloween_Merasmus2012(const CMsgHalloween_Merasmus2012& from);

  inline CMsgHalloween_Merasmus2012& operator=(const CMsgHalloween_Merasmus2012& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_Merasmus2012& default_instance();

  void Swap(CMsgHalloween_Merasmus2012* other);

  // implements Message ----------------------------------------------

  CMsgHalloween_Merasmus2012* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHalloween_Merasmus2012& from);
  void MergeFrom(const CMsgHalloween_Merasmus2012& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_counter = 1;
  inline bool has_event_counter() const;
  inline void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  inline ::google::protobuf::uint32 event_counter() const;
  inline void set_event_counter(::google::protobuf::uint32 value);

  // optional fixed32 time_submitted = 2;
  inline bool has_time_submitted() const;
  inline void clear_time_submitted();
  static const int kTimeSubmittedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_submitted() const;
  inline void set_time_submitted(::google::protobuf::uint32 value);

  // optional bool is_valve_server = 3;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 3;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);

  // optional uint32 boss_level = 4;
  inline bool has_boss_level() const;
  inline void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 boss_level() const;
  inline void set_boss_level(::google::protobuf::uint32 value);

  // optional uint32 spawned_health = 5;
  inline bool has_spawned_health() const;
  inline void clear_spawned_health();
  static const int kSpawnedHealthFieldNumber = 5;
  inline ::google::protobuf::uint32 spawned_health() const;
  inline void set_spawned_health(::google::protobuf::uint32 value);

  // optional uint32 remaining_health = 6;
  inline bool has_remaining_health() const;
  inline void clear_remaining_health();
  static const int kRemainingHealthFieldNumber = 6;
  inline ::google::protobuf::uint32 remaining_health() const;
  inline void set_remaining_health(::google::protobuf::uint32 value);

  // optional uint32 life_time = 7;
  inline bool has_life_time() const;
  inline void clear_life_time();
  static const int kLifeTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 life_time() const;
  inline void set_life_time(::google::protobuf::uint32 value);

  // optional uint32 bomb_kills = 8;
  inline bool has_bomb_kills() const;
  inline void clear_bomb_kills();
  static const int kBombKillsFieldNumber = 8;
  inline ::google::protobuf::uint32 bomb_kills() const;
  inline void set_bomb_kills(::google::protobuf::uint32 value);

  // optional uint32 staff_kills = 9;
  inline bool has_staff_kills() const;
  inline void clear_staff_kills();
  static const int kStaffKillsFieldNumber = 9;
  inline ::google::protobuf::uint32 staff_kills() const;
  inline void set_staff_kills(::google::protobuf::uint32 value);

  // optional uint32 pvp_kills = 10;
  inline bool has_pvp_kills() const;
  inline void clear_pvp_kills();
  static const int kPvpKillsFieldNumber = 10;
  inline ::google::protobuf::uint32 pvp_kills() const;
  inline void set_pvp_kills(::google::protobuf::uint32 value);

  // optional uint32 prophunt_time1 = 11;
  inline bool has_prophunt_time1() const;
  inline void clear_prophunt_time1();
  static const int kProphuntTime1FieldNumber = 11;
  inline ::google::protobuf::uint32 prophunt_time1() const;
  inline void set_prophunt_time1(::google::protobuf::uint32 value);

  // optional uint32 prophunt_time2 = 12;
  inline bool has_prophunt_time2() const;
  inline void clear_prophunt_time2();
  static const int kProphuntTime2FieldNumber = 12;
  inline ::google::protobuf::uint32 prophunt_time2() const;
  inline void set_prophunt_time2(::google::protobuf::uint32 value);

  // optional uint32 dmg_scout = 13;
  inline bool has_dmg_scout() const;
  inline void clear_dmg_scout();
  static const int kDmgScoutFieldNumber = 13;
  inline ::google::protobuf::uint32 dmg_scout() const;
  inline void set_dmg_scout(::google::protobuf::uint32 value);

  // optional uint32 dmg_sniper = 14;
  inline bool has_dmg_sniper() const;
  inline void clear_dmg_sniper();
  static const int kDmgSniperFieldNumber = 14;
  inline ::google::protobuf::uint32 dmg_sniper() const;
  inline void set_dmg_sniper(::google::protobuf::uint32 value);

  // optional uint32 dmg_soldier = 15;
  inline bool has_dmg_soldier() const;
  inline void clear_dmg_soldier();
  static const int kDmgSoldierFieldNumber = 15;
  inline ::google::protobuf::uint32 dmg_soldier() const;
  inline void set_dmg_soldier(::google::protobuf::uint32 value);

  // optional uint32 dmg_demo = 16;
  inline bool has_dmg_demo() const;
  inline void clear_dmg_demo();
  static const int kDmgDemoFieldNumber = 16;
  inline ::google::protobuf::uint32 dmg_demo() const;
  inline void set_dmg_demo(::google::protobuf::uint32 value);

  // optional uint32 dmg_medic = 17;
  inline bool has_dmg_medic() const;
  inline void clear_dmg_medic();
  static const int kDmgMedicFieldNumber = 17;
  inline ::google::protobuf::uint32 dmg_medic() const;
  inline void set_dmg_medic(::google::protobuf::uint32 value);

  // optional uint32 dmg_heavy = 18;
  inline bool has_dmg_heavy() const;
  inline void clear_dmg_heavy();
  static const int kDmgHeavyFieldNumber = 18;
  inline ::google::protobuf::uint32 dmg_heavy() const;
  inline void set_dmg_heavy(::google::protobuf::uint32 value);

  // optional uint32 dmg_pyro = 19;
  inline bool has_dmg_pyro() const;
  inline void clear_dmg_pyro();
  static const int kDmgPyroFieldNumber = 19;
  inline ::google::protobuf::uint32 dmg_pyro() const;
  inline void set_dmg_pyro(::google::protobuf::uint32 value);

  // optional uint32 dmg_spy = 20;
  inline bool has_dmg_spy() const;
  inline void clear_dmg_spy();
  static const int kDmgSpyFieldNumber = 20;
  inline ::google::protobuf::uint32 dmg_spy() const;
  inline void set_dmg_spy(::google::protobuf::uint32 value);

  // optional uint32 dmg_engineer = 21;
  inline bool has_dmg_engineer() const;
  inline void clear_dmg_engineer();
  static const int kDmgEngineerFieldNumber = 21;
  inline ::google::protobuf::uint32 dmg_engineer() const;
  inline void set_dmg_engineer(::google::protobuf::uint32 value);

  // optional uint32 scout_count = 22;
  inline bool has_scout_count() const;
  inline void clear_scout_count();
  static const int kScoutCountFieldNumber = 22;
  inline ::google::protobuf::uint32 scout_count() const;
  inline void set_scout_count(::google::protobuf::uint32 value);

  // optional uint32 sniper_count = 23;
  inline bool has_sniper_count() const;
  inline void clear_sniper_count();
  static const int kSniperCountFieldNumber = 23;
  inline ::google::protobuf::uint32 sniper_count() const;
  inline void set_sniper_count(::google::protobuf::uint32 value);

  // optional uint32 solider_count = 24;
  inline bool has_solider_count() const;
  inline void clear_solider_count();
  static const int kSoliderCountFieldNumber = 24;
  inline ::google::protobuf::uint32 solider_count() const;
  inline void set_solider_count(::google::protobuf::uint32 value);

  // optional uint32 demo_count = 25;
  inline bool has_demo_count() const;
  inline void clear_demo_count();
  static const int kDemoCountFieldNumber = 25;
  inline ::google::protobuf::uint32 demo_count() const;
  inline void set_demo_count(::google::protobuf::uint32 value);

  // optional uint32 medic_count = 26;
  inline bool has_medic_count() const;
  inline void clear_medic_count();
  static const int kMedicCountFieldNumber = 26;
  inline ::google::protobuf::uint32 medic_count() const;
  inline void set_medic_count(::google::protobuf::uint32 value);

  // optional uint32 heavy_count = 27;
  inline bool has_heavy_count() const;
  inline void clear_heavy_count();
  static const int kHeavyCountFieldNumber = 27;
  inline ::google::protobuf::uint32 heavy_count() const;
  inline void set_heavy_count(::google::protobuf::uint32 value);

  // optional uint32 pyro_count = 28;
  inline bool has_pyro_count() const;
  inline void clear_pyro_count();
  static const int kPyroCountFieldNumber = 28;
  inline ::google::protobuf::uint32 pyro_count() const;
  inline void set_pyro_count(::google::protobuf::uint32 value);

  // optional uint32 spy_count = 29;
  inline bool has_spy_count() const;
  inline void clear_spy_count();
  static const int kSpyCountFieldNumber = 29;
  inline ::google::protobuf::uint32 spy_count() const;
  inline void set_spy_count(::google::protobuf::uint32 value);

  // optional uint32 engineer_count = 30;
  inline bool has_engineer_count() const;
  inline void clear_engineer_count();
  static const int kEngineerCountFieldNumber = 30;
  inline ::google::protobuf::uint32 engineer_count() const;
  inline void set_engineer_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgHalloween_Merasmus2012)
 private:
  inline void set_has_event_counter();
  inline void clear_has_event_counter();
  inline void set_has_time_submitted();
  inline void clear_has_time_submitted();
  inline void set_has_is_valve_server();
  inline void clear_has_is_valve_server();
  inline void set_has_boss_level();
  inline void clear_has_boss_level();
  inline void set_has_spawned_health();
  inline void clear_has_spawned_health();
  inline void set_has_remaining_health();
  inline void clear_has_remaining_health();
  inline void set_has_life_time();
  inline void clear_has_life_time();
  inline void set_has_bomb_kills();
  inline void clear_has_bomb_kills();
  inline void set_has_staff_kills();
  inline void clear_has_staff_kills();
  inline void set_has_pvp_kills();
  inline void clear_has_pvp_kills();
  inline void set_has_prophunt_time1();
  inline void clear_has_prophunt_time1();
  inline void set_has_prophunt_time2();
  inline void clear_has_prophunt_time2();
  inline void set_has_dmg_scout();
  inline void clear_has_dmg_scout();
  inline void set_has_dmg_sniper();
  inline void clear_has_dmg_sniper();
  inline void set_has_dmg_soldier();
  inline void clear_has_dmg_soldier();
  inline void set_has_dmg_demo();
  inline void clear_has_dmg_demo();
  inline void set_has_dmg_medic();
  inline void clear_has_dmg_medic();
  inline void set_has_dmg_heavy();
  inline void clear_has_dmg_heavy();
  inline void set_has_dmg_pyro();
  inline void clear_has_dmg_pyro();
  inline void set_has_dmg_spy();
  inline void clear_has_dmg_spy();
  inline void set_has_dmg_engineer();
  inline void clear_has_dmg_engineer();
  inline void set_has_scout_count();
  inline void clear_has_scout_count();
  inline void set_has_sniper_count();
  inline void clear_has_sniper_count();
  inline void set_has_solider_count();
  inline void clear_has_solider_count();
  inline void set_has_demo_count();
  inline void clear_has_demo_count();
  inline void set_has_medic_count();
  inline void clear_has_medic_count();
  inline void set_has_heavy_count();
  inline void clear_has_heavy_count();
  inline void set_has_pyro_count();
  inline void clear_has_pyro_count();
  inline void set_has_spy_count();
  inline void clear_has_spy_count();
  inline void set_has_engineer_count();
  inline void clear_has_engineer_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 time_submitted_;
  bool is_valve_server_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 spawned_health_;
  ::google::protobuf::uint32 remaining_health_;
  ::google::protobuf::uint32 life_time_;
  ::google::protobuf::uint32 bomb_kills_;
  ::google::protobuf::uint32 staff_kills_;
  ::google::protobuf::uint32 pvp_kills_;
  ::google::protobuf::uint32 prophunt_time1_;
  ::google::protobuf::uint32 prophunt_time2_;
  ::google::protobuf::uint32 dmg_scout_;
  ::google::protobuf::uint32 dmg_sniper_;
  ::google::protobuf::uint32 dmg_soldier_;
  ::google::protobuf::uint32 dmg_demo_;
  ::google::protobuf::uint32 dmg_medic_;
  ::google::protobuf::uint32 dmg_heavy_;
  ::google::protobuf::uint32 dmg_pyro_;
  ::google::protobuf::uint32 dmg_spy_;
  ::google::protobuf::uint32 dmg_engineer_;
  ::google::protobuf::uint32 scout_count_;
  ::google::protobuf::uint32 sniper_count_;
  ::google::protobuf::uint32 solider_count_;
  ::google::protobuf::uint32 demo_count_;
  ::google::protobuf::uint32 medic_count_;
  ::google::protobuf::uint32 heavy_count_;
  ::google::protobuf::uint32 pyro_count_;
  ::google::protobuf::uint32 spy_count_;
  ::google::protobuf::uint32 engineer_count_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHalloween_Merasmus2012* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel_Player : public ::google::protobuf::Message {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel_Player();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel_Player();

  CMsgUpdateHalloweenMerasmusLootLevel_Player(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);

  inline CMsgUpdateHalloweenMerasmusLootLevel_Player& operator=(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel_Player& default_instance();

  void Swap(CMsgUpdateHalloweenMerasmusLootLevel_Player* other);

  // implements Message ----------------------------------------------

  CMsgUpdateHalloweenMerasmusLootLevel_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpdateHalloweenMerasmusLootLevel_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel : public ::google::protobuf::Message {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel();

  CMsgUpdateHalloweenMerasmusLootLevel(const CMsgUpdateHalloweenMerasmusLootLevel& from);

  inline CMsgUpdateHalloweenMerasmusLootLevel& operator=(const CMsgUpdateHalloweenMerasmusLootLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel& default_instance();

  void Swap(CMsgUpdateHalloweenMerasmusLootLevel* other);

  // implements Message ----------------------------------------------

  CMsgUpdateHalloweenMerasmusLootLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgUpdateHalloweenMerasmusLootLevel_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& players(int index) const;
  inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* mutable_players(int index);
  inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
      mutable_players();

  // optional uint32 merasmus_level = 2;
  inline bool has_merasmus_level() const;
  inline void clear_merasmus_level();
  static const int kMerasmusLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 merasmus_level() const;
  inline void set_merasmus_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel)
 private:
  inline void set_has_merasmus_level();
  inline void clear_has_merasmus_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player > players_;
  ::google::protobuf::uint32 merasmus_level_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpdateHalloweenMerasmusLootLevel* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_String : public ::google::protobuf::Message {
 public:
  CAttribute_String();
  virtual ~CAttribute_String();

  CAttribute_String(const CAttribute_String& from);

  inline CAttribute_String& operator=(const CAttribute_String& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_String& default_instance();

  void Swap(CAttribute_String* other);

  // implements Message ----------------------------------------------

  CAttribute_String* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_String& from);
  void MergeFrom(const CAttribute_String& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CAttribute_String)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_String* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent : public ::google::protobuf::Message {
 public:
  CAttribute_DynamicRecipeComponent();
  virtual ~CAttribute_DynamicRecipeComponent();

  CAttribute_DynamicRecipeComponent(const CAttribute_DynamicRecipeComponent& from);

  inline CAttribute_DynamicRecipeComponent& operator=(const CAttribute_DynamicRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent& default_instance();

  void Swap(CAttribute_DynamicRecipeComponent* other);

  // implements Message ----------------------------------------------

  CAttribute_DynamicRecipeComponent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_DynamicRecipeComponent& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 item_quality = 2;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 item_quality() const;
  inline void set_item_quality(::google::protobuf::uint32 value);

  // optional uint32 component_flags = 3;
  inline bool has_component_flags() const;
  inline void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 component_flags() const;
  inline void set_component_flags(::google::protobuf::uint32 value);

  // optional string attributes_string = 4;
  inline bool has_attributes_string() const;
  inline void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 4;
  inline const ::std::string& attributes_string() const;
  inline void set_attributes_string(const ::std::string& value);
  inline void set_attributes_string(const char* value);
  inline void set_attributes_string(const char* value, size_t size);
  inline ::std::string* mutable_attributes_string();
  inline ::std::string* release_attributes_string();
  inline void set_allocated_attributes_string(::std::string* attributes_string);

  // optional uint32 num_required = 5;
  inline bool has_num_required() const;
  inline void clear_num_required();
  static const int kNumRequiredFieldNumber = 5;
  inline ::google::protobuf::uint32 num_required() const;
  inline void set_num_required(::google::protobuf::uint32 value);

  // optional uint32 num_fulfilled = 6;
  inline bool has_num_fulfilled() const;
  inline void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 6;
  inline ::google::protobuf::uint32 num_fulfilled() const;
  inline void set_num_fulfilled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_item_quality();
  inline void clear_has_item_quality();
  inline void set_has_component_flags();
  inline void clear_has_component_flags();
  inline void set_has_attributes_string();
  inline void clear_has_attributes_string();
  inline void set_has_num_required();
  inline void clear_has_num_required();
  inline void set_has_num_fulfilled();
  inline void clear_has_num_fulfilled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_quality_;
  ::std::string* attributes_string_;
  ::google::protobuf::uint32 component_flags_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 num_fulfilled_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_DynamicRecipeComponent* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT : public ::google::protobuf::Message {
 public:
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
  virtual ~CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();

  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);

  inline CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& operator=(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& default_instance();

  void Swap(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* other);

  // implements Message ----------------------------------------------

  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 item_quality = 3;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 item_quality() const;
  inline void set_item_quality(::google::protobuf::uint32 value);

  // optional uint32 component_flags = 4;
  inline bool has_component_flags() const;
  inline void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 component_flags() const;
  inline void set_component_flags(::google::protobuf::uint32 value);

  // optional uint32 item_flags = 5;
  inline bool has_item_flags() const;
  inline void clear_item_flags();
  static const int kItemFlagsFieldNumber = 5;
  inline ::google::protobuf::uint32 item_flags() const;
  inline void set_item_flags(::google::protobuf::uint32 value);

  // optional string attributes_string = 6;
  inline bool has_attributes_string() const;
  inline void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 6;
  inline const ::std::string& attributes_string() const;
  inline void set_attributes_string(const ::std::string& value);
  inline void set_attributes_string(const char* value);
  inline void set_attributes_string(const char* value, size_t size);
  inline ::std::string* mutable_attributes_string();
  inline ::std::string* release_attributes_string();
  inline void set_allocated_attributes_string(::std::string* attributes_string);

  // optional uint32 num_required = 7;
  inline bool has_num_required() const;
  inline void clear_num_required();
  static const int kNumRequiredFieldNumber = 7;
  inline ::google::protobuf::uint32 num_required() const;
  inline void set_num_required(::google::protobuf::uint32 value);

  // optional uint32 item_count = 8;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 8;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // optional uint32 num_fulfilled = 9;
  inline bool has_num_fulfilled() const;
  inline void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 9;
  inline ::google::protobuf::uint32 num_fulfilled() const;
  inline void set_num_fulfilled(::google::protobuf::uint32 value);

  // optional uint32 items_fulfilled = 10;
  inline bool has_items_fulfilled() const;
  inline void clear_items_fulfilled();
  static const int kItemsFulfilledFieldNumber = 10;
  inline ::google::protobuf::uint32 items_fulfilled() const;
  inline void set_items_fulfilled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_item_def();
  inline void clear_has_item_def();
  inline void set_has_item_quality();
  inline void clear_has_item_quality();
  inline void set_has_component_flags();
  inline void clear_has_component_flags();
  inline void set_has_item_flags();
  inline void clear_has_item_flags();
  inline void set_has_attributes_string();
  inline void clear_has_attributes_string();
  inline void set_has_num_required();
  inline void clear_has_num_required();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_num_fulfilled();
  inline void clear_has_num_fulfilled();
  inline void set_has_items_fulfilled();
  inline void clear_has_items_fulfilled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 item_quality_;
  ::google::protobuf::uint32 component_flags_;
  ::std::string* attributes_string_;
  ::google::protobuf::uint32 item_flags_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 num_fulfilled_;
  ::google::protobuf::uint32 items_fulfilled_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_ItemSlotCriteria : public ::google::protobuf::Message {
 public:
  CAttribute_ItemSlotCriteria();
  virtual ~CAttribute_ItemSlotCriteria();

  CAttribute_ItemSlotCriteria(const CAttribute_ItemSlotCriteria& from);

  inline CAttribute_ItemSlotCriteria& operator=(const CAttribute_ItemSlotCriteria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_ItemSlotCriteria& default_instance();

  void Swap(CAttribute_ItemSlotCriteria* other);

  // implements Message ----------------------------------------------

  CAttribute_ItemSlotCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_ItemSlotCriteria& from);
  void MergeFrom(const CAttribute_ItemSlotCriteria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tags = 1;
  inline bool has_tags() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 1;
  inline const ::std::string& tags() const;
  inline void set_tags(const ::std::string& value);
  inline void set_tags(const char* value);
  inline void set_tags(const char* value, size_t size);
  inline ::std::string* mutable_tags();
  inline ::std::string* release_tags();
  inline void set_allocated_tags(::std::string* tags);

  // @@protoc_insertion_point(class_scope:CAttribute_ItemSlotCriteria)
 private:
  inline void set_has_tags();
  inline void clear_has_tags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tags_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_ItemSlotCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetItemSlotAttribute : public ::google::protobuf::Message {
 public:
  CMsgSetItemSlotAttribute();
  virtual ~CMsgSetItemSlotAttribute();

  CMsgSetItemSlotAttribute(const CMsgSetItemSlotAttribute& from);

  inline CMsgSetItemSlotAttribute& operator=(const CMsgSetItemSlotAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetItemSlotAttribute& default_instance();

  void Swap(CMsgSetItemSlotAttribute* other);

  // implements Message ----------------------------------------------

  CMsgSetItemSlotAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetItemSlotAttribute& from);
  void MergeFrom(const CMsgSetItemSlotAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 slot_item_original_id = 2;
  inline bool has_slot_item_original_id() const;
  inline void clear_slot_item_original_id();
  static const int kSlotItemOriginalIdFieldNumber = 2;
  inline ::google::protobuf::uint64 slot_item_original_id() const;
  inline void set_slot_item_original_id(::google::protobuf::uint64 value);

  // optional uint32 slot_index = 3;
  inline bool has_slot_index() const;
  inline void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 slot_index() const;
  inline void set_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetItemSlotAttribute)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_slot_item_original_id();
  inline void clear_has_slot_item_original_id();
  inline void set_has_slot_index();
  inline void clear_has_slot_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 slot_item_original_id_;
  ::google::protobuf::uint32 slot_index_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetItemSlotAttribute* default_instance_;
};
// -------------------------------------------------------------------

class CSOWarData : public ::google::protobuf::Message {
 public:
  CSOWarData();
  virtual ~CSOWarData();

  CSOWarData(const CSOWarData& from);

  inline CSOWarData& operator=(const CSOWarData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOWarData& default_instance();

  void Swap(CSOWarData* other);

  // implements Message ----------------------------------------------

  CSOWarData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOWarData& from);
  void MergeFrom(const CSOWarData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);

  // optional uint32 affiliation = 3;
  inline bool has_affiliation() const;
  inline void clear_affiliation();
  static const int kAffiliationFieldNumber = 3;
  inline ::google::protobuf::uint32 affiliation() const;
  inline void set_affiliation(::google::protobuf::uint32 value);

  // optional uint32 points_scored = 4;
  inline bool has_points_scored() const;
  inline void clear_points_scored();
  static const int kPointsScoredFieldNumber = 4;
  inline ::google::protobuf::uint32 points_scored() const;
  inline void set_points_scored(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOWarData)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_war_id();
  inline void clear_has_war_id();
  inline void set_has_affiliation();
  inline void clear_has_affiliation();
  inline void set_has_points_scored();
  inline void clear_has_points_scored();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 war_id_;
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 points_scored_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOWarData* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_IndividualUpdate : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_IndividualUpdate();
  virtual ~CGCMsgGC_War_IndividualUpdate();

  CGCMsgGC_War_IndividualUpdate(const CGCMsgGC_War_IndividualUpdate& from);

  inline CGCMsgGC_War_IndividualUpdate& operator=(const CGCMsgGC_War_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_IndividualUpdate& default_instance();

  void Swap(CGCMsgGC_War_IndividualUpdate* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_War_IndividualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_War_IndividualUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);

  // optional uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_IndividualUpdate)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_war_id();
  inline void clear_has_war_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 war_id_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_War_IndividualUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_JoinWar : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_JoinWar();
  virtual ~CGCMsgGC_War_JoinWar();

  CGCMsgGC_War_JoinWar(const CGCMsgGC_War_JoinWar& from);

  inline CGCMsgGC_War_JoinWar& operator=(const CGCMsgGC_War_JoinWar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_JoinWar& default_instance();

  void Swap(CGCMsgGC_War_JoinWar* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_War_JoinWar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_JoinWar& from);
  void MergeFrom(const CGCMsgGC_War_JoinWar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 affiliation = 1;
  inline bool has_affiliation() const;
  inline void clear_affiliation();
  static const int kAffiliationFieldNumber = 1;
  inline ::google::protobuf::uint32 affiliation() const;
  inline void set_affiliation(::google::protobuf::uint32 value);

  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_JoinWar)
 private:
  inline void set_has_affiliation();
  inline void clear_has_affiliation();
  inline void set_has_war_id();
  inline void clear_has_war_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 war_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_War_JoinWar* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_RequestGlobalStats : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_RequestGlobalStats();
  virtual ~CGCMsgGC_War_RequestGlobalStats();

  CGCMsgGC_War_RequestGlobalStats(const CGCMsgGC_War_RequestGlobalStats& from);

  inline CGCMsgGC_War_RequestGlobalStats& operator=(const CGCMsgGC_War_RequestGlobalStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_RequestGlobalStats& default_instance();

  void Swap(CGCMsgGC_War_RequestGlobalStats* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_War_RequestGlobalStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_RequestGlobalStats& from);
  void MergeFrom(const CGCMsgGC_War_RequestGlobalStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 war_id = 1;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 1;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_RequestGlobalStats)
 private:
  inline void set_has_war_id();
  inline void clear_has_war_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 war_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_War_RequestGlobalStats* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_GlobalStatsResponse_SideScore : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_GlobalStatsResponse_SideScore();
  virtual ~CGCMsgGC_War_GlobalStatsResponse_SideScore();

  CGCMsgGC_War_GlobalStatsResponse_SideScore(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);

  inline CGCMsgGC_War_GlobalStatsResponse_SideScore& operator=(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_GlobalStatsResponse_SideScore& default_instance();

  void Swap(CGCMsgGC_War_GlobalStatsResponse_SideScore* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_War_GlobalStatsResponse_SideScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  void MergeFrom(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 side = 1;
  inline bool has_side() const;
  inline void clear_side();
  static const int kSideFieldNumber = 1;
  inline ::google::protobuf::uint32 side() const;
  inline void set_side(::google::protobuf::uint32 value);

  // optional uint64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_GlobalStatsResponse.SideScore)
 private:
  inline void set_has_side();
  inline void clear_has_side();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 side_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_War_GlobalStatsResponse_SideScore* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_GlobalStatsResponse : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_GlobalStatsResponse();
  virtual ~CGCMsgGC_War_GlobalStatsResponse();

  CGCMsgGC_War_GlobalStatsResponse(const CGCMsgGC_War_GlobalStatsResponse& from);

  inline CGCMsgGC_War_GlobalStatsResponse& operator=(const CGCMsgGC_War_GlobalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_GlobalStatsResponse& default_instance();

  void Swap(CGCMsgGC_War_GlobalStatsResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_War_GlobalStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_GlobalStatsResponse& from);
  void MergeFrom(const CGCMsgGC_War_GlobalStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CGCMsgGC_War_GlobalStatsResponse_SideScore SideScore;

  // accessors -------------------------------------------------------

  // repeated .CGCMsgGC_War_GlobalStatsResponse.SideScore side_scores = 1;
  inline int side_scores_size() const;
  inline void clear_side_scores();
  static const int kSideScoresFieldNumber = 1;
  inline const ::CGCMsgGC_War_GlobalStatsResponse_SideScore& side_scores(int index) const;
  inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* mutable_side_scores(int index);
  inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* add_side_scores();
  inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >&
      side_scores() const;
  inline ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >*
      mutable_side_scores();

  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_GlobalStatsResponse)
 private:
  inline void set_has_war_id();
  inline void clear_has_war_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore > side_scores_;
  ::google::protobuf::uint32 war_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_War_GlobalStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate : public ::google::protobuf::Message {
 public:
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
  virtual ~CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();

  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);

  inline CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& operator=(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& default_instance();

  void Swap(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes score_id = 4;
  inline bool has_score_id() const;
  inline void clear_score_id();
  static const int kScoreIdFieldNumber = 4;
  inline const ::std::string& score_id() const;
  inline void set_score_id(const ::std::string& value);
  inline void set_score_id(const char* value);
  inline void set_score_id(const void* value, size_t size);
  inline ::std::string* mutable_score_id();
  inline ::std::string* release_score_id();
  inline void set_allocated_score_id(::std::string* score_id);

  // optional uint32 score_check = 5;
  inline bool has_score_check() const;
  inline void clear_score_check();
  static const int kScoreCheckFieldNumber = 5;
  inline ::google::protobuf::uint32 score_check() const;
  inline void set_score_check(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_score_id();
  inline void clear_has_score_id();
  inline void set_has_score_check();
  inline void clear_has_score_check();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 type_;
  ::std::string* score_id_;
  ::google::protobuf::uint32 score_check_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_WorldItemPlacement : public ::google::protobuf::Message {
 public:
  CAttribute_WorldItemPlacement();
  virtual ~CAttribute_WorldItemPlacement();

  CAttribute_WorldItemPlacement(const CAttribute_WorldItemPlacement& from);

  inline CAttribute_WorldItemPlacement& operator=(const CAttribute_WorldItemPlacement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_WorldItemPlacement& default_instance();

  void Swap(CAttribute_WorldItemPlacement* other);

  // implements Message ----------------------------------------------

  CAttribute_WorldItemPlacement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_WorldItemPlacement& from);
  void MergeFrom(const CAttribute_WorldItemPlacement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 original_item_id = 1;
  inline bool has_original_item_id() const;
  inline void clear_original_item_id();
  static const int kOriginalItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 original_item_id() const;
  inline void set_original_item_id(::google::protobuf::uint64 value);

  // optional float pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline float pos_x() const;
  inline void set_pos_x(float value);

  // optional float pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline float pos_y() const;
  inline void set_pos_y(float value);

  // optional float pos_z = 4;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  inline float pos_z() const;
  inline void set_pos_z(float value);

  // optional float ang_x = 5;
  inline bool has_ang_x() const;
  inline void clear_ang_x();
  static const int kAngXFieldNumber = 5;
  inline float ang_x() const;
  inline void set_ang_x(float value);

  // optional float ang_y = 6;
  inline bool has_ang_y() const;
  inline void clear_ang_y();
  static const int kAngYFieldNumber = 6;
  inline float ang_y() const;
  inline void set_ang_y(float value);

  // optional float ang_z = 7;
  inline bool has_ang_z() const;
  inline void clear_ang_z();
  static const int kAngZFieldNumber = 7;
  inline float ang_z() const;
  inline void set_ang_z(float value);

  // @@protoc_insertion_point(class_scope:CAttribute_WorldItemPlacement)
 private:
  inline void set_has_original_item_id();
  inline void clear_has_original_item_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_pos_z();
  inline void clear_has_pos_z();
  inline void set_has_ang_x();
  inline void clear_has_ang_x();
  inline void set_has_ang_y();
  inline void clear_has_ang_y();
  inline void set_has_ang_z();
  inline void clear_has_ang_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 original_item_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float ang_x_;
  float ang_y_;
  float ang_z_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_WorldItemPlacement* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsg_WorldItemPlacement_Update : public ::google::protobuf::Message {
 public:
  CGCMsg_WorldItemPlacement_Update();
  virtual ~CGCMsg_WorldItemPlacement_Update();

  CGCMsg_WorldItemPlacement_Update(const CGCMsg_WorldItemPlacement_Update& from);

  inline CGCMsg_WorldItemPlacement_Update& operator=(const CGCMsg_WorldItemPlacement_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsg_WorldItemPlacement_Update& default_instance();

  void Swap(CGCMsg_WorldItemPlacement_Update* other);

  // implements Message ----------------------------------------------

  CGCMsg_WorldItemPlacement_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsg_WorldItemPlacement_Update& from);
  void MergeFrom(const CGCMsg_WorldItemPlacement_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 original_item_id = 1;
  inline bool has_original_item_id() const;
  inline void clear_original_item_id();
  static const int kOriginalItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 original_item_id() const;
  inline void set_original_item_id(::google::protobuf::uint64 value);

  // optional float pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline float pos_x() const;
  inline void set_pos_x(float value);

  // optional float pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline float pos_y() const;
  inline void set_pos_y(float value);

  // optional float pos_z = 4;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  inline float pos_z() const;
  inline void set_pos_z(float value);

  // optional float ang_x = 5;
  inline bool has_ang_x() const;
  inline void clear_ang_x();
  static const int kAngXFieldNumber = 5;
  inline float ang_x() const;
  inline void set_ang_x(float value);

  // optional float ang_y = 6;
  inline bool has_ang_y() const;
  inline void clear_ang_y();
  static const int kAngYFieldNumber = 6;
  inline float ang_y() const;
  inline void set_ang_y(float value);

  // optional float ang_z = 7;
  inline bool has_ang_z() const;
  inline void clear_ang_z();
  static const int kAngZFieldNumber = 7;
  inline float ang_z() const;
  inline void set_ang_z(float value);

  // optional bool force_remove_all = 8;
  inline bool has_force_remove_all() const;
  inline void clear_force_remove_all();
  static const int kForceRemoveAllFieldNumber = 8;
  inline bool force_remove_all() const;
  inline void set_force_remove_all(bool value);

  // optional string attrib_name = 9;
  inline bool has_attrib_name() const;
  inline void clear_attrib_name();
  static const int kAttribNameFieldNumber = 9;
  inline const ::std::string& attrib_name() const;
  inline void set_attrib_name(const ::std::string& value);
  inline void set_attrib_name(const char* value);
  inline void set_attrib_name(const char* value, size_t size);
  inline ::std::string* mutable_attrib_name();
  inline ::std::string* release_attrib_name();
  inline void set_allocated_attrib_name(::std::string* attrib_name);

  // @@protoc_insertion_point(class_scope:CGCMsg_WorldItemPlacement_Update)
 private:
  inline void set_has_original_item_id();
  inline void clear_has_original_item_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_pos_z();
  inline void clear_has_pos_z();
  inline void set_has_ang_x();
  inline void clear_has_ang_x();
  inline void set_has_ang_y();
  inline void clear_has_ang_y();
  inline void set_has_ang_z();
  inline void clear_has_ang_z();
  inline void set_has_force_remove_all();
  inline void clear_has_force_remove_all();
  inline void set_has_attrib_name();
  inline void clear_has_attrib_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 original_item_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float ang_x_;
  float ang_y_;
  float ang_z_;
  ::std::string* attrib_name_;
  bool force_remove_all_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsg_WorldItemPlacement_Update* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcknowledgeXP : public ::google::protobuf::Message {
 public:
  CMsgAcknowledgeXP();
  virtual ~CMsgAcknowledgeXP();

  CMsgAcknowledgeXP(const CMsgAcknowledgeXP& from);

  inline CMsgAcknowledgeXP& operator=(const CMsgAcknowledgeXP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcknowledgeXP& default_instance();

  void Swap(CMsgAcknowledgeXP* other);

  // implements Message ----------------------------------------------

  CMsgAcknowledgeXP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcknowledgeXP& from);
  void MergeFrom(const CMsgAcknowledgeXP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 match_group = 1;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 1;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);

  // optional uint32 predicted_experience = 2;
  inline bool has_predicted_experience() const;
  inline void clear_predicted_experience();
  static const int kPredictedExperienceFieldNumber = 2;
  inline ::google::protobuf::uint32 predicted_experience() const;
  inline void set_predicted_experience(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAcknowledgeXP)
 private:
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_predicted_experience();
  inline void clear_has_predicted_experience();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 predicted_experience_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAcknowledgeXP* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFXPSource : public ::google::protobuf::Message {
 public:
  CMsgTFXPSource();
  virtual ~CMsgTFXPSource();

  CMsgTFXPSource(const CMsgTFXPSource& from);

  inline CMsgTFXPSource& operator=(const CMsgTFXPSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFXPSource& default_instance();

  void Swap(CMsgTFXPSource* other);

  // implements Message ----------------------------------------------

  CMsgTFXPSource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFXPSource& from);
  void MergeFrom(const CMsgTFXPSource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFXPSource_XPSourceType XPSourceType;
  static const XPSourceType SOURCE_SCORE = CMsgTFXPSource_XPSourceType_SOURCE_SCORE;
  static const XPSourceType SOURCE_OBJECTIVE_BONUS = CMsgTFXPSource_XPSourceType_SOURCE_OBJECTIVE_BONUS;
  static const XPSourceType SOURCE_COMPLETED_MATCH = CMsgTFXPSource_XPSourceType_SOURCE_COMPLETED_MATCH;
  static const XPSourceType SOURCE_COMPETITIVE_ABANDON = CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_ABANDON;
  static const XPSourceType SOURCE_COMPETITIVE_WIN = CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_WIN;
  static const XPSourceType SOURCE_COMPETITIVE_LOSS = CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_LOSS;
  static const XPSourceType SOURCE_AUTOBALANCE_BONUS = CMsgTFXPSource_XPSourceType_SOURCE_AUTOBALANCE_BONUS;
  static const XPSourceType SOURCE_PRESTIGE_BONUS = CMsgTFXPSource_XPSourceType_SOURCE_PRESTIGE_BONUS;
  static inline bool XPSourceType_IsValid(int value) {
    return CMsgTFXPSource_XPSourceType_IsValid(value);
  }
  static const XPSourceType XPSourceType_MIN =
    CMsgTFXPSource_XPSourceType_XPSourceType_MIN;
  static const XPSourceType XPSourceType_MAX =
    CMsgTFXPSource_XPSourceType_XPSourceType_MAX;
  static const int XPSourceType_ARRAYSIZE =
    CMsgTFXPSource_XPSourceType_XPSourceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  XPSourceType_descriptor() {
    return CMsgTFXPSource_XPSourceType_descriptor();
  }
  static inline const ::std::string& XPSourceType_Name(XPSourceType value) {
    return CMsgTFXPSource_XPSourceType_Name(value);
  }
  static inline bool XPSourceType_Parse(const ::std::string& name,
      XPSourceType* value) {
    return CMsgTFXPSource_XPSourceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgTFXPSource.XPSourceType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::CMsgTFXPSource_XPSourceType type() const;
  inline void set_type(::CMsgTFXPSource_XPSourceType value);

  // optional int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // optional int32 match_group = 3;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 3;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);

  // optional uint32 account_id = 4;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 5;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFXPSource)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFXPSource* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFXPSourceBreakdown : public ::google::protobuf::Message {
 public:
  CMsgTFXPSourceBreakdown();
  virtual ~CMsgTFXPSourceBreakdown();

  CMsgTFXPSourceBreakdown(const CMsgTFXPSourceBreakdown& from);

  inline CMsgTFXPSourceBreakdown& operator=(const CMsgTFXPSourceBreakdown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFXPSourceBreakdown& default_instance();

  void Swap(CMsgTFXPSourceBreakdown* other);

  // implements Message ----------------------------------------------

  CMsgTFXPSourceBreakdown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFXPSourceBreakdown& from);
  void MergeFrom(const CMsgTFXPSourceBreakdown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgTFXPSource sources = 1;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 1;
  inline const ::CMsgTFXPSource& sources(int index) const;
  inline ::CMsgTFXPSource* mutable_sources(int index);
  inline ::CMsgTFXPSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
      mutable_sources();

  // @@protoc_insertion_point(class_scope:CMsgTFXPSourceBreakdown)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource > sources_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFXPSourceBreakdown* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFClientInit : public ::google::protobuf::Message {
 public:
  CMsgTFClientInit();
  virtual ~CMsgTFClientInit();

  CMsgTFClientInit(const CMsgTFClientInit& from);

  inline CMsgTFClientInit& operator=(const CMsgTFClientInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFClientInit& default_instance();

  void Swap(CMsgTFClientInit* other);

  // implements Message ----------------------------------------------

  CMsgTFClientInit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFClientInit& from);
  void MergeFrom(const CMsgTFClientInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_version = 1;
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // optional int32 language = 2;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 2;
  inline ::google::protobuf::int32 language() const;
  inline void set_language(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFClientInit)
 private:
  inline void set_has_client_version();
  inline void clear_has_client_version();
  inline void set_has_language();
  inline void clear_has_language();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::int32 language_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFClientInit* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotification : public ::google::protobuf::Message {
 public:
  CMsgGCNotification();
  virtual ~CMsgGCNotification();

  CMsgGCNotification(const CMsgGCNotification& from);

  inline CMsgGCNotification& operator=(const CMsgGCNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotification& default_instance();

  void Swap(CMsgGCNotification* other);

  // implements Message ----------------------------------------------

  CMsgGCNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotification& from);
  void MergeFrom(const CMsgGCNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCNotification_NotificationType NotificationType;
  static const NotificationType NOTIFICATION_REPORTED_PLAYER_BANNED = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED;
  static const NotificationType NOTIFICATION_CUSTOM_STRING = CMsgGCNotification_NotificationType_NOTIFICATION_CUSTOM_STRING;
  static const NotificationType NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS = CMsgGCNotification_NotificationType_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS;
  static const NotificationType NOTIFICATION_REPORTED_PLAYER_WAS_BANNED = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED;
  static const NotificationType NOTIFICATION_SUPPORT_MESSAGE = CMsgGCNotification_NotificationType_NOTIFICATION_SUPPORT_MESSAGE;
  static const NotificationType NOTIFICATION_NUM_TYPES = CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES;
  static inline bool NotificationType_IsValid(int value) {
    return CMsgGCNotification_NotificationType_IsValid(value);
  }
  static const NotificationType NotificationType_MIN =
    CMsgGCNotification_NotificationType_NotificationType_MIN;
  static const NotificationType NotificationType_MAX =
    CMsgGCNotification_NotificationType_NotificationType_MAX;
  static const int NotificationType_ARRAYSIZE =
    CMsgGCNotification_NotificationType_NotificationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NotificationType_descriptor() {
    return CMsgGCNotification_NotificationType_descriptor();
  }
  static inline const ::std::string& NotificationType_Name(NotificationType value) {
    return CMsgGCNotification_NotificationType_Name(value);
  }
  static inline bool NotificationType_Parse(const ::std::string& name,
      NotificationType* value) {
    return CMsgGCNotification_NotificationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 notification_id = 1;
  inline bool has_notification_id() const;
  inline void clear_notification_id();
  static const int kNotificationIdFieldNumber = 1;
  inline ::google::protobuf::uint64 notification_id() const;
  inline void set_notification_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional fixed32 expiration_time = 3;
  inline bool has_expiration_time() const;
  inline void clear_expiration_time();
  static const int kExpirationTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 expiration_time() const;
  inline void set_expiration_time(::google::protobuf::uint32 value);

  // optional .CMsgGCNotification.NotificationType type = 4 [default = NOTIFICATION_CUSTOM_STRING];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::CMsgGCNotification_NotificationType type() const;
  inline void set_type(::CMsgGCNotification_NotificationType value);

  // optional string notification_string = 5;
  inline bool has_notification_string() const;
  inline void clear_notification_string();
  static const int kNotificationStringFieldNumber = 5;
  inline const ::std::string& notification_string() const;
  inline void set_notification_string(const ::std::string& value);
  inline void set_notification_string(const char* value);
  inline void set_notification_string(const char* value, size_t size);
  inline ::std::string* mutable_notification_string();
  inline ::std::string* release_notification_string();
  inline void set_allocated_notification_string(::std::string* notification_string);

  // @@protoc_insertion_point(class_scope:CMsgGCNotification)
 private:
  inline void set_has_notification_id();
  inline void clear_has_notification_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_expiration_time();
  inline void clear_has_expiration_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_notification_string();
  inline void clear_has_notification_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 notification_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 expiration_time_;
  ::std::string* notification_string_;
  int type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationQueue : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationQueue();
  virtual ~CMsgGCNotificationQueue();

  CMsgGCNotificationQueue(const CMsgGCNotificationQueue& from);

  inline CMsgGCNotificationQueue& operator=(const CMsgGCNotificationQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationQueue& default_instance();

  void Swap(CMsgGCNotificationQueue* other);

  // implements Message ----------------------------------------------

  CMsgGCNotificationQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationQueue& from);
  void MergeFrom(const CMsgGCNotificationQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCNotification notifications = 1;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 1;
  inline const ::CMsgGCNotification& notifications(int index) const;
  inline ::CMsgGCNotification* mutable_notifications(int index);
  inline ::CMsgGCNotification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >*
      mutable_notifications();

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationQueue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification > notifications_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNotificationQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotificationAcknowledge : public ::google::protobuf::Message {
 public:
  CMsgNotificationAcknowledge();
  virtual ~CMsgNotificationAcknowledge();

  CMsgNotificationAcknowledge(const CMsgNotificationAcknowledge& from);

  inline CMsgNotificationAcknowledge& operator=(const CMsgNotificationAcknowledge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationAcknowledge& default_instance();

  void Swap(CMsgNotificationAcknowledge* other);

  // implements Message ----------------------------------------------

  CMsgNotificationAcknowledge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotificationAcknowledge& from);
  void MergeFrom(const CMsgNotificationAcknowledge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 notification_id = 2;
  inline bool has_notification_id() const;
  inline void clear_notification_id();
  static const int kNotificationIdFieldNumber = 2;
  inline ::google::protobuf::uint64 notification_id() const;
  inline void set_notification_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgNotificationAcknowledge)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_notification_id();
  inline void clear_has_notification_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 notification_id_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgNotificationAcknowledge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotificationAcknowledgeReply : public ::google::protobuf::Message {
 public:
  CMsgNotificationAcknowledgeReply();
  virtual ~CMsgNotificationAcknowledgeReply();

  CMsgNotificationAcknowledgeReply(const CMsgNotificationAcknowledgeReply& from);

  inline CMsgNotificationAcknowledgeReply& operator=(const CMsgNotificationAcknowledgeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationAcknowledgeReply& default_instance();

  void Swap(CMsgNotificationAcknowledgeReply* other);

  // implements Message ----------------------------------------------

  CMsgNotificationAcknowledgeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotificationAcknowledgeReply& from);
  void MergeFrom(const CMsgNotificationAcknowledgeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgNotificationAcknowledgeReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgNotificationAcknowledgeReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Match_Result_Player : public ::google::protobuf::Message {
 public:
  CMsgGC_Match_Result_Player();
  virtual ~CMsgGC_Match_Result_Player();

  CMsgGC_Match_Result_Player(const CMsgGC_Match_Result_Player& from);

  inline CMsgGC_Match_Result_Player& operator=(const CMsgGC_Match_Result_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_Result_Player& default_instance();

  void Swap(CMsgGC_Match_Result_Player* other);

  // implements Message ----------------------------------------------

  CMsgGC_Match_Result_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Match_Result_Player& from);
  void MergeFrom(const CMsgGC_Match_Result_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint64 original_party_id = 2;
  inline bool has_original_party_id() const;
  inline void clear_original_party_id();
  static const int kOriginalPartyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 original_party_id() const;
  inline void set_original_party_id(::google::protobuf::uint64 value);

  // optional uint32 team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // optional uint32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 ping = 5;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 5;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);

  // optional uint32 flags = 6;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 rank = 9;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 9;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 classes_played = 10;
  inline bool has_classes_played() const;
  inline void clear_classes_played();
  static const int kClassesPlayedFieldNumber = 10;
  inline ::google::protobuf::uint32 classes_played() const;
  inline void set_classes_played(::google::protobuf::uint32 value);

  // optional uint32 kills = 11;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 11;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 12;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 12;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 damage = 13;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 13;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);

  // optional uint32 healing = 14;
  inline bool has_healing() const;
  inline void clear_healing();
  static const int kHealingFieldNumber = 14;
  inline ::google::protobuf::uint32 healing() const;
  inline void set_healing(::google::protobuf::uint32 value);

  // optional uint32 support = 15;
  inline bool has_support() const;
  inline void clear_support();
  static const int kSupportFieldNumber = 15;
  inline ::google::protobuf::uint32 support() const;
  inline void set_support(::google::protobuf::uint32 value);

  // optional uint32 score_medal = 16;
  inline bool has_score_medal() const;
  inline void clear_score_medal();
  static const int kScoreMedalFieldNumber = 16;
  inline ::google::protobuf::uint32 score_medal() const;
  inline void set_score_medal(::google::protobuf::uint32 value);

  // optional uint32 kills_medal = 17;
  inline bool has_kills_medal() const;
  inline void clear_kills_medal();
  static const int kKillsMedalFieldNumber = 17;
  inline ::google::protobuf::uint32 kills_medal() const;
  inline void set_kills_medal(::google::protobuf::uint32 value);

  // optional uint32 damage_medal = 18;
  inline bool has_damage_medal() const;
  inline void clear_damage_medal();
  static const int kDamageMedalFieldNumber = 18;
  inline ::google::protobuf::uint32 damage_medal() const;
  inline void set_damage_medal(::google::protobuf::uint32 value);

  // optional uint32 healing_medal = 19;
  inline bool has_healing_medal() const;
  inline void clear_healing_medal();
  static const int kHealingMedalFieldNumber = 19;
  inline ::google::protobuf::uint32 healing_medal() const;
  inline void set_healing_medal(::google::protobuf::uint32 value);

  // optional uint32 support_medal = 20;
  inline bool has_support_medal() const;
  inline void clear_support_medal();
  static const int kSupportMedalFieldNumber = 20;
  inline ::google::protobuf::uint32 support_medal() const;
  inline void set_support_medal(::google::protobuf::uint32 value);

  // repeated .CMsgTFXPSource xp_breakdown = 21;
  inline int xp_breakdown_size() const;
  inline void clear_xp_breakdown();
  static const int kXpBreakdownFieldNumber = 21;
  inline const ::CMsgTFXPSource& xp_breakdown(int index) const;
  inline ::CMsgTFXPSource* mutable_xp_breakdown(int index);
  inline ::CMsgTFXPSource* add_xp_breakdown();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
      xp_breakdown() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
      mutable_xp_breakdown();

  // optional uint32 leave_time = 22;
  inline bool has_leave_time() const;
  inline void clear_leave_time();
  static const int kLeaveTimeFieldNumber = 22;
  inline ::google::protobuf::uint32 leave_time() const;
  inline void set_leave_time(::google::protobuf::uint32 value);

  // optional .TFMatchLeaveReason leave_reason = 23;
  inline bool has_leave_reason() const;
  inline void clear_leave_reason();
  static const int kLeaveReasonFieldNumber = 23;
  inline ::TFMatchLeaveReason leave_reason() const;
  inline void set_leave_reason(::TFMatchLeaveReason value);

  // optional uint32 connect_time = 24;
  inline bool has_connect_time() const;
  inline void clear_connect_time();
  static const int kConnectTimeFieldNumber = 24;
  inline ::google::protobuf::uint32 connect_time() const;
  inline void set_connect_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Match_Result.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_original_party_id();
  inline void clear_has_original_party_id();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_ping();
  inline void clear_has_ping();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_classes_played();
  inline void clear_has_classes_played();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_healing();
  inline void clear_has_healing();
  inline void set_has_support();
  inline void clear_has_support();
  inline void set_has_score_medal();
  inline void clear_has_score_medal();
  inline void set_has_kills_medal();
  inline void clear_has_kills_medal();
  inline void set_has_damage_medal();
  inline void clear_has_damage_medal();
  inline void set_has_healing_medal();
  inline void clear_has_healing_medal();
  inline void set_has_support_medal();
  inline void clear_has_support_medal();
  inline void set_has_leave_time();
  inline void clear_has_leave_time();
  inline void set_has_leave_reason();
  inline void clear_has_leave_reason();
  inline void set_has_connect_time();
  inline void clear_has_connect_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 original_party_id_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 classes_played_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_medal_;
  ::google::protobuf::uint32 kills_medal_;
  ::google::protobuf::uint32 damage_medal_;
  ::google::protobuf::uint32 healing_medal_;
  ::google::protobuf::uint32 support_medal_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource > xp_breakdown_;
  ::google::protobuf::uint32 leave_time_;
  int leave_reason_;
  ::google::protobuf::uint32 connect_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Match_Result_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Match_Result : public ::google::protobuf::Message {
 public:
  CMsgGC_Match_Result();
  virtual ~CMsgGC_Match_Result();

  CMsgGC_Match_Result(const CMsgGC_Match_Result& from);

  inline CMsgGC_Match_Result& operator=(const CMsgGC_Match_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_Result& default_instance();

  void Swap(CMsgGC_Match_Result* other);

  // implements Message ----------------------------------------------

  CMsgGC_Match_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Match_Result& from);
  void MergeFrom(const CMsgGC_Match_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_Match_Result_Player Player;

  typedef CMsgGC_Match_Result_Status Status;
  static const Status MATCH_SUCCEEDED = CMsgGC_Match_Result_Status_MATCH_SUCCEEDED;
  static const Status MATCH_FAILED_GC = CMsgGC_Match_Result_Status_MATCH_FAILED_GC;
  static const Status MATCH_FAILED_TRUSTED = CMsgGC_Match_Result_Status_MATCH_FAILED_TRUSTED;
  static const Status MATCH_FAILED_ABANDON = CMsgGC_Match_Result_Status_MATCH_FAILED_ABANDON;
  static const Status MATCH_FAILED_UNKNOWN = CMsgGC_Match_Result_Status_MATCH_FAILED_UNKNOWN;
  static const Status MATCH_FAILED_TIMEOUT = CMsgGC_Match_Result_Status_MATCH_FAILED_TIMEOUT;
  static const Status MATCH_FINISHED_ABANDON = CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON;
  static inline bool Status_IsValid(int value) {
    return CMsgGC_Match_Result_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CMsgGC_Match_Result_Status_Status_MIN;
  static const Status Status_MAX =
    CMsgGC_Match_Result_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CMsgGC_Match_Result_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CMsgGC_Match_Result_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CMsgGC_Match_Result_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CMsgGC_Match_Result_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional int32 match_group = 2;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);

  // optional .CMsgGC_Match_Result.Status status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::CMsgGC_Match_Result_Status status() const;
  inline void set_status(::CMsgGC_Match_Result_Status value);

  // optional uint32 duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // optional uint32 red_score = 5;
  inline bool has_red_score() const;
  inline void clear_red_score();
  static const int kRedScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 red_score() const;
  inline void set_red_score(::google::protobuf::uint32 value);

  // optional uint32 blue_score = 6;
  inline bool has_blue_score() const;
  inline void clear_blue_score();
  static const int kBlueScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 blue_score() const;
  inline void set_blue_score(::google::protobuf::uint32 value);

  // optional uint32 winning_team = 7;
  inline bool has_winning_team() const;
  inline void clear_winning_team();
  static const int kWinningTeamFieldNumber = 7;
  inline ::google::protobuf::uint32 winning_team() const;
  inline void set_winning_team(::google::protobuf::uint32 value);

  // optional uint32 map_index = 8;
  inline bool has_map_index() const;
  inline void clear_map_index();
  static const int kMapIndexFieldNumber = 8;
  inline ::google::protobuf::uint32 map_index() const;
  inline void set_map_index(::google::protobuf::uint32 value);

  // optional uint32 game_type = 9 [default = 0];
  inline bool has_game_type() const;
  inline void clear_game_type();
  static const int kGameTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 game_type() const;
  inline void set_game_type(::google::protobuf::uint32 value);

  // repeated .CMsgGC_Match_Result.Player players = 10;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 10;
  inline const ::CMsgGC_Match_Result_Player& players(int index) const;
  inline ::CMsgGC_Match_Result_Player* mutable_players(int index);
  inline ::CMsgGC_Match_Result_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >*
      mutable_players();

  // optional uint32 win_reason = 13;
  inline bool has_win_reason() const;
  inline void clear_win_reason();
  static const int kWinReasonFieldNumber = 13;
  inline ::google::protobuf::uint32 win_reason() const;
  inline void set_win_reason(::google::protobuf::uint32 value);

  // optional uint32 flags = 14;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 14;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 bots = 16;
  inline bool has_bots() const;
  inline void clear_bots();
  static const int kBotsFieldNumber = 16;
  inline ::google::protobuf::uint32 bots() const;
  inline void set_bots(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Match_Result)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_red_score();
  inline void clear_has_red_score();
  inline void set_has_blue_score();
  inline void clear_has_blue_score();
  inline void set_has_winning_team();
  inline void clear_has_winning_team();
  inline void set_has_map_index();
  inline void clear_has_map_index();
  inline void set_has_game_type();
  inline void clear_has_game_type();
  inline void set_has_win_reason();
  inline void clear_has_win_reason();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_bots();
  inline void clear_has_bots();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::int32 match_group_;
  int status_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 red_score_;
  ::google::protobuf::uint32 blue_score_;
  ::google::protobuf::uint32 winning_team_;
  ::google::protobuf::uint32 map_index_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player > players_;
  ::google::protobuf::uint32 win_reason_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 bots_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Match_Result* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Match_ResultResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Match_ResultResponse();
  virtual ~CMsgGC_Match_ResultResponse();

  CMsgGC_Match_ResultResponse(const CMsgGC_Match_ResultResponse& from);

  inline CMsgGC_Match_ResultResponse& operator=(const CMsgGC_Match_ResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_ResultResponse& default_instance();

  void Swap(CMsgGC_Match_ResultResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_Match_ResultResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Match_ResultResponse& from);
  void MergeFrom(const CMsgGC_Match_ResultResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_Match_ResultResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Match_ResultResponse* default_instance_;
};
// -------------------------------------------------------------------

class CEconItemPreviewDataBlock : public ::google::protobuf::Message {
 public:
  CEconItemPreviewDataBlock();
  virtual ~CEconItemPreviewDataBlock();

  CEconItemPreviewDataBlock(const CEconItemPreviewDataBlock& from);

  inline CEconItemPreviewDataBlock& operator=(const CEconItemPreviewDataBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CEconItemPreviewDataBlock& default_instance();

  void Swap(CEconItemPreviewDataBlock* other);

  // implements Message ----------------------------------------------

  CEconItemPreviewDataBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CEconItemPreviewDataBlock& from);
  void MergeFrom(const CEconItemPreviewDataBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSOEconItem econitem = 1;
  inline bool has_econitem() const;
  inline void clear_econitem();
  static const int kEconitemFieldNumber = 1;
  inline const ::CSOEconItem& econitem() const;
  inline ::CSOEconItem* mutable_econitem();
  inline ::CSOEconItem* release_econitem();
  inline void set_allocated_econitem(::CSOEconItem* econitem);

  // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock)
 private:
  inline void set_has_econitem();
  inline void clear_has_econitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CSOEconItem* econitem_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CEconItemPreviewDataBlock* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client2GCEconPreviewDataBlockRequest : public ::google::protobuf::Message {
 public:
  CMsgGC_Client2GCEconPreviewDataBlockRequest();
  virtual ~CMsgGC_Client2GCEconPreviewDataBlockRequest();

  CMsgGC_Client2GCEconPreviewDataBlockRequest(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);

  inline CMsgGC_Client2GCEconPreviewDataBlockRequest& operator=(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client2GCEconPreviewDataBlockRequest& default_instance();

  void Swap(CMsgGC_Client2GCEconPreviewDataBlockRequest* other);

  // implements Message ----------------------------------------------

  CMsgGC_Client2GCEconPreviewDataBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  void MergeFrom(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 param_s = 1;
  inline bool has_param_s() const;
  inline void clear_param_s();
  static const int kParamSFieldNumber = 1;
  inline ::google::protobuf::uint64 param_s() const;
  inline void set_param_s(::google::protobuf::uint64 value);

  // optional uint64 param_a = 2;
  inline bool has_param_a() const;
  inline void clear_param_a();
  static const int kParamAFieldNumber = 2;
  inline ::google::protobuf::uint64 param_a() const;
  inline void set_param_a(::google::protobuf::uint64 value);

  // optional uint64 param_d = 3;
  inline bool has_param_d() const;
  inline void clear_param_d();
  static const int kParamDFieldNumber = 3;
  inline ::google::protobuf::uint64 param_d() const;
  inline void set_param_d(::google::protobuf::uint64 value);

  // optional uint64 param_m = 4;
  inline bool has_param_m() const;
  inline void clear_param_m();
  static const int kParamMFieldNumber = 4;
  inline ::google::protobuf::uint64 param_m() const;
  inline void set_param_m(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client2GCEconPreviewDataBlockRequest)
 private:
  inline void set_has_param_s();
  inline void clear_has_param_s();
  inline void set_has_param_a();
  inline void clear_has_param_a();
  inline void set_has_param_d();
  inline void clear_has_param_d();
  inline void set_has_param_m();
  inline void clear_has_param_m();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 param_s_;
  ::google::protobuf::uint64 param_a_;
  ::google::protobuf::uint64 param_d_;
  ::google::protobuf::uint64 param_m_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Client2GCEconPreviewDataBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client2GCEconPreviewDataBlockResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Client2GCEconPreviewDataBlockResponse();
  virtual ~CMsgGC_Client2GCEconPreviewDataBlockResponse();

  CMsgGC_Client2GCEconPreviewDataBlockResponse(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);

  inline CMsgGC_Client2GCEconPreviewDataBlockResponse& operator=(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client2GCEconPreviewDataBlockResponse& default_instance();

  void Swap(CMsgGC_Client2GCEconPreviewDataBlockResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_Client2GCEconPreviewDataBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  void MergeFrom(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 1;
  inline const ::CEconItemPreviewDataBlock& iteminfo() const;
  inline ::CEconItemPreviewDataBlock* mutable_iteminfo();
  inline ::CEconItemPreviewDataBlock* release_iteminfo();
  inline void set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client2GCEconPreviewDataBlockResponse)
 private:
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CEconItemPreviewDataBlock* iteminfo_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Client2GCEconPreviewDataBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFLadderPlayerStats : public ::google::protobuf::Message {
 public:
  CSOTFLadderPlayerStats();
  virtual ~CSOTFLadderPlayerStats();

  CSOTFLadderPlayerStats(const CSOTFLadderPlayerStats& from);

  inline CSOTFLadderPlayerStats& operator=(const CSOTFLadderPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFLadderPlayerStats& default_instance();

  void Swap(CSOTFLadderPlayerStats* other);

  // implements Message ----------------------------------------------

  CSOTFLadderPlayerStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFLadderPlayerStats& from);
  void MergeFrom(const CSOTFLadderPlayerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional int32 match_group = 2;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);

  // optional uint32 season_id = 3;
  inline bool has_season_id() const;
  inline void clear_season_id();
  static const int kSeasonIdFieldNumber = 3;
  inline ::google::protobuf::uint32 season_id() const;
  inline void set_season_id(::google::protobuf::uint32 value);

  // optional uint32 games = 9;
  inline bool has_games() const;
  inline void clear_games();
  static const int kGamesFieldNumber = 9;
  inline ::google::protobuf::uint32 games() const;
  inline void set_games(::google::protobuf::uint32 value);

  // optional uint32 score = 10;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 10;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 kills = 11;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 11;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 12;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 12;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 damage = 13;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 13;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);

  // optional uint32 healing = 14;
  inline bool has_healing() const;
  inline void clear_healing();
  static const int kHealingFieldNumber = 14;
  inline ::google::protobuf::uint32 healing() const;
  inline void set_healing(::google::protobuf::uint32 value);

  // optional uint32 support = 15;
  inline bool has_support() const;
  inline void clear_support();
  static const int kSupportFieldNumber = 15;
  inline ::google::protobuf::uint32 support() const;
  inline void set_support(::google::protobuf::uint32 value);

  // optional uint32 score_bronze = 16;
  inline bool has_score_bronze() const;
  inline void clear_score_bronze();
  static const int kScoreBronzeFieldNumber = 16;
  inline ::google::protobuf::uint32 score_bronze() const;
  inline void set_score_bronze(::google::protobuf::uint32 value);

  // optional uint32 score_silver = 17;
  inline bool has_score_silver() const;
  inline void clear_score_silver();
  static const int kScoreSilverFieldNumber = 17;
  inline ::google::protobuf::uint32 score_silver() const;
  inline void set_score_silver(::google::protobuf::uint32 value);

  // optional uint32 score_gold = 18;
  inline bool has_score_gold() const;
  inline void clear_score_gold();
  static const int kScoreGoldFieldNumber = 18;
  inline ::google::protobuf::uint32 score_gold() const;
  inline void set_score_gold(::google::protobuf::uint32 value);

  // optional uint32 kills_bronze = 19;
  inline bool has_kills_bronze() const;
  inline void clear_kills_bronze();
  static const int kKillsBronzeFieldNumber = 19;
  inline ::google::protobuf::uint32 kills_bronze() const;
  inline void set_kills_bronze(::google::protobuf::uint32 value);

  // optional uint32 kills_silver = 20;
  inline bool has_kills_silver() const;
  inline void clear_kills_silver();
  static const int kKillsSilverFieldNumber = 20;
  inline ::google::protobuf::uint32 kills_silver() const;
  inline void set_kills_silver(::google::protobuf::uint32 value);

  // optional uint32 kills_gold = 21;
  inline bool has_kills_gold() const;
  inline void clear_kills_gold();
  static const int kKillsGoldFieldNumber = 21;
  inline ::google::protobuf::uint32 kills_gold() const;
  inline void set_kills_gold(::google::protobuf::uint32 value);

  // optional uint32 damage_bronze = 22;
  inline bool has_damage_bronze() const;
  inline void clear_damage_bronze();
  static const int kDamageBronzeFieldNumber = 22;
  inline ::google::protobuf::uint32 damage_bronze() const;
  inline void set_damage_bronze(::google::protobuf::uint32 value);

  // optional uint32 damage_silver = 23;
  inline bool has_damage_silver() const;
  inline void clear_damage_silver();
  static const int kDamageSilverFieldNumber = 23;
  inline ::google::protobuf::uint32 damage_silver() const;
  inline void set_damage_silver(::google::protobuf::uint32 value);

  // optional uint32 damage_gold = 24;
  inline bool has_damage_gold() const;
  inline void clear_damage_gold();
  static const int kDamageGoldFieldNumber = 24;
  inline ::google::protobuf::uint32 damage_gold() const;
  inline void set_damage_gold(::google::protobuf::uint32 value);

  // optional uint32 healing_bronze = 25;
  inline bool has_healing_bronze() const;
  inline void clear_healing_bronze();
  static const int kHealingBronzeFieldNumber = 25;
  inline ::google::protobuf::uint32 healing_bronze() const;
  inline void set_healing_bronze(::google::protobuf::uint32 value);

  // optional uint32 healing_silver = 26;
  inline bool has_healing_silver() const;
  inline void clear_healing_silver();
  static const int kHealingSilverFieldNumber = 26;
  inline ::google::protobuf::uint32 healing_silver() const;
  inline void set_healing_silver(::google::protobuf::uint32 value);

  // optional uint32 healing_gold = 27;
  inline bool has_healing_gold() const;
  inline void clear_healing_gold();
  static const int kHealingGoldFieldNumber = 27;
  inline ::google::protobuf::uint32 healing_gold() const;
  inline void set_healing_gold(::google::protobuf::uint32 value);

  // optional uint32 support_bronze = 28;
  inline bool has_support_bronze() const;
  inline void clear_support_bronze();
  static const int kSupportBronzeFieldNumber = 28;
  inline ::google::protobuf::uint32 support_bronze() const;
  inline void set_support_bronze(::google::protobuf::uint32 value);

  // optional uint32 support_silver = 29;
  inline bool has_support_silver() const;
  inline void clear_support_silver();
  static const int kSupportSilverFieldNumber = 29;
  inline ::google::protobuf::uint32 support_silver() const;
  inline void set_support_silver(::google::protobuf::uint32 value);

  // optional uint32 support_gold = 30;
  inline bool has_support_gold() const;
  inline void clear_support_gold();
  static const int kSupportGoldFieldNumber = 30;
  inline ::google::protobuf::uint32 support_gold() const;
  inline void set_support_gold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFLadderPlayerStats)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_season_id();
  inline void clear_has_season_id();
  inline void set_has_games();
  inline void clear_has_games();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_healing();
  inline void clear_has_healing();
  inline void set_has_support();
  inline void clear_has_support();
  inline void set_has_score_bronze();
  inline void clear_has_score_bronze();
  inline void set_has_score_silver();
  inline void clear_has_score_silver();
  inline void set_has_score_gold();
  inline void clear_has_score_gold();
  inline void set_has_kills_bronze();
  inline void clear_has_kills_bronze();
  inline void set_has_kills_silver();
  inline void clear_has_kills_silver();
  inline void set_has_kills_gold();
  inline void clear_has_kills_gold();
  inline void set_has_damage_bronze();
  inline void clear_has_damage_bronze();
  inline void set_has_damage_silver();
  inline void clear_has_damage_silver();
  inline void set_has_damage_gold();
  inline void clear_has_damage_gold();
  inline void set_has_healing_bronze();
  inline void clear_has_healing_bronze();
  inline void set_has_healing_silver();
  inline void clear_has_healing_silver();
  inline void set_has_healing_gold();
  inline void clear_has_healing_gold();
  inline void set_has_support_bronze();
  inline void clear_has_support_bronze();
  inline void set_has_support_silver();
  inline void clear_has_support_silver();
  inline void set_has_support_gold();
  inline void clear_has_support_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 season_id_;
  ::google::protobuf::uint32 games_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_bronze_;
  ::google::protobuf::uint32 score_silver_;
  ::google::protobuf::uint32 score_gold_;
  ::google::protobuf::uint32 kills_bronze_;
  ::google::protobuf::uint32 kills_silver_;
  ::google::protobuf::uint32 kills_gold_;
  ::google::protobuf::uint32 damage_bronze_;
  ::google::protobuf::uint32 damage_silver_;
  ::google::protobuf::uint32 damage_gold_;
  ::google::protobuf::uint32 healing_bronze_;
  ::google::protobuf::uint32 healing_silver_;
  ::google::protobuf::uint32 healing_gold_;
  ::google::protobuf::uint32 support_bronze_;
  ::google::protobuf::uint32 support_silver_;
  ::google::protobuf::uint32 support_gold_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFLadderPlayerStats* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFRatingData : public ::google::protobuf::Message {
 public:
  CSOTFRatingData();
  virtual ~CSOTFRatingData();

  CSOTFRatingData(const CSOTFRatingData& from);

  inline CSOTFRatingData& operator=(const CSOTFRatingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFRatingData& default_instance();

  void Swap(CSOTFRatingData* other);

  // implements Message ----------------------------------------------

  CSOTFRatingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFRatingData& from);
  void MergeFrom(const CSOTFRatingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional int32 rating_type = 2;
  inline bool has_rating_type() const;
  inline void clear_rating_type();
  static const int kRatingTypeFieldNumber = 2;
  inline ::google::protobuf::int32 rating_type() const;
  inline void set_rating_type(::google::protobuf::int32 value);

  // optional uint32 rating_primary = 3;
  inline bool has_rating_primary() const;
  inline void clear_rating_primary();
  static const int kRatingPrimaryFieldNumber = 3;
  inline ::google::protobuf::uint32 rating_primary() const;
  inline void set_rating_primary(::google::protobuf::uint32 value);

  // optional uint32 rating_secondary = 4;
  inline bool has_rating_secondary() const;
  inline void clear_rating_secondary();
  static const int kRatingSecondaryFieldNumber = 4;
  inline ::google::protobuf::uint32 rating_secondary() const;
  inline void set_rating_secondary(::google::protobuf::uint32 value);

  // optional uint32 rating_tertiary = 5;
  inline bool has_rating_tertiary() const;
  inline void clear_rating_tertiary();
  static const int kRatingTertiaryFieldNumber = 5;
  inline ::google::protobuf::uint32 rating_tertiary() const;
  inline void set_rating_tertiary(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFRatingData)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_rating_type();
  inline void clear_has_rating_type();
  inline void set_has_rating_primary();
  inline void clear_has_rating_primary();
  inline void set_has_rating_secondary();
  inline void clear_has_rating_secondary();
  inline void set_has_rating_tertiary();
  inline void clear_has_rating_tertiary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 rating_type_;
  ::google::protobuf::uint32 rating_primary_;
  ::google::protobuf::uint32 rating_secondary_;
  ::google::protobuf::uint32 rating_tertiary_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFRatingData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_TFVoteKickPlayerRequest : public ::google::protobuf::Message {
 public:
  CMsgGC_TFVoteKickPlayerRequest();
  virtual ~CMsgGC_TFVoteKickPlayerRequest();

  CMsgGC_TFVoteKickPlayerRequest(const CMsgGC_TFVoteKickPlayerRequest& from);

  inline CMsgGC_TFVoteKickPlayerRequest& operator=(const CMsgGC_TFVoteKickPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_TFVoteKickPlayerRequest& default_instance();

  void Swap(CMsgGC_TFVoteKickPlayerRequest* other);

  // implements Message ----------------------------------------------

  CMsgGC_TFVoteKickPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_TFVoteKickPlayerRequest& from);
  void MergeFrom(const CMsgGC_TFVoteKickPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::uint64 target_id() const;
  inline void set_target_id(::google::protobuf::uint64 value);

  // optional uint64 voter_id = 3;
  inline bool has_voter_id() const;
  inline void clear_voter_id();
  static const int kVoterIdFieldNumber = 3;
  inline ::google::protobuf::uint64 voter_id() const;
  inline void set_voter_id(::google::protobuf::uint64 value);

  // optional .TFVoteKickReason reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::TFVoteKickReason reason() const;
  inline void set_reason(::TFVoteKickReason value);

  // optional uint64 match_id = 5;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_TFVoteKickPlayerRequest)
 private:
  inline void set_has_target_id();
  inline void clear_has_target_id();
  inline void set_has_voter_id();
  inline void clear_has_voter_id();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 target_id_;
  ::google::protobuf::uint64 voter_id_;
  ::google::protobuf::uint64 match_id_;
  int reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_TFVoteKickPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_VoteKickPlayerRequestResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_VoteKickPlayerRequestResponse();
  virtual ~CMsgGC_VoteKickPlayerRequestResponse();

  CMsgGC_VoteKickPlayerRequestResponse(const CMsgGC_VoteKickPlayerRequestResponse& from);

  inline CMsgGC_VoteKickPlayerRequestResponse& operator=(const CMsgGC_VoteKickPlayerRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_VoteKickPlayerRequestResponse& default_instance();

  void Swap(CMsgGC_VoteKickPlayerRequestResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_VoteKickPlayerRequestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_VoteKickPlayerRequestResponse& from);
  void MergeFrom(const CMsgGC_VoteKickPlayerRequestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allowed = 1;
  inline bool has_allowed() const;
  inline void clear_allowed();
  static const int kAllowedFieldNumber = 1;
  inline bool allowed() const;
  inline void set_allowed(bool value);

  // optional bool voter_inhibit = 3;
  inline bool has_voter_inhibit() const;
  inline void clear_voter_inhibit();
  static const int kVoterInhibitFieldNumber = 3;
  inline bool voter_inhibit() const;
  inline void set_voter_inhibit(bool value);

  // optional bool target_inhibit = 4;
  inline bool has_target_inhibit() const;
  inline void clear_target_inhibit();
  static const int kTargetInhibitFieldNumber = 4;
  inline bool target_inhibit() const;
  inline void set_target_inhibit(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_VoteKickPlayerRequestResponse)
 private:
  inline void set_has_allowed();
  inline void clear_has_allowed();
  inline void set_has_voter_inhibit();
  inline void clear_has_voter_inhibit();
  inline void set_has_target_inhibit();
  inline void clear_has_target_inhibit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool allowed_;
  bool voter_inhibit_;
  bool target_inhibit_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_VoteKickPlayerRequestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup : public ::google::protobuf::Message {
 public:
  CMsgGC_DailyCompetitiveStatsRollup();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup();

  CMsgGC_DailyCompetitiveStatsRollup(const CMsgGC_DailyCompetitiveStatsRollup& from);

  inline CMsgGC_DailyCompetitiveStatsRollup& operator=(const CMsgGC_DailyCompetitiveStatsRollup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup& default_instance();

  void Swap(CMsgGC_DailyCompetitiveStatsRollup* other);

  // implements Message ----------------------------------------------

  CMsgGC_DailyCompetitiveStatsRollup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_DailyCompetitiveStatsRollup* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry : public ::google::protobuf::Message {
 public:
  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();

  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);

  inline CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& operator=(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& default_instance();

  void Swap(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* other);

  // implements Message ----------------------------------------------

  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 records = 2;
  inline bool has_records() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 2;
  inline ::google::protobuf::uint32 records() const;
  inline void set_records(::google::protobuf::uint32 value);

  // optional uint32 avg_score = 3;
  inline bool has_avg_score() const;
  inline void clear_avg_score();
  static const int kAvgScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 avg_score() const;
  inline void set_avg_score(::google::protobuf::uint32 value);

  // optional uint32 stdev_score = 4;
  inline bool has_stdev_score() const;
  inline void clear_stdev_score();
  static const int kStdevScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 stdev_score() const;
  inline void set_stdev_score(::google::protobuf::uint32 value);

  // optional uint32 avg_kills = 5;
  inline bool has_avg_kills() const;
  inline void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 5;
  inline ::google::protobuf::uint32 avg_kills() const;
  inline void set_avg_kills(::google::protobuf::uint32 value);

  // optional uint32 stdev_kills = 6;
  inline bool has_stdev_kills() const;
  inline void clear_stdev_kills();
  static const int kStdevKillsFieldNumber = 6;
  inline ::google::protobuf::uint32 stdev_kills() const;
  inline void set_stdev_kills(::google::protobuf::uint32 value);

  // optional uint32 avg_damage = 7;
  inline bool has_avg_damage() const;
  inline void clear_avg_damage();
  static const int kAvgDamageFieldNumber = 7;
  inline ::google::protobuf::uint32 avg_damage() const;
  inline void set_avg_damage(::google::protobuf::uint32 value);

  // optional uint32 stdev_damage = 8;
  inline bool has_stdev_damage() const;
  inline void clear_stdev_damage();
  static const int kStdevDamageFieldNumber = 8;
  inline ::google::protobuf::uint32 stdev_damage() const;
  inline void set_stdev_damage(::google::protobuf::uint32 value);

  // optional uint32 avg_healing = 9;
  inline bool has_avg_healing() const;
  inline void clear_avg_healing();
  static const int kAvgHealingFieldNumber = 9;
  inline ::google::protobuf::uint32 avg_healing() const;
  inline void set_avg_healing(::google::protobuf::uint32 value);

  // optional uint32 stdev_healing = 10;
  inline bool has_stdev_healing() const;
  inline void clear_stdev_healing();
  static const int kStdevHealingFieldNumber = 10;
  inline ::google::protobuf::uint32 stdev_healing() const;
  inline void set_stdev_healing(::google::protobuf::uint32 value);

  // optional uint32 avg_support = 11;
  inline bool has_avg_support() const;
  inline void clear_avg_support();
  static const int kAvgSupportFieldNumber = 11;
  inline ::google::protobuf::uint32 avg_support() const;
  inline void set_avg_support(::google::protobuf::uint32 value);

  // optional uint32 stdev_support = 12;
  inline bool has_stdev_support() const;
  inline void clear_stdev_support();
  static const int kStdevSupportFieldNumber = 12;
  inline ::google::protobuf::uint32 stdev_support() const;
  inline void set_stdev_support(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_records();
  inline void clear_has_records();
  inline void set_has_avg_score();
  inline void clear_has_avg_score();
  inline void set_has_stdev_score();
  inline void clear_has_stdev_score();
  inline void set_has_avg_kills();
  inline void clear_has_avg_kills();
  inline void set_has_stdev_kills();
  inline void clear_has_stdev_kills();
  inline void set_has_avg_damage();
  inline void clear_has_avg_damage();
  inline void set_has_stdev_damage();
  inline void clear_has_stdev_damage();
  inline void set_has_avg_healing();
  inline void clear_has_avg_healing();
  inline void set_has_stdev_healing();
  inline void clear_has_stdev_healing();
  inline void set_has_avg_support();
  inline void clear_has_avg_support();
  inline void set_has_stdev_support();
  inline void clear_has_stdev_support();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 records_;
  ::google::protobuf::uint32 avg_score_;
  ::google::protobuf::uint32 stdev_score_;
  ::google::protobuf::uint32 avg_kills_;
  ::google::protobuf::uint32 stdev_kills_;
  ::google::protobuf::uint32 avg_damage_;
  ::google::protobuf::uint32 stdev_damage_;
  ::google::protobuf::uint32 avg_healing_;
  ::google::protobuf::uint32 stdev_healing_;
  ::google::protobuf::uint32 avg_support_;
  ::google::protobuf::uint32 stdev_support_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_DailyCompetitiveStatsRollup_Response();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup_Response();

  CMsgGC_DailyCompetitiveStatsRollup_Response(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);

  inline CMsgGC_DailyCompetitiveStatsRollup_Response& operator=(const CMsgGC_DailyCompetitiveStatsRollup_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup_Response& default_instance();

  void Swap(CMsgGC_DailyCompetitiveStatsRollup_Response* other);

  // implements Message ----------------------------------------------

  CMsgGC_DailyCompetitiveStatsRollup_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry RankBucketEntry;

  // accessors -------------------------------------------------------

  // repeated .CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry rankdata = 1;
  inline int rankdata_size() const;
  inline void clear_rankdata();
  static const int kRankdataFieldNumber = 1;
  inline const ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& rankdata(int index) const;
  inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* mutable_rankdata(int index);
  inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* add_rankdata();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >&
      rankdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >*
      mutable_rankdata();

  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup_Response)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry > rankdata_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_DailyCompetitiveStatsRollup_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_ReportPlayer : public ::google::protobuf::Message {
 public:
  CMsgGC_ReportPlayer();
  virtual ~CMsgGC_ReportPlayer();

  CMsgGC_ReportPlayer(const CMsgGC_ReportPlayer& from);

  inline CMsgGC_ReportPlayer& operator=(const CMsgGC_ReportPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_ReportPlayer& default_instance();

  void Swap(CMsgGC_ReportPlayer* other);

  // implements Message ----------------------------------------------

  CMsgGC_ReportPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_ReportPlayer& from);
  void MergeFrom(const CMsgGC_ReportPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_ReportPlayer_EReason EReason;
  static const EReason kReason_INVALID = CMsgGC_ReportPlayer_EReason_kReason_INVALID;
  static const EReason kReason_CHEATING = CMsgGC_ReportPlayer_EReason_kReason_CHEATING;
  static const EReason kReason_IDLE = CMsgGC_ReportPlayer_EReason_kReason_IDLE;
  static const EReason kReason_HARASSMENT = CMsgGC_ReportPlayer_EReason_kReason_HARASSMENT;
  static const EReason kReason_GRIEFING = CMsgGC_ReportPlayer_EReason_kReason_GRIEFING;
  static const EReason kReason_COUNT = CMsgGC_ReportPlayer_EReason_kReason_COUNT;
  static inline bool EReason_IsValid(int value) {
    return CMsgGC_ReportPlayer_EReason_IsValid(value);
  }
  static const EReason EReason_MIN =
    CMsgGC_ReportPlayer_EReason_EReason_MIN;
  static const EReason EReason_MAX =
    CMsgGC_ReportPlayer_EReason_EReason_MAX;
  static const int EReason_ARRAYSIZE =
    CMsgGC_ReportPlayer_EReason_EReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EReason_descriptor() {
    return CMsgGC_ReportPlayer_EReason_descriptor();
  }
  static inline const ::std::string& EReason_Name(EReason value) {
    return CMsgGC_ReportPlayer_EReason_Name(value);
  }
  static inline bool EReason_Parse(const ::std::string& name,
      EReason* value) {
    return CMsgGC_ReportPlayer_EReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 account_id_target = 1;
  inline bool has_account_id_target() const;
  inline void clear_account_id_target();
  static const int kAccountIdTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_target() const;
  inline void set_account_id_target(::google::protobuf::uint32 value);

  // optional .CMsgGC_ReportPlayer.EReason reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::CMsgGC_ReportPlayer_EReason reason() const;
  inline void set_reason(::CMsgGC_ReportPlayer_EReason value);

  // @@protoc_insertion_point(class_scope:CMsgGC_ReportPlayer)
 private:
  inline void set_has_account_id_target();
  inline void clear_has_account_id_target();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_target_;
  int reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_ReportPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFMatchResultPlayerStats : public ::google::protobuf::Message {
 public:
  CSOTFMatchResultPlayerStats();
  virtual ~CSOTFMatchResultPlayerStats();

  CSOTFMatchResultPlayerStats(const CSOTFMatchResultPlayerStats& from);

  inline CSOTFMatchResultPlayerStats& operator=(const CSOTFMatchResultPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMatchResultPlayerStats& default_instance();

  void Swap(CSOTFMatchResultPlayerStats* other);

  // implements Message ----------------------------------------------

  CSOTFMatchResultPlayerStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFMatchResultPlayerStats& from);
  void MergeFrom(const CSOTFMatchResultPlayerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional int32 match_group = 3;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 3;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);

  // optional uint32 endtime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 season_id = 5;
  inline bool has_season_id() const;
  inline void clear_season_id();
  static const int kSeasonIdFieldNumber = 5;
  inline ::google::protobuf::uint32 season_id() const;
  inline void set_season_id(::google::protobuf::uint32 value);

  // optional uint32 status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 original_party_id = 7;
  inline bool has_original_party_id() const;
  inline void clear_original_party_id();
  static const int kOriginalPartyIdFieldNumber = 7;
  inline ::google::protobuf::uint32 original_party_id() const;
  inline void set_original_party_id(::google::protobuf::uint32 value);

  // optional uint32 team = 8;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 8;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);

  // optional uint32 score = 9;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 9;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 ping = 10;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 10;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);

  // optional uint32 flags = 11;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 11;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 display_rating = 12;
  inline bool has_display_rating() const;
  inline void clear_display_rating();
  static const int kDisplayRatingFieldNumber = 12;
  inline ::google::protobuf::uint32 display_rating() const;
  inline void set_display_rating(::google::protobuf::uint32 value);

  // optional int32 display_rating_change = 13;
  inline bool has_display_rating_change() const;
  inline void clear_display_rating_change();
  static const int kDisplayRatingChangeFieldNumber = 13;
  inline ::google::protobuf::int32 display_rating_change() const;
  inline void set_display_rating_change(::google::protobuf::int32 value);

  // optional uint32 rank = 14;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 14;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 classes_played = 15;
  inline bool has_classes_played() const;
  inline void clear_classes_played();
  static const int kClassesPlayedFieldNumber = 15;
  inline ::google::protobuf::uint32 classes_played() const;
  inline void set_classes_played(::google::protobuf::uint32 value);

  // optional uint32 kills = 16;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 16;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 17;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 17;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 damage = 18;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 18;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);

  // optional uint32 healing = 19;
  inline bool has_healing() const;
  inline void clear_healing();
  static const int kHealingFieldNumber = 19;
  inline ::google::protobuf::uint32 healing() const;
  inline void set_healing(::google::protobuf::uint32 value);

  // optional uint32 support = 20;
  inline bool has_support() const;
  inline void clear_support();
  static const int kSupportFieldNumber = 20;
  inline ::google::protobuf::uint32 support() const;
  inline void set_support(::google::protobuf::uint32 value);

  // optional uint32 score_medal = 21;
  inline bool has_score_medal() const;
  inline void clear_score_medal();
  static const int kScoreMedalFieldNumber = 21;
  inline ::google::protobuf::uint32 score_medal() const;
  inline void set_score_medal(::google::protobuf::uint32 value);

  // optional uint32 kills_medal = 22;
  inline bool has_kills_medal() const;
  inline void clear_kills_medal();
  static const int kKillsMedalFieldNumber = 22;
  inline ::google::protobuf::uint32 kills_medal() const;
  inline void set_kills_medal(::google::protobuf::uint32 value);

  // optional uint32 damage_medal = 23;
  inline bool has_damage_medal() const;
  inline void clear_damage_medal();
  static const int kDamageMedalFieldNumber = 23;
  inline ::google::protobuf::uint32 damage_medal() const;
  inline void set_damage_medal(::google::protobuf::uint32 value);

  // optional uint32 healing_medal = 24;
  inline bool has_healing_medal() const;
  inline void clear_healing_medal();
  static const int kHealingMedalFieldNumber = 24;
  inline ::google::protobuf::uint32 healing_medal() const;
  inline void set_healing_medal(::google::protobuf::uint32 value);

  // optional uint32 support_medal = 25;
  inline bool has_support_medal() const;
  inline void clear_support_medal();
  static const int kSupportMedalFieldNumber = 25;
  inline ::google::protobuf::uint32 support_medal() const;
  inline void set_support_medal(::google::protobuf::uint32 value);

  // optional uint32 map_index = 26;
  inline bool has_map_index() const;
  inline void clear_map_index();
  static const int kMapIndexFieldNumber = 26;
  inline ::google::protobuf::uint32 map_index() const;
  inline void set_map_index(::google::protobuf::uint32 value);

  // optional uint32 winning_team = 27;
  inline bool has_winning_team() const;
  inline void clear_winning_team();
  static const int kWinningTeamFieldNumber = 27;
  inline ::google::protobuf::uint32 winning_team() const;
  inline void set_winning_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFMatchResultPlayerStats)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_season_id();
  inline void clear_has_season_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_original_party_id();
  inline void clear_has_original_party_id();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_ping();
  inline void clear_has_ping();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_display_rating();
  inline void clear_has_display_rating();
  inline void set_has_display_rating_change();
  inline void clear_has_display_rating_change();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_classes_played();
  inline void clear_has_classes_played();
  inline void set_has_kills();
  inline void clear_has_kills();
  inline void set_has_deaths();
  inline void clear_has_deaths();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_healing();
  inline void clear_has_healing();
  inline void set_has_support();
  inline void clear_has_support();
  inline void set_has_score_medal();
  inline void clear_has_score_medal();
  inline void set_has_kills_medal();
  inline void clear_has_kills_medal();
  inline void set_has_damage_medal();
  inline void clear_has_damage_medal();
  inline void set_has_healing_medal();
  inline void clear_has_healing_medal();
  inline void set_has_support_medal();
  inline void clear_has_support_medal();
  inline void set_has_map_index();
  inline void clear_has_map_index();
  inline void set_has_winning_team();
  inline void clear_has_winning_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 season_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 original_party_id_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 display_rating_;
  ::google::protobuf::int32 display_rating_change_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 classes_played_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_medal_;
  ::google::protobuf::uint32 kills_medal_;
  ::google::protobuf::uint32 damage_medal_;
  ::google::protobuf::uint32 healing_medal_;
  ::google::protobuf::uint32 support_medal_;
  ::google::protobuf::uint32 map_index_;
  ::google::protobuf::uint32 winning_team_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFMatchResultPlayerStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCRequestMatchMakerStats : public ::google::protobuf::Message {
 public:
  CMsgGCRequestMatchMakerStats();
  virtual ~CMsgGCRequestMatchMakerStats();

  CMsgGCRequestMatchMakerStats(const CMsgGCRequestMatchMakerStats& from);

  inline CMsgGCRequestMatchMakerStats& operator=(const CMsgGCRequestMatchMakerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestMatchMakerStats& default_instance();

  void Swap(CMsgGCRequestMatchMakerStats* other);

  // implements Message ----------------------------------------------

  CMsgGCRequestMatchMakerStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCRequestMatchMakerStats& from);
  void MergeFrom(const CMsgGCRequestMatchMakerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCRequestMatchMakerStats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCRequestMatchMakerStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCDataCenterPopulation : public ::google::protobuf::Message {
 public:
  CMsgGCDataCenterPopulation();
  virtual ~CMsgGCDataCenterPopulation();

  CMsgGCDataCenterPopulation(const CMsgGCDataCenterPopulation& from);

  inline CMsgGCDataCenterPopulation& operator=(const CMsgGCDataCenterPopulation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCDataCenterPopulation& default_instance();

  void Swap(CMsgGCDataCenterPopulation* other);

  // implements Message ----------------------------------------------

  CMsgGCDataCenterPopulation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCDataCenterPopulation& from);
  void MergeFrom(const CMsgGCDataCenterPopulation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional float health_ratio = 2;
  inline bool has_health_ratio() const;
  inline void clear_health_ratio();
  static const int kHealthRatioFieldNumber = 2;
  inline float health_ratio() const;
  inline void set_health_ratio(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCDataCenterPopulation)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_health_ratio();
  inline void clear_has_health_ratio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  float health_ratio_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCDataCenterPopulation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchGroupDataCenterPopulation : public ::google::protobuf::Message {
 public:
  CMsgGCMatchGroupDataCenterPopulation();
  virtual ~CMsgGCMatchGroupDataCenterPopulation();

  CMsgGCMatchGroupDataCenterPopulation(const CMsgGCMatchGroupDataCenterPopulation& from);

  inline CMsgGCMatchGroupDataCenterPopulation& operator=(const CMsgGCMatchGroupDataCenterPopulation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchGroupDataCenterPopulation& default_instance();

  void Swap(CMsgGCMatchGroupDataCenterPopulation* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchGroupDataCenterPopulation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchGroupDataCenterPopulation& from);
  void MergeFrom(const CMsgGCMatchGroupDataCenterPopulation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCDataCenterPopulation data_center_population = 1;
  inline int data_center_population_size() const;
  inline void clear_data_center_population();
  static const int kDataCenterPopulationFieldNumber = 1;
  inline const ::CMsgGCDataCenterPopulation& data_center_population(int index) const;
  inline ::CMsgGCDataCenterPopulation* mutable_data_center_population(int index);
  inline ::CMsgGCDataCenterPopulation* add_data_center_population();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >&
      data_center_population() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >*
      mutable_data_center_population();

  // @@protoc_insertion_point(class_scope:CMsgGCMatchGroupDataCenterPopulation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation > data_center_population_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchGroupDataCenterPopulation* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchMakerStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCMatchMakerStatsResponse();
  virtual ~CMsgGCMatchMakerStatsResponse();

  CMsgGCMatchMakerStatsResponse(const CMsgGCMatchMakerStatsResponse& from);

  inline CMsgGCMatchMakerStatsResponse& operator=(const CMsgGCMatchMakerStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchMakerStatsResponse& default_instance();

  void Swap(CMsgGCMatchMakerStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchMakerStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchMakerStatsResponse& from);
  void MergeFrom(const CMsgGCMatchMakerStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 map_count = 1;
  inline int map_count_size() const;
  inline void clear_map_count();
  static const int kMapCountFieldNumber = 1;
  inline ::google::protobuf::uint32 map_count(int index) const;
  inline void set_map_count(int index, ::google::protobuf::uint32 value);
  inline void add_map_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      map_count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_map_count();

  // repeated .CMsgGCMatchGroupDataCenterPopulation matchgroup_data_center_population = 2;
  inline int matchgroup_data_center_population_size() const;
  inline void clear_matchgroup_data_center_population();
  static const int kMatchgroupDataCenterPopulationFieldNumber = 2;
  inline const ::CMsgGCMatchGroupDataCenterPopulation& matchgroup_data_center_population(int index) const;
  inline ::CMsgGCMatchGroupDataCenterPopulation* mutable_matchgroup_data_center_population(int index);
  inline ::CMsgGCMatchGroupDataCenterPopulation* add_matchgroup_data_center_population();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >&
      matchgroup_data_center_population() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >*
      mutable_matchgroup_data_center_population();

  // @@protoc_insertion_point(class_scope:CMsgGCMatchMakerStatsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > map_count_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation > matchgroup_data_center_population_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchMakerStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchHistoryLoad : public ::google::protobuf::Message {
 public:
  CMsgGCMatchHistoryLoad();
  virtual ~CMsgGCMatchHistoryLoad();

  CMsgGCMatchHistoryLoad(const CMsgGCMatchHistoryLoad& from);

  inline CMsgGCMatchHistoryLoad& operator=(const CMsgGCMatchHistoryLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchHistoryLoad& default_instance();

  void Swap(CMsgGCMatchHistoryLoad* other);

  // implements Message ----------------------------------------------

  CMsgGCMatchHistoryLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchHistoryLoad& from);
  void MergeFrom(const CMsgGCMatchHistoryLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ETFMatchGroup match_group = 1 [default = k_eTFMatchGroup_Invalid];
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 1;
  inline ::ETFMatchGroup match_group() const;
  inline void set_match_group(::ETFMatchGroup value);

  // @@protoc_insertion_point(class_scope:CMsgGCMatchHistoryLoad)
 private:
  inline void set_has_match_group();
  inline void clear_has_match_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int match_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMatchHistoryLoad* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCDataCenterPing_Update_PingEntry : public ::google::protobuf::Message {
 public:
  CMsgGCDataCenterPing_Update_PingEntry();
  virtual ~CMsgGCDataCenterPing_Update_PingEntry();

  CMsgGCDataCenterPing_Update_PingEntry(const CMsgGCDataCenterPing_Update_PingEntry& from);

  inline CMsgGCDataCenterPing_Update_PingEntry& operator=(const CMsgGCDataCenterPing_Update_PingEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCDataCenterPing_Update_PingEntry& default_instance();

  void Swap(CMsgGCDataCenterPing_Update_PingEntry* other);

  // implements Message ----------------------------------------------

  CMsgGCDataCenterPing_Update_PingEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCDataCenterPing_Update_PingEntry& from);
  void MergeFrom(const CMsgGCDataCenterPing_Update_PingEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 ping = 2;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 2;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);

  // optional .CMsgGCDataCenterPing_Update.Status ping_status = 3 [default = Normal];
  inline bool has_ping_status() const;
  inline void clear_ping_status();
  static const int kPingStatusFieldNumber = 3;
  inline ::CMsgGCDataCenterPing_Update_Status ping_status() const;
  inline void set_ping_status(::CMsgGCDataCenterPing_Update_Status value);

  // @@protoc_insertion_point(class_scope:CMsgGCDataCenterPing_Update.PingEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_ping();
  inline void clear_has_ping();
  inline void set_has_ping_status();
  inline void clear_has_ping_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 ping_;
  int ping_status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCDataCenterPing_Update_PingEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCDataCenterPing_Update : public ::google::protobuf::Message {
 public:
  CMsgGCDataCenterPing_Update();
  virtual ~CMsgGCDataCenterPing_Update();

  CMsgGCDataCenterPing_Update(const CMsgGCDataCenterPing_Update& from);

  inline CMsgGCDataCenterPing_Update& operator=(const CMsgGCDataCenterPing_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCDataCenterPing_Update& default_instance();

  void Swap(CMsgGCDataCenterPing_Update* other);

  // implements Message ----------------------------------------------

  CMsgGCDataCenterPing_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCDataCenterPing_Update& from);
  void MergeFrom(const CMsgGCDataCenterPing_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCDataCenterPing_Update_PingEntry PingEntry;

  typedef CMsgGCDataCenterPing_Update_Status Status;
  static const Status Invalid = CMsgGCDataCenterPing_Update_Status_Invalid;
  static const Status Normal = CMsgGCDataCenterPing_Update_Status_Normal;
  static const Status Unreachable = CMsgGCDataCenterPing_Update_Status_Unreachable;
  static const Status FallbackToDCPing = CMsgGCDataCenterPing_Update_Status_FallbackToDCPing;
  static inline bool Status_IsValid(int value) {
    return CMsgGCDataCenterPing_Update_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CMsgGCDataCenterPing_Update_Status_Status_MIN;
  static const Status Status_MAX =
    CMsgGCDataCenterPing_Update_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CMsgGCDataCenterPing_Update_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CMsgGCDataCenterPing_Update_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CMsgGCDataCenterPing_Update_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CMsgGCDataCenterPing_Update_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgGCDataCenterPing_Update.PingEntry pingdata = 1;
  inline int pingdata_size() const;
  inline void clear_pingdata();
  static const int kPingdataFieldNumber = 1;
  inline const ::CMsgGCDataCenterPing_Update_PingEntry& pingdata(int index) const;
  inline ::CMsgGCDataCenterPing_Update_PingEntry* mutable_pingdata(int index);
  inline ::CMsgGCDataCenterPing_Update_PingEntry* add_pingdata();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >&
      pingdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >*
      mutable_pingdata();

  // @@protoc_insertion_point(class_scope:CMsgGCDataCenterPing_Update)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry > pingdata_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCDataCenterPing_Update* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_KickPlayerFromLobby : public ::google::protobuf::Message {
 public:
  CMsgGC_KickPlayerFromLobby();
  virtual ~CMsgGC_KickPlayerFromLobby();

  CMsgGC_KickPlayerFromLobby(const CMsgGC_KickPlayerFromLobby& from);

  inline CMsgGC_KickPlayerFromLobby& operator=(const CMsgGC_KickPlayerFromLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_KickPlayerFromLobby& default_instance();

  void Swap(CMsgGC_KickPlayerFromLobby* other);

  // implements Message ----------------------------------------------

  CMsgGC_KickPlayerFromLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_KickPlayerFromLobby& from);
  void MergeFrom(const CMsgGC_KickPlayerFromLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 targetID = 1;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint64 targetid() const;
  inline void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_KickPlayerFromLobby)
 private:
  inline void set_has_targetid();
  inline void clear_has_targetid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 targetid_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_KickPlayerFromLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSurveyRequest : public ::google::protobuf::Message {
 public:
  CMsgGCSurveyRequest();
  virtual ~CMsgGCSurveyRequest();

  CMsgGCSurveyRequest(const CMsgGCSurveyRequest& from);

  inline CMsgGCSurveyRequest& operator=(const CMsgGCSurveyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSurveyRequest& default_instance();

  void Swap(CMsgGCSurveyRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCSurveyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSurveyRequest& from);
  void MergeFrom(const CMsgGCSurveyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SurveyQuestionType question_type = 1;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 1;
  inline ::SurveyQuestionType question_type() const;
  inline void set_question_type(::SurveyQuestionType value);

  // optional uint64 match_id = 2;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSurveyRequest)
 private:
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_match_id();
  inline void clear_has_match_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int question_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSurveyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSurveyResponse : public ::google::protobuf::Message {
 public:
  CMsgGCSurveyResponse();
  virtual ~CMsgGCSurveyResponse();

  CMsgGCSurveyResponse(const CMsgGCSurveyResponse& from);

  inline CMsgGCSurveyResponse& operator=(const CMsgGCSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSurveyResponse& default_instance();

  void Swap(CMsgGCSurveyResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCSurveyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSurveyResponse& from);
  void MergeFrom(const CMsgGCSurveyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SurveyQuestionType question_type = 1;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 1;
  inline ::SurveyQuestionType question_type() const;
  inline void set_question_type(::SurveyQuestionType value);

  // optional uint64 match_id = 2;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional int32 response = 3;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 3;
  inline ::google::protobuf::int32 response() const;
  inline void set_response(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSurveyResponse)
 private:
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int question_type_;
  ::google::protobuf::int32 response_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSurveyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOQuestMapNode : public ::google::protobuf::Message {
 public:
  CSOQuestMapNode();
  virtual ~CSOQuestMapNode();

  CSOQuestMapNode(const CSOQuestMapNode& from);

  inline CSOQuestMapNode& operator=(const CSOQuestMapNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOQuestMapNode& default_instance();

  void Swap(CSOQuestMapNode* other);

  // implements Message ----------------------------------------------

  CSOQuestMapNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOQuestMapNode& from);
  void MergeFrom(const CSOQuestMapNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 defindex = 3;
  inline bool has_defindex() const;
  inline void clear_defindex();
  static const int kDefindexFieldNumber = 3;
  inline ::google::protobuf::uint32 defindex() const;
  inline void set_defindex(::google::protobuf::uint32 value);

  // optional uint32 node_id = 4;
  inline bool has_node_id() const;
  inline void clear_node_id();
  static const int kNodeIdFieldNumber = 4;
  inline ::google::protobuf::uint32 node_id() const;
  inline void set_node_id(::google::protobuf::uint32 value);

  // optional bool star_0_earned = 6 [default = false];
  inline bool has_star_0_earned() const;
  inline void clear_star_0_earned();
  static const int kStar0EarnedFieldNumber = 6;
  inline bool star_0_earned() const;
  inline void set_star_0_earned(bool value);

  // optional bool star_1_earned = 7 [default = false];
  inline bool has_star_1_earned() const;
  inline void clear_star_1_earned();
  static const int kStar1EarnedFieldNumber = 7;
  inline bool star_1_earned() const;
  inline void set_star_1_earned(bool value);

  // optional bool star_2_earned = 8 [default = false];
  inline bool has_star_2_earned() const;
  inline void clear_star_2_earned();
  static const int kStar2EarnedFieldNumber = 8;
  inline bool star_2_earned() const;
  inline void set_star_2_earned(bool value);

  // optional bool loot_claimed = 9 [default = false];
  inline bool has_loot_claimed() const;
  inline void clear_loot_claimed();
  static const int kLootClaimedFieldNumber = 9;
  inline bool loot_claimed() const;
  inline void set_loot_claimed(bool value);

  // optional uint32 selected_quest_def = 10 [default = 0];
  inline bool has_selected_quest_def() const;
  inline void clear_selected_quest_def();
  static const int kSelectedQuestDefFieldNumber = 10;
  inline ::google::protobuf::uint32 selected_quest_def() const;
  inline void set_selected_quest_def(::google::protobuf::uint32 value);

  // optional uint32 map_cycle = 11;
  inline bool has_map_cycle() const;
  inline void clear_map_cycle();
  static const int kMapCycleFieldNumber = 11;
  inline ::google::protobuf::uint32 map_cycle() const;
  inline void set_map_cycle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOQuestMapNode)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_defindex();
  inline void clear_has_defindex();
  inline void set_has_node_id();
  inline void clear_has_node_id();
  inline void set_has_star_0_earned();
  inline void clear_has_star_0_earned();
  inline void set_has_star_1_earned();
  inline void clear_has_star_1_earned();
  inline void set_has_star_2_earned();
  inline void clear_has_star_2_earned();
  inline void set_has_loot_claimed();
  inline void clear_has_loot_claimed();
  inline void set_has_selected_quest_def();
  inline void clear_has_selected_quest_def();
  inline void set_has_map_cycle();
  inline void clear_has_map_cycle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 defindex_;
  ::google::protobuf::uint32 node_id_;
  bool star_0_earned_;
  bool star_1_earned_;
  bool star_2_earned_;
  bool loot_claimed_;
  ::google::protobuf::uint32 selected_quest_def_;
  ::google::protobuf::uint32 map_cycle_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOQuestMapNode* default_instance_;
};
// -------------------------------------------------------------------

class CSOQuest : public ::google::protobuf::Message {
 public:
  CSOQuest();
  virtual ~CSOQuest();

  CSOQuest(const CSOQuest& from);

  inline CSOQuest& operator=(const CSOQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOQuest& default_instance();

  void Swap(CSOQuest* other);

  // implements Message ----------------------------------------------

  CSOQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOQuest& from);
  void MergeFrom(const CSOQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 quest_id = 2;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 2;
  inline ::google::protobuf::uint64 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint64 value);

  // optional uint32 defindex = 3;
  inline bool has_defindex() const;
  inline void clear_defindex();
  static const int kDefindexFieldNumber = 3;
  inline ::google::protobuf::uint32 defindex() const;
  inline void set_defindex(::google::protobuf::uint32 value);

  // optional bool active = 4 [default = false];
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 4;
  inline bool active() const;
  inline void set_active(bool value);

  // optional uint32 points_0 = 5;
  inline bool has_points_0() const;
  inline void clear_points_0();
  static const int kPoints0FieldNumber = 5;
  inline ::google::protobuf::uint32 points_0() const;
  inline void set_points_0(::google::protobuf::uint32 value);

  // optional uint32 points_1 = 6;
  inline bool has_points_1() const;
  inline void clear_points_1();
  static const int kPoints1FieldNumber = 6;
  inline ::google::protobuf::uint32 points_1() const;
  inline void set_points_1(::google::protobuf::uint32 value);

  // optional uint32 points_2 = 7;
  inline bool has_points_2() const;
  inline void clear_points_2();
  static const int kPoints2FieldNumber = 7;
  inline ::google::protobuf::uint32 points_2() const;
  inline void set_points_2(::google::protobuf::uint32 value);

  // optional uint32 quest_map_node_source_id = 8;
  inline bool has_quest_map_node_source_id() const;
  inline void clear_quest_map_node_source_id();
  static const int kQuestMapNodeSourceIdFieldNumber = 8;
  inline ::google::protobuf::uint32 quest_map_node_source_id() const;
  inline void set_quest_map_node_source_id(::google::protobuf::uint32 value);

  // optional uint32 map_cycle = 9;
  inline bool has_map_cycle() const;
  inline void clear_map_cycle();
  static const int kMapCycleFieldNumber = 9;
  inline ::google::protobuf::uint32 map_cycle() const;
  inline void set_map_cycle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOQuest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_defindex();
  inline void clear_has_defindex();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_points_0();
  inline void clear_has_points_0();
  inline void set_has_points_1();
  inline void clear_has_points_1();
  inline void set_has_points_2();
  inline void clear_has_points_2();
  inline void set_has_quest_map_node_source_id();
  inline void clear_has_quest_map_node_source_id();
  inline void set_has_map_cycle();
  inline void clear_has_map_cycle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 quest_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 defindex_;
  bool active_;
  ::google::protobuf::uint32 points_0_;
  ::google::protobuf::uint32 points_1_;
  ::google::protobuf::uint32 points_2_;
  ::google::protobuf::uint32 quest_map_node_source_id_;
  ::google::protobuf::uint32 map_cycle_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOQuest* default_instance_;
};
// -------------------------------------------------------------------

class CSOQuestMapRewardPurchase : public ::google::protobuf::Message {
 public:
  CSOQuestMapRewardPurchase();
  virtual ~CSOQuestMapRewardPurchase();

  CSOQuestMapRewardPurchase(const CSOQuestMapRewardPurchase& from);

  inline CSOQuestMapRewardPurchase& operator=(const CSOQuestMapRewardPurchase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOQuestMapRewardPurchase& default_instance();

  void Swap(CSOQuestMapRewardPurchase* other);

  // implements Message ----------------------------------------------

  CSOQuestMapRewardPurchase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOQuestMapRewardPurchase& from);
  void MergeFrom(const CSOQuestMapRewardPurchase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 defindex = 2;
  inline bool has_defindex() const;
  inline void clear_defindex();
  static const int kDefindexFieldNumber = 2;
  inline ::google::protobuf::uint32 defindex() const;
  inline void set_defindex(::google::protobuf::uint32 value);

  // optional uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 map_cycle = 4;
  inline bool has_map_cycle() const;
  inline void clear_map_cycle();
  static const int kMapCycleFieldNumber = 4;
  inline ::google::protobuf::uint32 map_cycle() const;
  inline void set_map_cycle(::google::protobuf::uint32 value);

  // optional uint32 purchase_id = 5;
  inline bool has_purchase_id() const;
  inline void clear_purchase_id();
  static const int kPurchaseIdFieldNumber = 5;
  inline ::google::protobuf::uint32 purchase_id() const;
  inline void set_purchase_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOQuestMapRewardPurchase)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_defindex();
  inline void clear_has_defindex();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_map_cycle();
  inline void clear_has_map_cycle();
  inline void set_has_purchase_id();
  inline void clear_has_purchase_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 defindex_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 map_cycle_;
  ::google::protobuf::uint32 purchase_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOQuestMapRewardPurchase* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestIdentify : public ::google::protobuf::Message {
 public:
  CMsgGCQuestIdentify();
  virtual ~CMsgGCQuestIdentify();

  CMsgGCQuestIdentify(const CMsgGCQuestIdentify& from);

  inline CMsgGCQuestIdentify& operator=(const CMsgGCQuestIdentify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestIdentify& default_instance();

  void Swap(CMsgGCQuestIdentify* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestIdentify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestIdentify& from);
  void MergeFrom(const CMsgGCQuestIdentify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestIdentify)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 quest_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestIdentify* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestDevGive : public ::google::protobuf::Message {
 public:
  CMsgGCQuestDevGive();
  virtual ~CMsgGCQuestDevGive();

  CMsgGCQuestDevGive(const CMsgGCQuestDevGive& from);

  inline CMsgGCQuestDevGive& operator=(const CMsgGCQuestDevGive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestDevGive& default_instance();

  void Swap(CMsgGCQuestDevGive* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestDevGive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestDevGive& from);
  void MergeFrom(const CMsgGCQuestDevGive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 quest_def_index = 1;
  inline bool has_quest_def_index() const;
  inline void clear_quest_def_index();
  static const int kQuestDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_def_index() const;
  inline void set_quest_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestDevGive)
 private:
  inline void set_has_quest_def_index();
  inline void clear_has_quest_def_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 quest_def_index_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestDevGive* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestNodeTurnIn : public ::google::protobuf::Message {
 public:
  CMsgGCQuestNodeTurnIn();
  virtual ~CMsgGCQuestNodeTurnIn();

  CMsgGCQuestNodeTurnIn(const CMsgGCQuestNodeTurnIn& from);

  inline CMsgGCQuestNodeTurnIn& operator=(const CMsgGCQuestNodeTurnIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestNodeTurnIn& default_instance();

  void Swap(CMsgGCQuestNodeTurnIn* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestNodeTurnIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestNodeTurnIn& from);
  void MergeFrom(const CMsgGCQuestNodeTurnIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 node_defindex = 1;
  inline bool has_node_defindex() const;
  inline void clear_node_defindex();
  static const int kNodeDefindexFieldNumber = 1;
  inline ::google::protobuf::uint32 node_defindex() const;
  inline void set_node_defindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestNodeTurnIn)
 private:
  inline void set_has_node_defindex();
  inline void clear_has_node_defindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 node_defindex_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestNodeTurnIn* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestMapUnlockNode : public ::google::protobuf::Message {
 public:
  CMsgGCQuestMapUnlockNode();
  virtual ~CMsgGCQuestMapUnlockNode();

  CMsgGCQuestMapUnlockNode(const CMsgGCQuestMapUnlockNode& from);

  inline CMsgGCQuestMapUnlockNode& operator=(const CMsgGCQuestMapUnlockNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestMapUnlockNode& default_instance();

  void Swap(CMsgGCQuestMapUnlockNode* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestMapUnlockNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestMapUnlockNode& from);
  void MergeFrom(const CMsgGCQuestMapUnlockNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 node_defindex = 1;
  inline bool has_node_defindex() const;
  inline void clear_node_defindex();
  static const int kNodeDefindexFieldNumber = 1;
  inline ::google::protobuf::uint32 node_defindex() const;
  inline void set_node_defindex(::google::protobuf::uint32 value);

  // optional uint32 quest_defindex = 2;
  inline bool has_quest_defindex() const;
  inline void clear_quest_defindex();
  static const int kQuestDefindexFieldNumber = 2;
  inline ::google::protobuf::uint32 quest_defindex() const;
  inline void set_quest_defindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestMapUnlockNode)
 private:
  inline void set_has_node_defindex();
  inline void clear_has_node_defindex();
  inline void set_has_quest_defindex();
  inline void clear_has_quest_defindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 node_defindex_;
  ::google::protobuf::uint32 quest_defindex_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestMapUnlockNode* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNewMatchForLobbyRequest : public ::google::protobuf::Message {
 public:
  CMsgGCNewMatchForLobbyRequest();
  virtual ~CMsgGCNewMatchForLobbyRequest();

  CMsgGCNewMatchForLobbyRequest(const CMsgGCNewMatchForLobbyRequest& from);

  inline CMsgGCNewMatchForLobbyRequest& operator=(const CMsgGCNewMatchForLobbyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNewMatchForLobbyRequest& default_instance();

  void Swap(CMsgGCNewMatchForLobbyRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCNewMatchForLobbyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNewMatchForLobbyRequest& from);
  void MergeFrom(const CMsgGCNewMatchForLobbyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 current_match_id = 1;
  inline bool has_current_match_id() const;
  inline void clear_current_match_id();
  static const int kCurrentMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 current_match_id() const;
  inline void set_current_match_id(::google::protobuf::uint64 value);

  // optional uint32 next_map_id = 2;
  inline bool has_next_map_id() const;
  inline void clear_next_map_id();
  static const int kNextMapIdFieldNumber = 2;
  inline ::google::protobuf::uint32 next_map_id() const;
  inline void set_next_map_id(::google::protobuf::uint32 value);

  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCNewMatchForLobbyRequest)
 private:
  inline void set_has_current_match_id();
  inline void clear_has_current_match_id();
  inline void set_has_next_map_id();
  inline void clear_has_next_map_id();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 current_match_id_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 next_map_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNewMatchForLobbyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNewMatchForLobbyResponse : public ::google::protobuf::Message {
 public:
  CMsgGCNewMatchForLobbyResponse();
  virtual ~CMsgGCNewMatchForLobbyResponse();

  CMsgGCNewMatchForLobbyResponse(const CMsgGCNewMatchForLobbyResponse& from);

  inline CMsgGCNewMatchForLobbyResponse& operator=(const CMsgGCNewMatchForLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNewMatchForLobbyResponse& default_instance();

  void Swap(CMsgGCNewMatchForLobbyResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCNewMatchForLobbyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNewMatchForLobbyResponse& from);
  void MergeFrom(const CMsgGCNewMatchForLobbyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCNewMatchForLobbyResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCNewMatchForLobbyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCChangeMatchPlayerTeamsRequest_Member : public ::google::protobuf::Message {
 public:
  CMsgGCChangeMatchPlayerTeamsRequest_Member();
  virtual ~CMsgGCChangeMatchPlayerTeamsRequest_Member();

  CMsgGCChangeMatchPlayerTeamsRequest_Member(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from);

  inline CMsgGCChangeMatchPlayerTeamsRequest_Member& operator=(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCChangeMatchPlayerTeamsRequest_Member& default_instance();

  void Swap(CMsgGCChangeMatchPlayerTeamsRequest_Member* other);

  // implements Message ----------------------------------------------

  CMsgGCChangeMatchPlayerTeamsRequest_Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from);
  void MergeFrom(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 member_id = 1;
  inline bool has_member_id() const;
  inline void clear_member_id();
  static const int kMemberIdFieldNumber = 1;
  inline ::google::protobuf::uint64 member_id() const;
  inline void set_member_id(::google::protobuf::uint64 value);

  // optional .TF_GC_TEAM new_team = 2 [default = TF_GC_TEAM_NOTEAM];
  inline bool has_new_team() const;
  inline void clear_new_team();
  static const int kNewTeamFieldNumber = 2;
  inline ::TF_GC_TEAM new_team() const;
  inline void set_new_team(::TF_GC_TEAM value);

  // @@protoc_insertion_point(class_scope:CMsgGCChangeMatchPlayerTeamsRequest.Member)
 private:
  inline void set_has_member_id();
  inline void clear_has_member_id();
  inline void set_has_new_team();
  inline void clear_has_new_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 member_id_;
  int new_team_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCChangeMatchPlayerTeamsRequest_Member* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCChangeMatchPlayerTeamsRequest : public ::google::protobuf::Message {
 public:
  CMsgGCChangeMatchPlayerTeamsRequest();
  virtual ~CMsgGCChangeMatchPlayerTeamsRequest();

  CMsgGCChangeMatchPlayerTeamsRequest(const CMsgGCChangeMatchPlayerTeamsRequest& from);

  inline CMsgGCChangeMatchPlayerTeamsRequest& operator=(const CMsgGCChangeMatchPlayerTeamsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCChangeMatchPlayerTeamsRequest& default_instance();

  void Swap(CMsgGCChangeMatchPlayerTeamsRequest* other);

  // implements Message ----------------------------------------------

  CMsgGCChangeMatchPlayerTeamsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCChangeMatchPlayerTeamsRequest& from);
  void MergeFrom(const CMsgGCChangeMatchPlayerTeamsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCChangeMatchPlayerTeamsRequest_Member Member;

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 2;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // repeated .CMsgGCChangeMatchPlayerTeamsRequest.Member member = 3;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 3;
  inline const ::CMsgGCChangeMatchPlayerTeamsRequest_Member& member(int index) const;
  inline ::CMsgGCChangeMatchPlayerTeamsRequest_Member* mutable_member(int index);
  inline ::CMsgGCChangeMatchPlayerTeamsRequest_Member* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:CMsgGCChangeMatchPlayerTeamsRequest)
 private:
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member > member_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCChangeMatchPlayerTeamsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCChangeMatchPlayerTeamsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCChangeMatchPlayerTeamsResponse();
  virtual ~CMsgGCChangeMatchPlayerTeamsResponse();

  CMsgGCChangeMatchPlayerTeamsResponse(const CMsgGCChangeMatchPlayerTeamsResponse& from);

  inline CMsgGCChangeMatchPlayerTeamsResponse& operator=(const CMsgGCChangeMatchPlayerTeamsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCChangeMatchPlayerTeamsResponse& default_instance();

  void Swap(CMsgGCChangeMatchPlayerTeamsResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCChangeMatchPlayerTeamsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCChangeMatchPlayerTeamsResponse& from);
  void MergeFrom(const CMsgGCChangeMatchPlayerTeamsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCChangeMatchPlayerTeamsResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCChangeMatchPlayerTeamsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestComplete_Debug : public ::google::protobuf::Message {
 public:
  CMsgGCQuestComplete_Debug();
  virtual ~CMsgGCQuestComplete_Debug();

  CMsgGCQuestComplete_Debug(const CMsgGCQuestComplete_Debug& from);

  inline CMsgGCQuestComplete_Debug& operator=(const CMsgGCQuestComplete_Debug& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestComplete_Debug& default_instance();

  void Swap(CMsgGCQuestComplete_Debug* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestComplete_Debug* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestComplete_Debug& from);
  void MergeFrom(const CMsgGCQuestComplete_Debug& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint64 value);

  // optional uint32 points_type = 2;
  inline bool has_points_type() const;
  inline void clear_points_type();
  static const int kPointsTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 points_type() const;
  inline void set_points_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestComplete_Debug)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_points_type();
  inline void clear_has_points_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 quest_id_;
  ::google::protobuf::uint32 points_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestComplete_Debug* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestMap_Debug : public ::google::protobuf::Message {
 public:
  CMsgGCQuestMap_Debug();
  virtual ~CMsgGCQuestMap_Debug();

  CMsgGCQuestMap_Debug(const CMsgGCQuestMap_Debug& from);

  inline CMsgGCQuestMap_Debug& operator=(const CMsgGCQuestMap_Debug& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestMap_Debug& default_instance();

  void Swap(CMsgGCQuestMap_Debug* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestMap_Debug* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestMap_Debug& from);
  void MergeFrom(const CMsgGCQuestMap_Debug& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reset_operation = 1;
  inline bool has_reset_operation() const;
  inline void clear_reset_operation();
  static const int kResetOperationFieldNumber = 1;
  inline ::google::protobuf::uint32 reset_operation() const;
  inline void set_reset_operation(::google::protobuf::uint32 value);

  // optional uint32 give_credit = 2;
  inline bool has_give_credit() const;
  inline void clear_give_credit();
  static const int kGiveCreditFieldNumber = 2;
  inline ::google::protobuf::uint32 give_credit() const;
  inline void set_give_credit(::google::protobuf::uint32 value);

  // optional .CMsgGCQuestMapUnlockNode unlock_node = 3;
  inline bool has_unlock_node() const;
  inline void clear_unlock_node();
  static const int kUnlockNodeFieldNumber = 3;
  inline const ::CMsgGCQuestMapUnlockNode& unlock_node() const;
  inline ::CMsgGCQuestMapUnlockNode* mutable_unlock_node();
  inline ::CMsgGCQuestMapUnlockNode* release_unlock_node();
  inline void set_allocated_unlock_node(::CMsgGCQuestMapUnlockNode* unlock_node);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestMap_Debug)
 private:
  inline void set_has_reset_operation();
  inline void clear_has_reset_operation();
  inline void set_has_give_credit();
  inline void clear_has_give_credit();
  inline void set_has_unlock_node();
  inline void clear_has_unlock_node();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 reset_operation_;
  ::google::protobuf::uint32 give_credit_;
  ::CMsgGCQuestMapUnlockNode* unlock_node_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestMap_Debug* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestMapPurchaseReward : public ::google::protobuf::Message {
 public:
  CMsgGCQuestMapPurchaseReward();
  virtual ~CMsgGCQuestMapPurchaseReward();

  CMsgGCQuestMapPurchaseReward(const CMsgGCQuestMapPurchaseReward& from);

  inline CMsgGCQuestMapPurchaseReward& operator=(const CMsgGCQuestMapPurchaseReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestMapPurchaseReward& default_instance();

  void Swap(CMsgGCQuestMapPurchaseReward* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestMapPurchaseReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestMapPurchaseReward& from);
  void MergeFrom(const CMsgGCQuestMapPurchaseReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 store_item_defindex = 1;
  inline bool has_store_item_defindex() const;
  inline void clear_store_item_defindex();
  static const int kStoreItemDefindexFieldNumber = 1;
  inline ::google::protobuf::uint32 store_item_defindex() const;
  inline void set_store_item_defindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestMapPurchaseReward)
 private:
  inline void set_has_store_item_defindex();
  inline void clear_has_store_item_defindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 store_item_defindex_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestMapPurchaseReward* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCQuestResponse : public ::google::protobuf::Message {
 public:
  CMsgGCQuestResponse();
  virtual ~CMsgGCQuestResponse();

  CMsgGCQuestResponse(const CMsgGCQuestResponse& from);

  inline CMsgGCQuestResponse& operator=(const CMsgGCQuestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCQuestResponse& default_instance();

  void Swap(CMsgGCQuestResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCQuestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCQuestResponse& from);
  void MergeFrom(const CMsgGCQuestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = false];
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCQuestResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCQuestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCSetDisablePartyQuestProgress : public ::google::protobuf::Message {
 public:
  CMsgGCSetDisablePartyQuestProgress();
  virtual ~CMsgGCSetDisablePartyQuestProgress();

  CMsgGCSetDisablePartyQuestProgress(const CMsgGCSetDisablePartyQuestProgress& from);

  inline CMsgGCSetDisablePartyQuestProgress& operator=(const CMsgGCSetDisablePartyQuestProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSetDisablePartyQuestProgress& default_instance();

  void Swap(CMsgGCSetDisablePartyQuestProgress* other);

  // implements Message ----------------------------------------------

  CMsgGCSetDisablePartyQuestProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCSetDisablePartyQuestProgress& from);
  void MergeFrom(const CMsgGCSetDisablePartyQuestProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline bool state() const;
  inline void set_state(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCSetDisablePartyQuestProgress)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool state_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCSetDisablePartyQuestProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgQuestProgressReport : public ::google::protobuf::Message {
 public:
  CMsgQuestProgressReport();
  virtual ~CMsgQuestProgressReport();

  CMsgQuestProgressReport(const CMsgQuestProgressReport& from);

  inline CMsgQuestProgressReport& operator=(const CMsgQuestProgressReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgQuestProgressReport& default_instance();

  void Swap(CMsgQuestProgressReport* other);

  // implements Message ----------------------------------------------

  CMsgQuestProgressReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgQuestProgressReport& from);
  void MergeFrom(const CMsgQuestProgressReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint64 value);

  // optional bool star_0_earned = 2;
  inline bool has_star_0_earned() const;
  inline void clear_star_0_earned();
  static const int kStar0EarnedFieldNumber = 2;
  inline bool star_0_earned() const;
  inline void set_star_0_earned(bool value);

  // optional bool star_1_earned = 3;
  inline bool has_star_1_earned() const;
  inline void clear_star_1_earned();
  static const int kStar1EarnedFieldNumber = 3;
  inline bool star_1_earned() const;
  inline void set_star_1_earned(bool value);

  // optional bool star_2_earned = 4;
  inline bool has_star_2_earned() const;
  inline void clear_star_2_earned();
  static const int kStar2EarnedFieldNumber = 4;
  inline bool star_2_earned() const;
  inline void set_star_2_earned(bool value);

  // repeated uint64 items_earned = 5;
  inline int items_earned_size() const;
  inline void clear_items_earned();
  static const int kItemsEarnedFieldNumber = 5;
  inline ::google::protobuf::uint64 items_earned(int index) const;
  inline void set_items_earned(int index, ::google::protobuf::uint64 value);
  inline void add_items_earned(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      items_earned() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_items_earned();

  // optional uint32 reward_credits_earned = 6;
  inline bool has_reward_credits_earned() const;
  inline void clear_reward_credits_earned();
  static const int kRewardCreditsEarnedFieldNumber = 6;
  inline ::google::protobuf::uint32 reward_credits_earned() const;
  inline void set_reward_credits_earned(::google::protobuf::uint32 value);

  // optional bool contract_completed = 7;
  inline bool has_contract_completed() const;
  inline void clear_contract_completed();
  static const int kContractCompletedFieldNumber = 7;
  inline bool contract_completed() const;
  inline void set_contract_completed(bool value);

  // @@protoc_insertion_point(class_scope:CMsgQuestProgressReport)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_star_0_earned();
  inline void clear_has_star_0_earned();
  inline void set_has_star_1_earned();
  inline void clear_has_star_1_earned();
  inline void set_has_star_2_earned();
  inline void clear_has_star_2_earned();
  inline void set_has_reward_credits_earned();
  inline void clear_has_reward_credits_earned();
  inline void set_has_contract_completed();
  inline void clear_has_contract_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 quest_id_;
  bool star_0_earned_;
  bool star_1_earned_;
  bool star_2_earned_;
  bool contract_completed_;
  ::google::protobuf::uint32 reward_credits_earned_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > items_earned_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgQuestProgressReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgConsumePaintkit : public ::google::protobuf::Message {
 public:
  CMsgConsumePaintkit();
  virtual ~CMsgConsumePaintkit();

  CMsgConsumePaintkit(const CMsgConsumePaintkit& from);

  inline CMsgConsumePaintkit& operator=(const CMsgConsumePaintkit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConsumePaintkit& default_instance();

  void Swap(CMsgConsumePaintkit* other);

  // implements Message ----------------------------------------------

  CMsgConsumePaintkit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgConsumePaintkit& from);
  void MergeFrom(const CMsgConsumePaintkit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 source_id = 1;
  inline bool has_source_id() const;
  inline void clear_source_id();
  static const int kSourceIdFieldNumber = 1;
  inline ::google::protobuf::uint64 source_id() const;
  inline void set_source_id(::google::protobuf::uint64 value);

  // optional uint32 target_defindex = 2;
  inline bool has_target_defindex() const;
  inline void clear_target_defindex();
  static const int kTargetDefindexFieldNumber = 2;
  inline ::google::protobuf::uint32 target_defindex() const;
  inline void set_target_defindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgConsumePaintkit)
 private:
  inline void set_has_source_id();
  inline void clear_has_source_id();
  inline void set_has_target_defindex();
  inline void clear_has_target_defindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 source_id_;
  ::google::protobuf::uint32 target_defindex_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgConsumePaintkit* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPainkitDevGrant : public ::google::protobuf::Message {
 public:
  CMsgPainkitDevGrant();
  virtual ~CMsgPainkitDevGrant();

  CMsgPainkitDevGrant(const CMsgPainkitDevGrant& from);

  inline CMsgPainkitDevGrant& operator=(const CMsgPainkitDevGrant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPainkitDevGrant& default_instance();

  void Swap(CMsgPainkitDevGrant* other);

  // implements Message ----------------------------------------------

  CMsgPainkitDevGrant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPainkitDevGrant& from);
  void MergeFrom(const CMsgPainkitDevGrant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 paintkit_defindex = 1;
  inline bool has_paintkit_defindex() const;
  inline void clear_paintkit_defindex();
  static const int kPaintkitDefindexFieldNumber = 1;
  inline ::google::protobuf::uint32 paintkit_defindex() const;
  inline void set_paintkit_defindex(::google::protobuf::uint32 value);

  // optional float wear = 2;
  inline bool has_wear() const;
  inline void clear_wear();
  static const int kWearFieldNumber = 2;
  inline float wear() const;
  inline void set_wear(float value);

  // optional uint32 item_defindex = 3;
  inline bool has_item_defindex() const;
  inline void clear_item_defindex();
  static const int kItemDefindexFieldNumber = 3;
  inline ::google::protobuf::uint32 item_defindex() const;
  inline void set_item_defindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPainkitDevGrant)
 private:
  inline void set_has_paintkit_defindex();
  inline void clear_has_paintkit_defindex();
  inline void set_has_wear();
  inline void clear_has_wear();
  inline void set_has_item_defindex();
  inline void clear_has_item_defindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 paintkit_defindex_;
  float wear_;
  ::google::protobuf::uint32 item_defindex_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPainkitDevGrant* default_instance_;
};
// -------------------------------------------------------------------

class GCQuestStrangeEvent : public ::google::protobuf::Message {
 public:
  GCQuestStrangeEvent();
  virtual ~GCQuestStrangeEvent();

  GCQuestStrangeEvent(const GCQuestStrangeEvent& from);

  inline GCQuestStrangeEvent& operator=(const GCQuestStrangeEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCQuestStrangeEvent& default_instance();

  void Swap(GCQuestStrangeEvent* other);

  // implements Message ----------------------------------------------

  GCQuestStrangeEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCQuestStrangeEvent& from);
  void MergeFrom(const GCQuestStrangeEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 owner_account_id = 1;
  inline bool has_owner_account_id() const;
  inline void clear_owner_account_id();
  static const int kOwnerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 owner_account_id() const;
  inline void set_owner_account_id(::google::protobuf::uint32 value);

  // optional uint32 scorer_account_id = 2;
  inline bool has_scorer_account_id() const;
  inline void clear_scorer_account_id();
  static const int kScorerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scorer_account_id() const;
  inline void set_scorer_account_id(::google::protobuf::uint32 value);

  // optional uint64 quest_id = 3;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 3;
  inline ::google::protobuf::uint64 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint64 value);

  // optional uint32 strange_event_id = 4;
  inline bool has_strange_event_id() const;
  inline void clear_strange_event_id();
  static const int kStrangeEventIdFieldNumber = 4;
  inline ::google::protobuf::uint32 strange_event_id() const;
  inline void set_strange_event_id(::google::protobuf::uint32 value);

  // optional uint32 score = 5;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GCQuestStrangeEvent)
 private:
  inline void set_has_owner_account_id();
  inline void clear_has_owner_account_id();
  inline void set_has_scorer_account_id();
  inline void clear_has_scorer_account_id();
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_strange_event_id();
  inline void clear_has_strange_event_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 owner_account_id_;
  ::google::protobuf::uint32 scorer_account_id_;
  ::google::protobuf::uint64 quest_id_;
  ::google::protobuf::uint32 strange_event_id_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static GCQuestStrangeEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSDRTicket : public ::google::protobuf::Message {
 public:
  CMsgSDRTicket();
  virtual ~CMsgSDRTicket();

  CMsgSDRTicket(const CMsgSDRTicket& from);

  inline CMsgSDRTicket& operator=(const CMsgSDRTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSDRTicket& default_instance();

  void Swap(CMsgSDRTicket* other);

  // implements Message ----------------------------------------------

  CMsgSDRTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSDRTicket& from);
  void MergeFrom(const CMsgSDRTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes serialized_ticket = 1;
  inline bool has_serialized_ticket() const;
  inline void clear_serialized_ticket();
  static const int kSerializedTicketFieldNumber = 1;
  inline const ::std::string& serialized_ticket() const;
  inline void set_serialized_ticket(const ::std::string& value);
  inline void set_serialized_ticket(const char* value);
  inline void set_serialized_ticket(const void* value, size_t size);
  inline ::std::string* mutable_serialized_ticket();
  inline ::std::string* release_serialized_ticket();
  inline void set_allocated_serialized_ticket(::std::string* serialized_ticket);

  // @@protoc_insertion_point(class_scope:CMsgSDRTicket)
 private:
  inline void set_has_serialized_ticket();
  inline void clear_has_serialized_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* serialized_ticket_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSDRTicket* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAuthorizeServerItemRetrieval : public ::google::protobuf::Message {
 public:
  CMsgAuthorizeServerItemRetrieval();
  virtual ~CMsgAuthorizeServerItemRetrieval();

  CMsgAuthorizeServerItemRetrieval(const CMsgAuthorizeServerItemRetrieval& from);

  inline CMsgAuthorizeServerItemRetrieval& operator=(const CMsgAuthorizeServerItemRetrieval& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAuthorizeServerItemRetrieval& default_instance();

  void Swap(CMsgAuthorizeServerItemRetrieval* other);

  // implements Message ----------------------------------------------

  CMsgAuthorizeServerItemRetrieval* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAuthorizeServerItemRetrieval& from);
  void MergeFrom(const CMsgAuthorizeServerItemRetrieval& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 item_id = 1;
  inline int item_id_size() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id(int index) const;
  inline void set_item_id(int index, ::google::protobuf::uint64 value);
  inline void add_item_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_item_id();

  // @@protoc_insertion_point(class_scope:CMsgAuthorizeServerItemRetrieval)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > item_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAuthorizeServerItemRetrieval* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToGCSendAccountBannedNotifications : public ::google::protobuf::Message {
 public:
  CMsgGCToGCSendAccountBannedNotifications();
  virtual ~CMsgGCToGCSendAccountBannedNotifications();

  CMsgGCToGCSendAccountBannedNotifications(const CMsgGCToGCSendAccountBannedNotifications& from);

  inline CMsgGCToGCSendAccountBannedNotifications& operator=(const CMsgGCToGCSendAccountBannedNotifications& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSendAccountBannedNotifications& default_instance();

  void Swap(CMsgGCToGCSendAccountBannedNotifications* other);

  // implements Message ----------------------------------------------

  CMsgGCToGCSendAccountBannedNotifications* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToGCSendAccountBannedNotifications& from);
  void MergeFrom(const CMsgGCToGCSendAccountBannedNotifications& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 banned_accountid = 1;
  inline bool has_banned_accountid() const;
  inline void clear_banned_accountid();
  static const int kBannedAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 banned_accountid() const;
  inline void set_banned_accountid(::google::protobuf::uint32 value);

  // optional uint32 report_period_begin = 2;
  inline bool has_report_period_begin() const;
  inline void clear_report_period_begin();
  static const int kReportPeriodBeginFieldNumber = 2;
  inline ::google::protobuf::uint32 report_period_begin() const;
  inline void set_report_period_begin(::google::protobuf::uint32 value);

  // optional uint32 report_period_end = 3;
  inline bool has_report_period_end() const;
  inline void clear_report_period_end();
  static const int kReportPeriodEndFieldNumber = 3;
  inline ::google::protobuf::uint32 report_period_end() const;
  inline void set_report_period_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSendAccountBannedNotifications)
 private:
  inline void set_has_banned_accountid();
  inline void clear_has_banned_accountid();
  inline void set_has_report_period_begin();
  inline void clear_has_report_period_begin();
  inline void set_has_report_period_end();
  inline void clear_has_report_period_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 banned_accountid_;
  ::google::protobuf::uint32 report_period_begin_;
  ::google::protobuf::uint32 report_period_end_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToGCSendAccountBannedNotifications* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToGCSendNotification : public ::google::protobuf::Message {
 public:
  CMsgGCToGCSendNotification();
  virtual ~CMsgGCToGCSendNotification();

  CMsgGCToGCSendNotification(const CMsgGCToGCSendNotification& from);

  inline CMsgGCToGCSendNotification& operator=(const CMsgGCToGCSendNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSendNotification& default_instance();

  void Swap(CMsgGCToGCSendNotification* other);

  // implements Message ----------------------------------------------

  CMsgGCToGCSendNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToGCSendNotification& from);
  void MergeFrom(const CMsgGCToGCSendNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgGCNotification notification = 1;
  inline bool has_notification() const;
  inline void clear_notification();
  static const int kNotificationFieldNumber = 1;
  inline const ::CMsgGCNotification& notification() const;
  inline ::CMsgGCNotification* mutable_notification();
  inline ::CMsgGCNotification* release_notification();
  inline void set_allocated_notification(::CMsgGCNotification* notification);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSendNotification)
 private:
  inline void set_has_notification();
  inline void clear_has_notification();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgGCNotification* notification_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCToGCSendNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgTFGoldenWrenchBroadcast

// optional int32 wrench_number = 1;
inline bool CMsgTFGoldenWrenchBroadcast::has_wrench_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_wrench_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_wrench_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_wrench_number() {
  wrench_number_ = 0;
  clear_has_wrench_number();
}
inline ::google::protobuf::int32 CMsgTFGoldenWrenchBroadcast::wrench_number() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.wrench_number)
  return wrench_number_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_wrench_number(::google::protobuf::int32 value) {
  set_has_wrench_number();
  wrench_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.wrench_number)
}

// optional bool deleted = 2;
inline bool CMsgTFGoldenWrenchBroadcast::has_deleted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_deleted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool CMsgTFGoldenWrenchBroadcast::deleted() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.deleted)
  return deleted_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.deleted)
}

// optional string user_name = 3;
inline bool CMsgTFGoldenWrenchBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgTFGoldenWrenchBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.user_name)
  return *user_name_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFGoldenWrenchBroadcast.user_name)
  return user_name_;
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFGoldenWrenchBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFGoldenWrenchBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgTFSaxxyBroadcast

// optional int32 category_number = 1;
inline bool CMsgTFSaxxyBroadcast::has_category_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_category_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_category_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_category_number() {
  category_number_ = 0;
  clear_has_category_number();
}
inline ::google::protobuf::int32 CMsgTFSaxxyBroadcast::category_number() const {
  // @@protoc_insertion_point(field_get:CMsgTFSaxxyBroadcast.category_number)
  return category_number_;
}
inline void CMsgTFSaxxyBroadcast::set_category_number(::google::protobuf::int32 value) {
  set_has_category_number();
  category_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFSaxxyBroadcast.category_number)
}

// optional string user_name = 2;
inline bool CMsgTFSaxxyBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgTFSaxxyBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFSaxxyBroadcast.user_name)
  return *user_name_;
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFSaxxyBroadcast.user_name)
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFSaxxyBroadcast.user_name)
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFSaxxyBroadcast.user_name)
}
inline ::std::string* CMsgTFSaxxyBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFSaxxyBroadcast.user_name)
  return user_name_;
}
inline ::std::string* CMsgTFSaxxyBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFSaxxyBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFSaxxyBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgGCTFSpecificItemBroadcast

// optional uint32 item_def_index = 1;
inline bool CMsgGCTFSpecificItemBroadcast::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
inline ::google::protobuf::uint32 CMsgGCTFSpecificItemBroadcast::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.item_def_index)
  return item_def_index_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.item_def_index)
}

// optional bool was_destruction = 2;
inline bool CMsgGCTFSpecificItemBroadcast::has_was_destruction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_was_destruction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_was_destruction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_was_destruction() {
  was_destruction_ = false;
  clear_has_was_destruction();
}
inline bool CMsgGCTFSpecificItemBroadcast::was_destruction() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.was_destruction)
  return was_destruction_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_was_destruction(bool value) {
  set_has_was_destruction();
  was_destruction_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.was_destruction)
}

// optional string user_name = 3;
inline bool CMsgGCTFSpecificItemBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgGCTFSpecificItemBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.user_name)
  return *user_name_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCTFSpecificItemBroadcast.user_name)
  return user_name_;
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCTFSpecificItemBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCTFSpecificItemBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgTFWorldStatus

// optional bool beta_stress_test_event_active = 1 [default = false];
inline bool CMsgTFWorldStatus::has_beta_stress_test_event_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFWorldStatus::set_has_beta_stress_test_event_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFWorldStatus::clear_has_beta_stress_test_event_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFWorldStatus::clear_beta_stress_test_event_active() {
  beta_stress_test_event_active_ = false;
  clear_has_beta_stress_test_event_active();
}
inline bool CMsgTFWorldStatus::beta_stress_test_event_active() const {
  // @@protoc_insertion_point(field_get:CMsgTFWorldStatus.beta_stress_test_event_active)
  return beta_stress_test_event_active_;
}
inline void CMsgTFWorldStatus::set_beta_stress_test_event_active(bool value) {
  set_has_beta_stress_test_event_active();
  beta_stress_test_event_active_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFWorldStatus.beta_stress_test_event_active)
}

// optional .ETFMatchGroup event_match_group = 2 [default = k_eTFMatchGroup_Invalid];
inline bool CMsgTFWorldStatus::has_event_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFWorldStatus::set_has_event_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFWorldStatus::clear_has_event_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFWorldStatus::clear_event_match_group() {
  event_match_group_ = -1;
  clear_has_event_match_group();
}
inline ::ETFMatchGroup CMsgTFWorldStatus::event_match_group() const {
  // @@protoc_insertion_point(field_get:CMsgTFWorldStatus.event_match_group)
  return static_cast< ::ETFMatchGroup >(event_match_group_);
}
inline void CMsgTFWorldStatus::set_event_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_event_match_group();
  event_match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFWorldStatus.event_match_group)
}

// optional fixed32 event_expire_time = 3 [default = 0];
inline bool CMsgTFWorldStatus::has_event_expire_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFWorldStatus::set_has_event_expire_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFWorldStatus::clear_has_event_expire_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFWorldStatus::clear_event_expire_time() {
  event_expire_time_ = 0u;
  clear_has_event_expire_time();
}
inline ::google::protobuf::uint32 CMsgTFWorldStatus::event_expire_time() const {
  // @@protoc_insertion_point(field_get:CMsgTFWorldStatus.event_expire_time)
  return event_expire_time_;
}
inline void CMsgTFWorldStatus::set_event_expire_time(::google::protobuf::uint32 value) {
  set_has_event_expire_time();
  event_expire_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFWorldStatus.event_expire_time)
}

// optional uint32 active_client_version = 4;
inline bool CMsgTFWorldStatus::has_active_client_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFWorldStatus::set_has_active_client_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFWorldStatus::clear_has_active_client_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFWorldStatus::clear_active_client_version() {
  active_client_version_ = 0u;
  clear_has_active_client_version();
}
inline ::google::protobuf::uint32 CMsgTFWorldStatus::active_client_version() const {
  // @@protoc_insertion_point(field_get:CMsgTFWorldStatus.active_client_version)
  return active_client_version_;
}
inline void CMsgTFWorldStatus::set_active_client_version(::google::protobuf::uint32 value) {
  set_has_active_client_version();
  active_client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFWorldStatus.active_client_version)
}

// repeated .ETFMatchGroup disabled_match_groups = 5;
inline int CMsgTFWorldStatus::disabled_match_groups_size() const {
  return disabled_match_groups_.size();
}
inline void CMsgTFWorldStatus::clear_disabled_match_groups() {
  disabled_match_groups_.Clear();
}
inline ::ETFMatchGroup CMsgTFWorldStatus::disabled_match_groups(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFWorldStatus.disabled_match_groups)
  return static_cast< ::ETFMatchGroup >(disabled_match_groups_.Get(index));
}
inline void CMsgTFWorldStatus::set_disabled_match_groups(int index, ::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  disabled_match_groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFWorldStatus.disabled_match_groups)
}
inline void CMsgTFWorldStatus::add_disabled_match_groups(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  disabled_match_groups_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFWorldStatus.disabled_match_groups)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgTFWorldStatus::disabled_match_groups() const {
  // @@protoc_insertion_point(field_list:CMsgTFWorldStatus.disabled_match_groups)
  return disabled_match_groups_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgTFWorldStatus::mutable_disabled_match_groups() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFWorldStatus.disabled_match_groups)
  return &disabled_match_groups_;
}

// -------------------------------------------------------------------

// CSOTFDuelSummary

// optional uint32 account_id = 1;
inline bool CSOTFDuelSummary::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFDuelSummary::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFDuelSummary::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFDuelSummary::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.account_id)
  return account_id_;
}
inline void CSOTFDuelSummary::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.account_id)
}

// optional uint32 duel_wins = 2;
inline bool CSOTFDuelSummary::has_duel_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFDuelSummary::clear_has_duel_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFDuelSummary::clear_duel_wins() {
  duel_wins_ = 0u;
  clear_has_duel_wins();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_wins() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.duel_wins)
  return duel_wins_;
}
inline void CSOTFDuelSummary::set_duel_wins(::google::protobuf::uint32 value) {
  set_has_duel_wins();
  duel_wins_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.duel_wins)
}

// optional uint32 duel_losses = 3;
inline bool CSOTFDuelSummary::has_duel_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFDuelSummary::clear_has_duel_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFDuelSummary::clear_duel_losses() {
  duel_losses_ = 0u;
  clear_has_duel_losses();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_losses() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.duel_losses)
  return duel_losses_;
}
inline void CSOTFDuelSummary::set_duel_losses(::google::protobuf::uint32 value) {
  set_has_duel_losses();
  duel_losses_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.duel_losses)
}

// optional uint32 last_duel_account_id = 4;
inline bool CSOTFDuelSummary::has_last_duel_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFDuelSummary::clear_last_duel_account_id() {
  last_duel_account_id_ = 0u;
  clear_has_last_duel_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_account_id)
  return last_duel_account_id_;
}
inline void CSOTFDuelSummary::set_last_duel_account_id(::google::protobuf::uint32 value) {
  set_has_last_duel_account_id();
  last_duel_account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_account_id)
}

// optional uint32 last_duel_timestamp = 5;
inline bool CSOTFDuelSummary::has_last_duel_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFDuelSummary::clear_last_duel_timestamp() {
  last_duel_timestamp_ = 0u;
  clear_has_last_duel_timestamp();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_timestamp() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_timestamp)
  return last_duel_timestamp_;
}
inline void CSOTFDuelSummary::set_last_duel_timestamp(::google::protobuf::uint32 value) {
  set_has_last_duel_timestamp();
  last_duel_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_timestamp)
}

// optional uint32 last_duel_status = 6;
inline bool CSOTFDuelSummary::has_last_duel_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFDuelSummary::clear_last_duel_status() {
  last_duel_status_ = 0u;
  clear_has_last_duel_status();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_status() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_status)
  return last_duel_status_;
}
inline void CSOTFDuelSummary::set_last_duel_status(::google::protobuf::uint32 value) {
  set_has_last_duel_status();
  last_duel_status_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_status)
}

// -------------------------------------------------------------------

// CSOTFMapContribution

// optional uint32 account_id = 1;
inline bool CSOTFMapContribution::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFMapContribution::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFMapContribution::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFMapContribution::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.account_id)
  return account_id_;
}
inline void CSOTFMapContribution::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.account_id)
}

// optional uint32 def_index = 2;
inline bool CSOTFMapContribution::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFMapContribution::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFMapContribution::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFMapContribution::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::def_index() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.def_index)
  return def_index_;
}
inline void CSOTFMapContribution::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.def_index)
}

// optional uint32 contribution_level = 3;
inline bool CSOTFMapContribution::has_contribution_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFMapContribution::set_has_contribution_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFMapContribution::clear_has_contribution_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFMapContribution::clear_contribution_level() {
  contribution_level_ = 0u;
  clear_has_contribution_level();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::contribution_level() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.contribution_level)
  return contribution_level_;
}
inline void CSOTFMapContribution::set_contribution_level(::google::protobuf::uint32 value) {
  set_has_contribution_level();
  contribution_level_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.contribution_level)
}

// -------------------------------------------------------------------

// CMsgTFFreeTrialChooseMostHelpfulFriend

// optional uint32 account_id_friend = 1;
inline bool CMsgTFFreeTrialChooseMostHelpfulFriend::has_account_id_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_has_account_id_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_has_account_id_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_account_id_friend() {
  account_id_friend_ = 0u;
  clear_has_account_id_friend();
}
inline ::google::protobuf::uint32 CMsgTFFreeTrialChooseMostHelpfulFriend::account_id_friend() const {
  // @@protoc_insertion_point(field_get:CMsgTFFreeTrialChooseMostHelpfulFriend.account_id_friend)
  return account_id_friend_;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_account_id_friend(::google::protobuf::uint32 value) {
  set_has_account_id_friend();
  account_id_friend_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFFreeTrialChooseMostHelpfulFriend.account_id_friend)
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2Friends

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2Friends::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2Friends::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2Friends::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestTF2Friends.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2Friends::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestTF2Friends.account_ids)
}
inline void CMsgTFRequestTF2Friends::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFRequestTF2Friends.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2Friends::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestTF2Friends.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2Friends::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestTF2Friends.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2FriendsResponse

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2FriendsResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2FriendsResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2FriendsResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestTF2FriendsResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2FriendsResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestTF2FriendsResponse.account_ids)
}
inline void CMsgTFRequestTF2FriendsResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFRequestTF2FriendsResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2FriendsResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestTF2FriendsResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2FriendsResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestTF2FriendsResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CSOTFPlayerInfo

// optional uint32 num_new_users_helped = 1;
inline bool CSOTFPlayerInfo::has_num_new_users_helped() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPlayerInfo::set_has_num_new_users_helped() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPlayerInfo::clear_has_num_new_users_helped() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPlayerInfo::clear_num_new_users_helped() {
  num_new_users_helped_ = 0u;
  clear_has_num_new_users_helped();
}
inline ::google::protobuf::uint32 CSOTFPlayerInfo::num_new_users_helped() const {
  // @@protoc_insertion_point(field_get:CSOTFPlayerInfo.num_new_users_helped)
  return num_new_users_helped_;
}
inline void CSOTFPlayerInfo::set_num_new_users_helped(::google::protobuf::uint32 value) {
  set_has_num_new_users_helped();
  num_new_users_helped_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPlayerInfo.num_new_users_helped)
}

// -------------------------------------------------------------------

// CMsgTFThankedBySomeone

// optional uint64 thanker_steam_id = 1;
inline bool CMsgTFThankedBySomeone::has_thanker_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFThankedBySomeone::set_has_thanker_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_has_thanker_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_thanker_steam_id() {
  thanker_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_thanker_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFThankedBySomeone::thanker_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFThankedBySomeone.thanker_steam_id)
  return thanker_steam_id_;
}
inline void CMsgTFThankedBySomeone::set_thanker_steam_id(::google::protobuf::uint64 value) {
  set_has_thanker_steam_id();
  thanker_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFThankedBySomeone.thanker_steam_id)
}

// -------------------------------------------------------------------

// CMsgTFThankedSomeone

// -------------------------------------------------------------------

// CMsgTFFreeTrialConvertedToPremium

// -------------------------------------------------------------------

// CMsgSaxxyAwarded

// optional uint32 category = 1;
inline bool CMsgSaxxyAwarded::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSaxxyAwarded::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgSaxxyAwarded::category() const {
  // @@protoc_insertion_point(field_get:CMsgSaxxyAwarded.category)
  return category_;
}
inline void CMsgSaxxyAwarded::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.category)
}

// repeated string winner_names = 2;
inline int CMsgSaxxyAwarded::winner_names_size() const {
  return winner_names_.size();
}
inline void CMsgSaxxyAwarded::clear_winner_names() {
  winner_names_.Clear();
}
inline const ::std::string& CMsgSaxxyAwarded::winner_names(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Get(index);
}
inline ::std::string* CMsgSaxxyAwarded::mutable_winner_names(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Mutable(index);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.winner_names)
  winner_names_.Mutable(index)->assign(value);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value) {
  winner_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value, size_t size) {
  winner_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSaxxyAwarded.winner_names)
}
inline ::std::string* CMsgSaxxyAwarded::add_winner_names() {
  return winner_names_.Add();
}
inline void CMsgSaxxyAwarded::add_winner_names(const ::std::string& value) {
  winner_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value) {
  winner_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value, size_t size) {
  winner_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSaxxyAwarded.winner_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSaxxyAwarded::winner_names() const {
  // @@protoc_insertion_point(field_list:CMsgSaxxyAwarded.winner_names)
  return winner_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSaxxyAwarded::mutable_winner_names() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSaxxyAwarded.winner_names)
  return &winner_names_;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntry

// optional string youtube_url = 1;
inline bool CMsgReplaySubmitContestEntry::has_youtube_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_youtube_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_youtube_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_youtube_url() {
  if (youtube_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_->clear();
  }
  clear_has_youtube_url();
}
inline const ::std::string& CMsgReplaySubmitContestEntry::youtube_url() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntry.youtube_url)
  return *youtube_url_;
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const ::std::string& value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntry.youtube_url)
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgReplaySubmitContestEntry.youtube_url)
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value, size_t size) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgReplaySubmitContestEntry.youtube_url)
}
inline ::std::string* CMsgReplaySubmitContestEntry::mutable_youtube_url() {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgReplaySubmitContestEntry.youtube_url)
  return youtube_url_;
}
inline ::std::string* CMsgReplaySubmitContestEntry::release_youtube_url() {
  clear_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = youtube_url_;
    youtube_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgReplaySubmitContestEntry::set_allocated_youtube_url(::std::string* youtube_url) {
  if (youtube_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete youtube_url_;
  }
  if (youtube_url) {
    set_has_youtube_url();
    youtube_url_ = youtube_url;
  } else {
    clear_has_youtube_url();
    youtube_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgReplaySubmitContestEntry.youtube_url)
}

// optional uint32 category = 2;
inline bool CMsgReplaySubmitContestEntry::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgReplaySubmitContestEntry::category() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntry.category)
  return category_;
}
inline void CMsgReplaySubmitContestEntry::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntry.category)
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntryResponse

// optional bool success = 1;
inline bool CMsgReplaySubmitContestEntryResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntryResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgReplaySubmitContestEntryResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntryResponse.success)
  return success_;
}
inline void CMsgReplaySubmitContestEntryResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntryResponse.success)
}

// -------------------------------------------------------------------

// CReplayCachedContestData

// optional fixed32 timestamp = 1;
inline bool CReplayCachedContestData::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CReplayCachedContestData::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CReplayCachedContestData::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CReplayCachedContestData::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::timestamp() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.timestamp)
  return timestamp_;
}
inline void CReplayCachedContestData::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.timestamp)
}

// optional uint32 num_votes_last_day = 2;
inline bool CReplayCachedContestData::has_num_votes_last_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CReplayCachedContestData::set_has_num_votes_last_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CReplayCachedContestData::clear_has_num_votes_last_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CReplayCachedContestData::clear_num_votes_last_day() {
  num_votes_last_day_ = 0u;
  clear_has_num_votes_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_votes_last_day() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.num_votes_last_day)
  return num_votes_last_day_;
}
inline void CReplayCachedContestData::set_num_votes_last_day(::google::protobuf::uint32 value) {
  set_has_num_votes_last_day();
  num_votes_last_day_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.num_votes_last_day)
}

// repeated uint32 video_entry_ids = 3;
inline int CReplayCachedContestData::video_entry_ids_size() const {
  return video_entry_ids_.size();
}
inline void CReplayCachedContestData::clear_video_entry_ids() {
  video_entry_ids_.Clear();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::video_entry_ids(int index) const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.video_entry_ids)
  return video_entry_ids_.Get(index);
}
inline void CReplayCachedContestData::set_video_entry_ids(int index, ::google::protobuf::uint32 value) {
  video_entry_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.video_entry_ids)
}
inline void CReplayCachedContestData::add_video_entry_ids(::google::protobuf::uint32 value) {
  video_entry_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CReplayCachedContestData.video_entry_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CReplayCachedContestData::video_entry_ids() const {
  // @@protoc_insertion_point(field_list:CReplayCachedContestData.video_entry_ids)
  return video_entry_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CReplayCachedContestData::mutable_video_entry_ids() {
  // @@protoc_insertion_point(field_mutable_list:CReplayCachedContestData.video_entry_ids)
  return &video_entry_ids_;
}

// optional uint32 num_flags_last_day = 4;
inline bool CReplayCachedContestData::has_num_flags_last_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CReplayCachedContestData::set_has_num_flags_last_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CReplayCachedContestData::clear_has_num_flags_last_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CReplayCachedContestData::clear_num_flags_last_day() {
  num_flags_last_day_ = 0u;
  clear_has_num_flags_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_flags_last_day() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.num_flags_last_day)
  return num_flags_last_day_;
}
inline void CReplayCachedContestData::set_num_flags_last_day(::google::protobuf::uint32 value) {
  set_has_num_flags_last_day();
  num_flags_last_day_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.num_flags_last_day)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AddToCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveFromCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoach

// optional uint32 account_id_friend_as_coach = 1;
inline bool CMsgTFCoaching_FindCoach::has_account_id_friend_as_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoach::set_has_account_id_friend_as_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_has_account_id_friend_as_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_account_id_friend_as_coach() {
  account_id_friend_as_coach_ = 0u;
  clear_has_account_id_friend_as_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoach::account_id_friend_as_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoach.account_id_friend_as_coach)
  return account_id_friend_as_coach_;
}
inline void CMsgTFCoaching_FindCoach::set_account_id_friend_as_coach(::google::protobuf::uint32 value) {
  set_has_account_id_friend_as_coach();
  account_id_friend_as_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoach.account_id_friend_as_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoachResponse

// optional bool found_coach = 1;
inline bool CMsgTFCoaching_FindCoachResponse::has_found_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_found_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_found_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_found_coach() {
  found_coach_ = false;
  clear_has_found_coach();
}
inline bool CMsgTFCoaching_FindCoachResponse::found_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.found_coach)
  return found_coach_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_found_coach(bool value) {
  set_has_found_coach();
  found_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.found_coach)
}

// optional uint32 num_likes = 2;
inline bool CMsgTFCoaching_FindCoachResponse::has_num_likes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_num_likes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_num_likes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_num_likes() {
  num_likes_ = 0u;
  clear_has_num_likes();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoachResponse::num_likes() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.num_likes)
  return num_likes_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_num_likes(::google::protobuf::uint32 value) {
  set_has_num_likes();
  num_likes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.num_likes)
}

// optional string coach_name = 3;
inline bool CMsgTFCoaching_FindCoachResponse::has_coach_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_coach_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_coach_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_coach_name() {
  if (coach_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_->clear();
  }
  clear_has_coach_name();
}
inline const ::std::string& CMsgTFCoaching_FindCoachResponse::coach_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.coach_name)
  return *coach_name_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const ::std::string& value) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value, size_t size) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::mutable_coach_name() {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFCoaching_FindCoachResponse.coach_name)
  return coach_name_;
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::release_coach_name() {
  clear_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = coach_name_;
    coach_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFCoaching_FindCoachResponse::set_allocated_coach_name(::std::string* coach_name) {
  if (coach_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete coach_name_;
  }
  if (coach_name) {
    set_has_coach_name();
    coach_name_ = coach_name;
  } else {
    clear_has_coach_name();
    coach_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFCoaching_FindCoachResponse.coach_name)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoach

// optional uint32 account_id_student = 1;
inline bool CMsgTFCoaching_AskCoach::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_AskCoach::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoach.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_AskCoach::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoach.account_id_student)
}

// optional bool student_is_friend = 2;
inline bool CMsgTFCoaching_AskCoach::has_student_is_friend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_student_is_friend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_student_is_friend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_student_is_friend() {
  student_is_friend_ = false;
  clear_has_student_is_friend();
}
inline bool CMsgTFCoaching_AskCoach::student_is_friend() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoach.student_is_friend)
  return student_is_friend_;
}
inline void CMsgTFCoaching_AskCoach::set_student_is_friend(bool value) {
  set_has_student_is_friend();
  student_is_friend_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoach.student_is_friend)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoachResponse

// optional bool accept_coaching_assignment = 1;
inline bool CMsgTFCoaching_AskCoachResponse::has_accept_coaching_assignment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoachResponse::set_has_accept_coaching_assignment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_has_accept_coaching_assignment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_accept_coaching_assignment() {
  accept_coaching_assignment_ = false;
  clear_has_accept_coaching_assignment();
}
inline bool CMsgTFCoaching_AskCoachResponse::accept_coaching_assignment() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoachResponse.accept_coaching_assignment)
  return accept_coaching_assignment_;
}
inline void CMsgTFCoaching_AskCoachResponse::set_accept_coaching_assignment(bool value) {
  set_has_accept_coaching_assignment();
  accept_coaching_assignment_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoachResponse.accept_coaching_assignment)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoinGame

// optional bool join_game = 1;
inline bool CMsgTFCoaching_CoachJoinGame::has_join_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_join_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_join_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_join_game() {
  join_game_ = false;
  clear_has_join_game();
}
inline bool CMsgTFCoaching_CoachJoinGame::join_game() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.join_game)
  return join_game_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_join_game(bool value) {
  set_has_join_game();
  join_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.join_game)
}

// optional uint32 server_address = 2;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.server_address)
  return server_address_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.server_address)
}

// optional uint32 server_port = 3;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.server_port)
  return server_port_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.server_port)
}

// optional uint32 account_id_student = 4;
inline bool CMsgTFCoaching_CoachJoinGame::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.account_id_student)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoining

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoining.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoining.account_id_coach)
}

// optional uint32 account_id_student = 2;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoining.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoining.account_id_student)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoined

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoined::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoined::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoined::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoined.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoined::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoined.account_id_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_LikeCurrentCoach

// optional bool like_coach = 1;
inline bool CMsgTFCoaching_LikeCurrentCoach::has_like_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_has_like_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_has_like_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_like_coach() {
  like_coach_ = false;
  clear_has_like_coach();
}
inline bool CMsgTFCoaching_LikeCurrentCoach::like_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_LikeCurrentCoach.like_coach)
  return like_coach_;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_like_coach(bool value) {
  set_has_like_coach();
  like_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_LikeCurrentCoach.like_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveCurrentCoach

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_RemoveCurrentCoach::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_RemoveCurrentCoach::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_RemoveCurrentCoach.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_RemoveCurrentCoach.account_id_coach)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.server_address)
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.server_address)
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.server_port)
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.server_port)
}

// optional uint32 num_users = 3;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_num_users() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_num_users() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_num_users() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_num_users() {
  num_users_ = 0u;
  clear_has_num_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::num_users() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.num_users)
  return num_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_num_users(::google::protobuf::uint32 value) {
  set_has_num_users();
  num_users_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.num_users)
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServers_ServerInfo::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.steam_id)
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.steam_id)
}

// optional uint32 max_users = 5;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_max_users() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_max_users() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_max_users() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_max_users() {
  max_users_ = 0u;
  clear_has_max_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::max_users() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.max_users)
  return max_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_max_users(::google::protobuf::uint32 value) {
  set_has_max_users();
  max_users_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.max_users)
}

// optional float user_score = 6;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_user_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_user_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_user_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_user_score() {
  user_score_ = 0;
  clear_has_user_score();
}
inline float CMsgTFQuickplay_ScoreServers_ServerInfo::user_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.user_score)
  return user_score_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_user_score(float value) {
  set_has_user_score();
  user_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.user_score)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers

// repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServers::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServers::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& CMsgTFQuickplay_ScoreServers::servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::add_servers() {
  // @@protoc_insertion_point(field_add:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
CMsgTFQuickplay_ScoreServers::servers() const {
  // @@protoc_insertion_point(field_list:CMsgTFQuickplay_ScoreServers.servers)
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
CMsgTFQuickplay_ScoreServers::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFQuickplay_ScoreServers.servers)
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_address)
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_address)
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_port)
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_port)
}

// optional float total_score = 3;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgTFQuickplay_ScoreServersResponse_ServerInfo::total_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.total_score)
  return total_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.total_score)
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.steam_id)
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.steam_id)
}

// optional uint32 options_score = 5;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_options_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_options_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_options_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_options_score() {
  options_score_ = 0u;
  clear_has_options_score();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::options_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.options_score)
  return options_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_options_score(::google::protobuf::uint32 value) {
  set_has_options_score();
  options_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.options_score)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse

// repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServersResponse::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServersResponse::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& CMsgTFQuickplay_ScoreServersResponse::servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::add_servers() {
  // @@protoc_insertion_point(field_add:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
CMsgTFQuickplay_ScoreServersResponse::servers() const {
  // @@protoc_insertion_point(field_list:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
CMsgTFQuickplay_ScoreServersResponse::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFQuickplay_ScoreServersResponse.servers)
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_PlayerJoining

// optional uint32 account_id = 1;
inline bool CMsgTFQuickplay_PlayerJoining::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_PlayerJoining::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_PlayerJoining::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_PlayerJoining.account_id)
  return account_id_;
}
inline void CMsgTFQuickplay_PlayerJoining::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_PlayerJoining.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_LevelInfo

// optional bool level_loaded = 1;
inline bool CMsgGC_GameServer_LevelInfo::has_level_loaded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_loaded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_loaded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_loaded() {
  level_loaded_ = false;
  clear_has_level_loaded();
}
inline bool CMsgGC_GameServer_LevelInfo::level_loaded() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_LevelInfo.level_loaded)
  return level_loaded_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_loaded(bool value) {
  set_has_level_loaded();
  level_loaded_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_LevelInfo.level_loaded)
}

// optional string level_name = 2;
inline bool CMsgGC_GameServer_LevelInfo::has_level_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_name() {
  if (level_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_->clear();
  }
  clear_has_level_name();
}
inline const ::std::string& CMsgGC_GameServer_LevelInfo::level_name() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_LevelInfo.level_name)
  return *level_name_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const ::std::string& value) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_LevelInfo.level_name)
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_LevelInfo.level_name)
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value, size_t size) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_LevelInfo.level_name)
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::mutable_level_name() {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_LevelInfo.level_name)
  return level_name_;
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::release_level_name() {
  clear_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = level_name_;
    level_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_LevelInfo::set_allocated_level_name(::std::string* level_name) {
  if (level_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete level_name_;
  }
  if (level_name) {
    set_has_level_name();
    level_name_ = level_name;
  } else {
    clear_has_level_name();
    level_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_LevelInfo.level_name)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallenge

// optional string challenge_string = 1;
inline bool CMsgGC_GameServer_AuthChallenge::has_challenge_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallenge::set_has_challenge_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_has_challenge_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_challenge_string() {
  if (challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_->clear();
  }
  clear_has_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallenge::challenge_string() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallenge.challenge_string)
  return *challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const ::std::string& value) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value, size_t size) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::mutable_challenge_string() {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthChallenge.challenge_string)
  return challenge_string_;
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::release_challenge_string() {
  clear_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = challenge_string_;
    challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AuthChallenge::set_allocated_challenge_string(::std::string* challenge_string) {
  if (challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete challenge_string_;
  }
  if (challenge_string) {
    set_has_challenge_string();
    challenge_string_ = challenge_string;
  } else {
    clear_has_challenge_string();
    challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthChallenge.challenge_string)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthResult

// optional bool authenticated = 1;
inline bool CMsgGC_GameServer_AuthResult::has_authenticated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_authenticated() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_authenticated() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_authenticated() {
  authenticated_ = false;
  clear_has_authenticated();
}
inline bool CMsgGC_GameServer_AuthResult::authenticated() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.authenticated)
  return authenticated_;
}
inline void CMsgGC_GameServer_AuthResult::set_authenticated(bool value) {
  set_has_authenticated();
  authenticated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.authenticated)
}

// optional int32 game_server_standing = 2;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.game_server_standing)
  return game_server_standing_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.game_server_standing)
}

// optional int32 game_server_standing_trend = 3;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing_trend() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.game_server_standing_trend)
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.game_server_standing_trend)
}

// optional bool is_valve_server = 4;
inline bool CMsgGC_GameServer_AuthResult::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgGC_GameServer_AuthResult::is_valve_server() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.is_valve_server)
  return is_valve_server_;
}
inline void CMsgGC_GameServer_AuthResult::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.is_valve_server)
}

// optional string message = 5;
inline bool CMsgGC_GameServer_AuthResult::has_message() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_message() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_message() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_GameServer_AuthResult::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgGC_GameServer_AuthResult::message() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.message)
  return *message_;
}
inline void CMsgGC_GameServer_AuthResult::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.message)
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthResult.message)
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthResult.message)
}
inline ::std::string* CMsgGC_GameServer_AuthResult::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthResult.message)
  return message_;
}
inline ::std::string* CMsgGC_GameServer_AuthResult::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AuthResult::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthResult.message)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallengeResponse

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AuthChallengeResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallengeResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallengeResponse.game_server_account_id)
}

// optional bytes hashed_challenge_string = 2;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_hashed_challenge_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_hashed_challenge_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_hashed_challenge_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_hashed_challenge_string() {
  if (hashed_challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_->clear();
  }
  clear_has_hashed_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallengeResponse::hashed_challenge_string() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  return *hashed_challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const ::std::string& value) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const char* value) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const void* value, size_t size) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::mutable_hashed_challenge_string() {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  return hashed_challenge_string_;
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::release_hashed_challenge_string() {
  clear_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hashed_challenge_string_;
    hashed_challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_allocated_hashed_challenge_string(::std::string* hashed_challenge_string) {
  if (hashed_challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hashed_challenge_string_;
  }
  if (hashed_challenge_string) {
    set_has_hashed_challenge_string();
    hashed_challenge_string_ = hashed_challenge_string;
  } else {
    clear_has_hashed_challenge_string();
    hashed_challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentity

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_CreateIdentity::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentity::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentity::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentity.account_id)
  return account_id_;
}
inline void CMsgGC_GameServer_CreateIdentity::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentity.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentityResponse

// optional bool account_created = 1;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_account_created() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_account_created() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_account_created() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_account_created() {
  account_created_ = false;
  clear_has_account_created();
}
inline bool CMsgGC_GameServer_CreateIdentityResponse::account_created() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.account_created)
  return account_created_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_account_created(bool value) {
  set_has_account_created();
  account_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.account_created)
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentityResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.game_server_account_id)
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_server_identity_token_;
  }
  if (game_server_identity_token) {
    set_has_game_server_identity_token();
    game_server_identity_token_ = game_server_identity_token;
  } else {
    clear_has_game_server_identity_token();
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}

// optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse::status() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.status)
  return static_cast< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus >(status_);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  assert(::CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.status)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_List

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_List::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_List::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_List::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_List.account_id)
  return account_id_;
}
inline void CMsgGC_GameServer_List::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_List.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse_GameServerIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_account_id)
}

// optional string game_server_identity_token = 2;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_server_identity_token_;
  }
  if (game_server_identity_token) {
    set_has_game_server_identity_token();
    game_server_identity_token_ = game_server_identity_token;
  } else {
    clear_has_game_server_identity_token();
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}

// optional int32 game_server_standing = 3;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing)
  return game_server_standing_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing)
}

// optional int32 game_server_standing_trend = 4;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing_trend() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing_trend)
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing_trend)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse

// repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
inline int CMsgGC_GameServer_ListResponse::owned_game_servers_size() const {
  return owned_game_servers_.size();
}
inline void CMsgGC_GameServer_ListResponse::clear_owned_game_servers() {
  owned_game_servers_.Clear();
}
inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& CMsgGC_GameServer_ListResponse::owned_game_servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Get(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::mutable_owned_game_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Mutable(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::add_owned_game_servers() {
  // @@protoc_insertion_point(field_add:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
CMsgGC_GameServer_ListResponse::owned_game_servers() const {
  // @@protoc_insertion_point(field_list:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
CMsgGC_GameServer_ListResponse::mutable_owned_game_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return &owned_game_servers_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ResetIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentity::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentity.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentity.game_server_account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentityResponse

// optional bool game_server_identity_token_reset = 1;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token_reset() {
  game_server_identity_token_reset_ = false;
  clear_has_game_server_identity_token_reset();
}
inline bool CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token_reset() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token_reset)
  return game_server_identity_token_reset_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token_reset(bool value) {
  set_has_game_server_identity_token_reset();
  game_server_identity_token_reset_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token_reset)
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentityResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_account_id)
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_server_identity_token_;
  }
  if (game_server_identity_token) {
    set_has_game_server_identity_token();
    game_server_identity_token_ = game_server_identity_token;
  } else {
    clear_has_game_server_identity_token();
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicy

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicyResponse

// optional uint32 result = 1;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AckPolicyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AckPolicyResponse.result)
  return result_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AckPolicyResponse.result)
}

// optional string message = 2;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgGC_GameServer_AckPolicyResponse::message() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AckPolicyResponse.message)
  return *message_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AckPolicyResponse.message)
  return message_;
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AckPolicyResponse.message)
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem

// optional uint64 item_id = 1;
inline bool CMsgGC_Client_UseServerModificationItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client_UseServerModificationItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgGC_Client_UseServerModificationItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client_UseServerModificationItem.item_id)
  return item_id_;
}
inline void CMsgGC_Client_UseServerModificationItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client_UseServerModificationItem.item_id)
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem_Response

// optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1;
inline bool CMsgGC_Client_UseServerModificationItem_Response::has_response_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_has_response_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_has_response_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_response_code() {
  response_code_ = 1;
  clear_has_response_code();
}
inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response::response_code() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client_UseServerModificationItem_Response.response_code)
  return static_cast< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse >(response_code_);
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  assert(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value));
  set_has_response_code();
  response_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client_UseServerModificationItem_Response.response_code)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem

// optional .EServerModificationItemType modification_type = 1;
inline bool CMsgGC_GameServer_UseServerModificationItem::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem.modification_type)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem_Response

// optional .EServerModificationItemType modification_type = 1;
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem_Response::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem_Response.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem_Response.modification_type)
}

// optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2;
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_server_response_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_has_server_response_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_has_server_response_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_server_response_code() {
  server_response_code_ = 1;
  clear_has_server_response_code();
}
inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response::server_response_code() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem_Response.server_response_code)
  return static_cast< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse >(server_response_code_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  assert(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value));
  set_has_server_response_code();
  server_response_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem_Response.server_response_code)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItemExpired

// optional .EServerModificationItemType modification_type = 1;
inline bool CMsgGC_GameServer_ServerModificationItemExpired::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_ServerModificationItemExpired::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItemExpired.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItemExpired.modification_type)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItem

// optional .EServerModificationItemType modification_type = 1;
inline bool CMsgGC_GameServer_ServerModificationItem::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_ServerModificationItem::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItem.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItem::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItem.modification_type)
}

// optional bool active = 2;
inline bool CMsgGC_GameServer_ServerModificationItem::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CMsgGC_GameServer_ServerModificationItem::active() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItem.active)
  return active_;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItem.active)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ReservedItem

// repeated float x = 1;
inline int CMsgGC_Halloween_ReservedItem::x_size() const {
  return x_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_x() {
  x_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::x(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.x)
  return x_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_x(int index, float value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.x)
}
inline void CMsgGC_Halloween_ReservedItem::add_x(float value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.x)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::x() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.x)
  return x_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.x)
  return &x_;
}

// repeated float y = 2;
inline int CMsgGC_Halloween_ReservedItem::y_size() const {
  return y_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_y() {
  y_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::y(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.y)
  return y_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_y(int index, float value) {
  y_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.y)
}
inline void CMsgGC_Halloween_ReservedItem::add_y(float value) {
  y_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.y)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::y() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.y)
  return y_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_y() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.y)
  return &y_;
}

// repeated float z = 3;
inline int CMsgGC_Halloween_ReservedItem::z_size() const {
  return z_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_z() {
  z_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::z(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.z)
  return z_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_z(int index, float value) {
  z_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.z)
}
inline void CMsgGC_Halloween_ReservedItem::add_z(float value) {
  z_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.z)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::z() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.z)
  return z_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_z() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.z)
  return &z_;
}

// optional uint32 spawn_meta_info = 7;
inline bool CMsgGC_Halloween_ReservedItem::has_spawn_meta_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Halloween_ReservedItem::set_has_spawn_meta_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Halloween_ReservedItem::clear_has_spawn_meta_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Halloween_ReservedItem::clear_spawn_meta_info() {
  spawn_meta_info_ = 0u;
  clear_has_spawn_meta_info();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_ReservedItem::spawn_meta_info() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.spawn_meta_info)
  return spawn_meta_info_;
}
inline void CMsgGC_Halloween_ReservedItem::set_spawn_meta_info(::google::protobuf::uint32 value) {
  set_has_spawn_meta_info();
  spawn_meta_info_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.spawn_meta_info)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItem

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItem::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_GrantItem::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.recipient_account_id)
}

// optional uint32 level_id = 2;
inline bool CMsgGC_Halloween_GrantItem::has_level_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_level_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Halloween_GrantItem::clear_level_id() {
  level_id_ = 0u;
  clear_has_level_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::level_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.level_id)
  return level_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_level_id(::google::protobuf::uint32 value) {
  set_has_level_id();
  level_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.level_id)
}

// optional bool flagged = 3;
inline bool CMsgGC_Halloween_GrantItem::has_flagged() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_flagged() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_flagged() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Halloween_GrantItem::clear_flagged() {
  flagged_ = false;
  clear_has_flagged();
}
inline bool CMsgGC_Halloween_GrantItem::flagged() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.flagged)
  return flagged_;
}
inline void CMsgGC_Halloween_GrantItem::set_flagged(bool value) {
  set_has_flagged();
  flagged_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.flagged)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItemResponse

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItemResponse::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItemResponse::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItemResponse.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItemResponse.recipient_account_id)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ItemClaimed

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_Query

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_Query::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_PickupItemEligibility_Query::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_Query.account_id)
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_Query.account_id)
}

// optional uint32 seconds_ago = 2;
inline bool CMsgGC_PickupItemEligibility_Query::has_seconds_ago() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_PickupItemEligibility_Query::set_has_seconds_ago() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_has_seconds_ago() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_seconds_ago() {
  seconds_ago_ = 0u;
  clear_has_seconds_ago();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::seconds_ago() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_Query.seconds_ago)
  return seconds_ago_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_seconds_ago(::google::protobuf::uint32 value) {
  set_has_seconds_ago();
  seconds_ago_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_Query.seconds_ago)
}

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_QueryResponse

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.account_id)
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.account_id)
}

// optional bool was_eligible = 2;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_was_eligible() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_was_eligible() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_was_eligible() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_was_eligible() {
  was_eligible_ = false;
  clear_has_was_eligible();
}
inline bool CMsgGC_PickupItemEligibility_QueryResponse::was_eligible() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.was_eligible)
  return was_eligible_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_was_eligible(bool value) {
  set_has_was_eligible();
  was_eligible_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.was_eligible)
}

// optional uint32 level_id = 3;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_level_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_level_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_level_id() {
  level_id_ = 0u;
  clear_has_level_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::level_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.level_id)
  return level_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_level_id(::google::protobuf::uint32 value) {
  set_has_level_id();
  level_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.level_id)
}

// -------------------------------------------------------------------

// CSOTFPartyMember_Activity

// optional fixed64 lobby_id = 1;
inline bool CSOTFPartyMember_Activity::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyMember_Activity::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyMember_Activity::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyMember_Activity::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFPartyMember_Activity::lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.Activity.lobby_id)
  return lobby_id_;
}
inline void CSOTFPartyMember_Activity::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.Activity.lobby_id)
}

// optional .ETFMatchGroup lobby_match_group = 2;
inline bool CSOTFPartyMember_Activity::has_lobby_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyMember_Activity::set_has_lobby_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyMember_Activity::clear_has_lobby_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyMember_Activity::clear_lobby_match_group() {
  lobby_match_group_ = -1;
  clear_has_lobby_match_group();
}
inline ::ETFMatchGroup CSOTFPartyMember_Activity::lobby_match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.Activity.lobby_match_group)
  return static_cast< ::ETFMatchGroup >(lobby_match_group_);
}
inline void CSOTFPartyMember_Activity::set_lobby_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_lobby_match_group();
  lobby_match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.Activity.lobby_match_group)
}

// optional bool multiqueue_blocked = 3;
inline bool CSOTFPartyMember_Activity::has_multiqueue_blocked() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyMember_Activity::set_has_multiqueue_blocked() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyMember_Activity::clear_has_multiqueue_blocked() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyMember_Activity::clear_multiqueue_blocked() {
  multiqueue_blocked_ = false;
  clear_has_multiqueue_blocked();
}
inline bool CSOTFPartyMember_Activity::multiqueue_blocked() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.Activity.multiqueue_blocked)
  return multiqueue_blocked_;
}
inline void CSOTFPartyMember_Activity::set_multiqueue_blocked(bool value) {
  set_has_multiqueue_blocked();
  multiqueue_blocked_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.Activity.multiqueue_blocked)
}

// optional bool online = 4;
inline bool CSOTFPartyMember_Activity::has_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFPartyMember_Activity::set_has_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFPartyMember_Activity::clear_has_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFPartyMember_Activity::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool CSOTFPartyMember_Activity::online() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.Activity.online)
  return online_;
}
inline void CSOTFPartyMember_Activity::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.Activity.online)
}

// optional uint32 client_version = 5;
inline bool CSOTFPartyMember_Activity::has_client_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFPartyMember_Activity::set_has_client_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFPartyMember_Activity::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFPartyMember_Activity::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CSOTFPartyMember_Activity::client_version() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.Activity.client_version)
  return client_version_;
}
inline void CSOTFPartyMember_Activity::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.Activity.client_version)
}

// -------------------------------------------------------------------

// CSOTFPartyMember

// optional bool owns_ticket = 2;
inline bool CSOTFPartyMember::has_owns_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyMember::set_has_owns_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyMember::clear_has_owns_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyMember::clear_owns_ticket() {
  owns_ticket_ = false;
  clear_has_owns_ticket();
}
inline bool CSOTFPartyMember::owns_ticket() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.owns_ticket)
  return owns_ticket_;
}
inline void CSOTFPartyMember::set_owns_ticket(bool value) {
  set_has_owns_ticket();
  owns_ticket_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.owns_ticket)
}

// optional uint32 completed_missions = 3;
inline bool CSOTFPartyMember::has_completed_missions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyMember::set_has_completed_missions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyMember::clear_has_completed_missions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyMember::clear_completed_missions() {
  completed_missions_ = 0u;
  clear_has_completed_missions();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::completed_missions() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.completed_missions)
  return completed_missions_;
}
inline void CSOTFPartyMember::set_completed_missions(::google::protobuf::uint32 value) {
  set_has_completed_missions();
  completed_missions_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.completed_missions)
}

// optional uint32 badge_level = 4;
inline bool CSOTFPartyMember::has_badge_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyMember::set_has_badge_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyMember::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyMember::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::badge_level() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.badge_level)
  return badge_level_;
}
inline void CSOTFPartyMember::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.badge_level)
}

// optional bool competitive_access = 9;
inline bool CSOTFPartyMember::has_competitive_access() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFPartyMember::set_has_competitive_access() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFPartyMember::clear_has_competitive_access() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFPartyMember::clear_competitive_access() {
  competitive_access_ = false;
  clear_has_competitive_access();
}
inline bool CSOTFPartyMember::competitive_access() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.competitive_access)
  return competitive_access_;
}
inline void CSOTFPartyMember::set_competitive_access(bool value) {
  set_has_competitive_access();
  competitive_access_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.competitive_access)
}

// optional uint32 experience = 14;
inline bool CSOTFPartyMember::has_experience() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFPartyMember::set_has_experience() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFPartyMember::clear_has_experience() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFPartyMember::clear_experience() {
  experience_ = 0u;
  clear_has_experience();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::experience() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.experience)
  return experience_;
}
inline void CSOTFPartyMember::set_experience(::google::protobuf::uint32 value) {
  set_has_experience();
  experience_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.experience)
}

// optional .CTFPerPlayerMatchCriteriaProto player_criteria = 16;
inline bool CSOTFPartyMember::has_player_criteria() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFPartyMember::set_has_player_criteria() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFPartyMember::clear_has_player_criteria() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFPartyMember::clear_player_criteria() {
  if (player_criteria_ != NULL) player_criteria_->::CTFPerPlayerMatchCriteriaProto::Clear();
  clear_has_player_criteria();
}
inline const ::CTFPerPlayerMatchCriteriaProto& CSOTFPartyMember::player_criteria() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.player_criteria)
  return player_criteria_ != NULL ? *player_criteria_ : *default_instance_->player_criteria_;
}
inline ::CTFPerPlayerMatchCriteriaProto* CSOTFPartyMember::mutable_player_criteria() {
  set_has_player_criteria();
  if (player_criteria_ == NULL) player_criteria_ = new ::CTFPerPlayerMatchCriteriaProto;
  // @@protoc_insertion_point(field_mutable:CSOTFPartyMember.player_criteria)
  return player_criteria_;
}
inline ::CTFPerPlayerMatchCriteriaProto* CSOTFPartyMember::release_player_criteria() {
  clear_has_player_criteria();
  ::CTFPerPlayerMatchCriteriaProto* temp = player_criteria_;
  player_criteria_ = NULL;
  return temp;
}
inline void CSOTFPartyMember::set_allocated_player_criteria(::CTFPerPlayerMatchCriteriaProto* player_criteria) {
  delete player_criteria_;
  player_criteria_ = player_criteria;
  if (player_criteria) {
    set_has_player_criteria();
  } else {
    clear_has_player_criteria();
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFPartyMember.player_criteria)
}

// optional .CSOTFPartyMember.Activity activity = 17;
inline bool CSOTFPartyMember::has_activity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFPartyMember::set_has_activity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFPartyMember::clear_has_activity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFPartyMember::clear_activity() {
  if (activity_ != NULL) activity_->::CSOTFPartyMember_Activity::Clear();
  clear_has_activity();
}
inline const ::CSOTFPartyMember_Activity& CSOTFPartyMember::activity() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.activity)
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::CSOTFPartyMember_Activity* CSOTFPartyMember::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::CSOTFPartyMember_Activity;
  // @@protoc_insertion_point(field_mutable:CSOTFPartyMember.activity)
  return activity_;
}
inline ::CSOTFPartyMember_Activity* CSOTFPartyMember::release_activity() {
  clear_has_activity();
  ::CSOTFPartyMember_Activity* temp = activity_;
  activity_ = NULL;
  return temp;
}
inline void CSOTFPartyMember::set_allocated_activity(::CSOTFPartyMember_Activity* activity) {
  delete activity_;
  activity_ = activity;
  if (activity) {
    set_has_activity();
  } else {
    clear_has_activity();
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFPartyMember.activity)
}

// optional bool casual_banned = 18;
inline bool CSOTFPartyMember::has_casual_banned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFPartyMember::set_has_casual_banned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFPartyMember::clear_has_casual_banned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFPartyMember::clear_casual_banned() {
  casual_banned_ = false;
  clear_has_casual_banned();
}
inline bool CSOTFPartyMember::casual_banned() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.casual_banned)
  return casual_banned_;
}
inline void CSOTFPartyMember::set_casual_banned(bool value) {
  set_has_casual_banned();
  casual_banned_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.casual_banned)
}

// optional bool ranked_banned = 19;
inline bool CSOTFPartyMember::has_ranked_banned() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFPartyMember::set_has_ranked_banned() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFPartyMember::clear_has_ranked_banned() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFPartyMember::clear_ranked_banned() {
  ranked_banned_ = false;
  clear_has_ranked_banned();
}
inline bool CSOTFPartyMember::ranked_banned() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.ranked_banned)
  return ranked_banned_;
}
inline void CSOTFPartyMember::set_ranked_banned(bool value) {
  set_has_ranked_banned();
  ranked_banned_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.ranked_banned)
}

// optional bool casual_low_priority = 20;
inline bool CSOTFPartyMember::has_casual_low_priority() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFPartyMember::set_has_casual_low_priority() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFPartyMember::clear_has_casual_low_priority() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFPartyMember::clear_casual_low_priority() {
  casual_low_priority_ = false;
  clear_has_casual_low_priority();
}
inline bool CSOTFPartyMember::casual_low_priority() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.casual_low_priority)
  return casual_low_priority_;
}
inline void CSOTFPartyMember::set_casual_low_priority(bool value) {
  set_has_casual_low_priority();
  casual_low_priority_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.casual_low_priority)
}

// optional bool ranked_low_priority = 21;
inline bool CSOTFPartyMember::has_ranked_low_priority() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFPartyMember::set_has_ranked_low_priority() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFPartyMember::clear_has_ranked_low_priority() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFPartyMember::clear_ranked_low_priority() {
  ranked_low_priority_ = false;
  clear_has_ranked_low_priority();
}
inline bool CSOTFPartyMember::ranked_low_priority() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.ranked_low_priority)
  return ranked_low_priority_;
}
inline void CSOTFPartyMember::set_ranked_low_priority(bool value) {
  set_has_ranked_low_priority();
  ranked_low_priority_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.ranked_low_priority)
}

// optional bool lobby_standby = 22;
inline bool CSOTFPartyMember::has_lobby_standby() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFPartyMember::set_has_lobby_standby() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFPartyMember::clear_has_lobby_standby() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFPartyMember::clear_lobby_standby() {
  lobby_standby_ = false;
  clear_has_lobby_standby();
}
inline bool CSOTFPartyMember::lobby_standby() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.lobby_standby)
  return lobby_standby_;
}
inline void CSOTFPartyMember::set_lobby_standby(bool value) {
  set_has_lobby_standby();
  lobby_standby_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.lobby_standby)
}

// -------------------------------------------------------------------

// TFPendingPartyMember

// optional fixed64 steamid = 1;
inline bool TFPendingPartyMember::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFPendingPartyMember::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFPendingPartyMember::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFPendingPartyMember::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 TFPendingPartyMember::steamid() const {
  // @@protoc_insertion_point(field_get:TFPendingPartyMember.steamid)
  return steamid_;
}
inline void TFPendingPartyMember::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:TFPendingPartyMember.steamid)
}

// optional .TFPendingPartyMember.EType type = 2 [default = Invited];
inline bool TFPendingPartyMember::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFPendingPartyMember::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFPendingPartyMember::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFPendingPartyMember::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TFPendingPartyMember_EType TFPendingPartyMember::type() const {
  // @@protoc_insertion_point(field_get:TFPendingPartyMember.type)
  return static_cast< ::TFPendingPartyMember_EType >(type_);
}
inline void TFPendingPartyMember::set_type(::TFPendingPartyMember_EType value) {
  assert(::TFPendingPartyMember_EType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TFPendingPartyMember.type)
}

// optional fixed64 inviter = 3;
inline bool TFPendingPartyMember::has_inviter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TFPendingPartyMember::set_has_inviter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TFPendingPartyMember::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TFPendingPartyMember::clear_inviter() {
  inviter_ = GOOGLE_ULONGLONG(0);
  clear_has_inviter();
}
inline ::google::protobuf::uint64 TFPendingPartyMember::inviter() const {
  // @@protoc_insertion_point(field_get:TFPendingPartyMember.inviter)
  return inviter_;
}
inline void TFPendingPartyMember::set_inviter(::google::protobuf::uint64 value) {
  set_has_inviter();
  inviter_ = value;
  // @@protoc_insertion_point(field_set:TFPendingPartyMember.inviter)
}

// -------------------------------------------------------------------

// TFSyncedMMUIState

// optional .ETFSyncedMMMenuStep menu_step = 1 [default = k_eTFSyncedMMMenuStep_None];
inline bool TFSyncedMMUIState::has_menu_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFSyncedMMUIState::set_has_menu_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFSyncedMMUIState::clear_has_menu_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFSyncedMMUIState::clear_menu_step() {
  menu_step_ = 0;
  clear_has_menu_step();
}
inline ::ETFSyncedMMMenuStep TFSyncedMMUIState::menu_step() const {
  // @@protoc_insertion_point(field_get:TFSyncedMMUIState.menu_step)
  return static_cast< ::ETFSyncedMMMenuStep >(menu_step_);
}
inline void TFSyncedMMUIState::set_menu_step(::ETFSyncedMMMenuStep value) {
  assert(::ETFSyncedMMMenuStep_IsValid(value));
  set_has_menu_step();
  menu_step_ = value;
  // @@protoc_insertion_point(field_set:TFSyncedMMUIState.menu_step)
}

// optional .ETFMatchGroup match_group = 2 [default = k_eTFMatchGroup_Invalid];
inline bool TFSyncedMMUIState::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TFSyncedMMUIState::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TFSyncedMMUIState::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TFSyncedMMUIState::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::ETFMatchGroup TFSyncedMMUIState::match_group() const {
  // @@protoc_insertion_point(field_get:TFSyncedMMUIState.match_group)
  return static_cast< ::ETFMatchGroup >(match_group_);
}
inline void TFSyncedMMUIState::set_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:TFSyncedMMUIState.match_group)
}

// -------------------------------------------------------------------

// CTFGroupMatchCriteriaProto

// optional bool late_join_ok = 5;
inline bool CTFGroupMatchCriteriaProto::has_late_join_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFGroupMatchCriteriaProto::set_has_late_join_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFGroupMatchCriteriaProto::clear_has_late_join_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFGroupMatchCriteriaProto::clear_late_join_ok() {
  late_join_ok_ = false;
  clear_has_late_join_ok();
}
inline bool CTFGroupMatchCriteriaProto::late_join_ok() const {
  // @@protoc_insertion_point(field_get:CTFGroupMatchCriteriaProto.late_join_ok)
  return late_join_ok_;
}
inline void CTFGroupMatchCriteriaProto::set_late_join_ok(bool value) {
  set_has_late_join_ok();
  late_join_ok_ = value;
  // @@protoc_insertion_point(field_set:CTFGroupMatchCriteriaProto.late_join_ok)
}

// optional uint32 custom_ping_tolerance = 13 [default = 0];
inline bool CTFGroupMatchCriteriaProto::has_custom_ping_tolerance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTFGroupMatchCriteriaProto::set_has_custom_ping_tolerance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTFGroupMatchCriteriaProto::clear_has_custom_ping_tolerance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTFGroupMatchCriteriaProto::clear_custom_ping_tolerance() {
  custom_ping_tolerance_ = 0u;
  clear_has_custom_ping_tolerance();
}
inline ::google::protobuf::uint32 CTFGroupMatchCriteriaProto::custom_ping_tolerance() const {
  // @@protoc_insertion_point(field_get:CTFGroupMatchCriteriaProto.custom_ping_tolerance)
  return custom_ping_tolerance_;
}
inline void CTFGroupMatchCriteriaProto::set_custom_ping_tolerance(::google::protobuf::uint32 value) {
  set_has_custom_ping_tolerance();
  custom_ping_tolerance_ = value;
  // @@protoc_insertion_point(field_set:CTFGroupMatchCriteriaProto.custom_ping_tolerance)
}

// optional string mvm_mannup_tour = 10;
inline bool CTFGroupMatchCriteriaProto::has_mvm_mannup_tour() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTFGroupMatchCriteriaProto::set_has_mvm_mannup_tour() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTFGroupMatchCriteriaProto::clear_has_mvm_mannup_tour() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTFGroupMatchCriteriaProto::clear_mvm_mannup_tour() {
  if (mvm_mannup_tour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_->clear();
  }
  clear_has_mvm_mannup_tour();
}
inline const ::std::string& CTFGroupMatchCriteriaProto::mvm_mannup_tour() const {
  // @@protoc_insertion_point(field_get:CTFGroupMatchCriteriaProto.mvm_mannup_tour)
  return *mvm_mannup_tour_;
}
inline void CTFGroupMatchCriteriaProto::set_mvm_mannup_tour(const ::std::string& value) {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(value);
  // @@protoc_insertion_point(field_set:CTFGroupMatchCriteriaProto.mvm_mannup_tour)
}
inline void CTFGroupMatchCriteriaProto::set_mvm_mannup_tour(const char* value) {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(value);
  // @@protoc_insertion_point(field_set_char:CTFGroupMatchCriteriaProto.mvm_mannup_tour)
}
inline void CTFGroupMatchCriteriaProto::set_mvm_mannup_tour(const char* value, size_t size) {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CTFGroupMatchCriteriaProto.mvm_mannup_tour)
}
inline ::std::string* CTFGroupMatchCriteriaProto::mutable_mvm_mannup_tour() {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CTFGroupMatchCriteriaProto.mvm_mannup_tour)
  return mvm_mannup_tour_;
}
inline ::std::string* CTFGroupMatchCriteriaProto::release_mvm_mannup_tour() {
  clear_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mvm_mannup_tour_;
    mvm_mannup_tour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CTFGroupMatchCriteriaProto::set_allocated_mvm_mannup_tour(::std::string* mvm_mannup_tour) {
  if (mvm_mannup_tour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mvm_mannup_tour_;
  }
  if (mvm_mannup_tour) {
    set_has_mvm_mannup_tour();
    mvm_mannup_tour_ = mvm_mannup_tour;
  } else {
    clear_has_mvm_mannup_tour();
    mvm_mannup_tour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CTFGroupMatchCriteriaProto.mvm_mannup_tour)
}

// repeated string mvm_mannup_missions = 15;
inline int CTFGroupMatchCriteriaProto::mvm_mannup_missions_size() const {
  return mvm_mannup_missions_.size();
}
inline void CTFGroupMatchCriteriaProto::clear_mvm_mannup_missions() {
  mvm_mannup_missions_.Clear();
}
inline const ::std::string& CTFGroupMatchCriteriaProto::mvm_mannup_missions(int index) const {
  // @@protoc_insertion_point(field_get:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
  return mvm_mannup_missions_.Get(index);
}
inline ::std::string* CTFGroupMatchCriteriaProto::mutable_mvm_mannup_missions(int index) {
  // @@protoc_insertion_point(field_mutable:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
  return mvm_mannup_missions_.Mutable(index);
}
inline void CTFGroupMatchCriteriaProto::set_mvm_mannup_missions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
  mvm_mannup_missions_.Mutable(index)->assign(value);
}
inline void CTFGroupMatchCriteriaProto::set_mvm_mannup_missions(int index, const char* value) {
  mvm_mannup_missions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
}
inline void CTFGroupMatchCriteriaProto::set_mvm_mannup_missions(int index, const char* value, size_t size) {
  mvm_mannup_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
}
inline ::std::string* CTFGroupMatchCriteriaProto::add_mvm_mannup_missions() {
  return mvm_mannup_missions_.Add();
}
inline void CTFGroupMatchCriteriaProto::add_mvm_mannup_missions(const ::std::string& value) {
  mvm_mannup_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
}
inline void CTFGroupMatchCriteriaProto::add_mvm_mannup_missions(const char* value) {
  mvm_mannup_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
}
inline void CTFGroupMatchCriteriaProto::add_mvm_mannup_missions(const char* value, size_t size) {
  mvm_mannup_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CTFGroupMatchCriteriaProto::mvm_mannup_missions() const {
  // @@protoc_insertion_point(field_list:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
  return mvm_mannup_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CTFGroupMatchCriteriaProto::mutable_mvm_mannup_missions() {
  // @@protoc_insertion_point(field_mutable_list:CTFGroupMatchCriteriaProto.mvm_mannup_missions)
  return &mvm_mannup_missions_;
}

// repeated string mvm_bootcamp_missions = 16;
inline int CTFGroupMatchCriteriaProto::mvm_bootcamp_missions_size() const {
  return mvm_bootcamp_missions_.size();
}
inline void CTFGroupMatchCriteriaProto::clear_mvm_bootcamp_missions() {
  mvm_bootcamp_missions_.Clear();
}
inline const ::std::string& CTFGroupMatchCriteriaProto::mvm_bootcamp_missions(int index) const {
  // @@protoc_insertion_point(field_get:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
  return mvm_bootcamp_missions_.Get(index);
}
inline ::std::string* CTFGroupMatchCriteriaProto::mutable_mvm_bootcamp_missions(int index) {
  // @@protoc_insertion_point(field_mutable:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
  return mvm_bootcamp_missions_.Mutable(index);
}
inline void CTFGroupMatchCriteriaProto::set_mvm_bootcamp_missions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
  mvm_bootcamp_missions_.Mutable(index)->assign(value);
}
inline void CTFGroupMatchCriteriaProto::set_mvm_bootcamp_missions(int index, const char* value) {
  mvm_bootcamp_missions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
}
inline void CTFGroupMatchCriteriaProto::set_mvm_bootcamp_missions(int index, const char* value, size_t size) {
  mvm_bootcamp_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
}
inline ::std::string* CTFGroupMatchCriteriaProto::add_mvm_bootcamp_missions() {
  return mvm_bootcamp_missions_.Add();
}
inline void CTFGroupMatchCriteriaProto::add_mvm_bootcamp_missions(const ::std::string& value) {
  mvm_bootcamp_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
}
inline void CTFGroupMatchCriteriaProto::add_mvm_bootcamp_missions(const char* value) {
  mvm_bootcamp_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
}
inline void CTFGroupMatchCriteriaProto::add_mvm_bootcamp_missions(const char* value, size_t size) {
  mvm_bootcamp_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CTFGroupMatchCriteriaProto::mvm_bootcamp_missions() const {
  // @@protoc_insertion_point(field_list:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
  return mvm_bootcamp_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CTFGroupMatchCriteriaProto::mutable_mvm_bootcamp_missions() {
  // @@protoc_insertion_point(field_mutable_list:CTFGroupMatchCriteriaProto.mvm_bootcamp_missions)
  return &mvm_bootcamp_missions_;
}

// optional .CTFCasualMatchCriteria casual_criteria = 12;
inline bool CTFGroupMatchCriteriaProto::has_casual_criteria() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTFGroupMatchCriteriaProto::set_has_casual_criteria() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTFGroupMatchCriteriaProto::clear_has_casual_criteria() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTFGroupMatchCriteriaProto::clear_casual_criteria() {
  if (casual_criteria_ != NULL) casual_criteria_->::CTFCasualMatchCriteria::Clear();
  clear_has_casual_criteria();
}
inline const ::CTFCasualMatchCriteria& CTFGroupMatchCriteriaProto::casual_criteria() const {
  // @@protoc_insertion_point(field_get:CTFGroupMatchCriteriaProto.casual_criteria)
  return casual_criteria_ != NULL ? *casual_criteria_ : *default_instance_->casual_criteria_;
}
inline ::CTFCasualMatchCriteria* CTFGroupMatchCriteriaProto::mutable_casual_criteria() {
  set_has_casual_criteria();
  if (casual_criteria_ == NULL) casual_criteria_ = new ::CTFCasualMatchCriteria;
  // @@protoc_insertion_point(field_mutable:CTFGroupMatchCriteriaProto.casual_criteria)
  return casual_criteria_;
}
inline ::CTFCasualMatchCriteria* CTFGroupMatchCriteriaProto::release_casual_criteria() {
  clear_has_casual_criteria();
  ::CTFCasualMatchCriteria* temp = casual_criteria_;
  casual_criteria_ = NULL;
  return temp;
}
inline void CTFGroupMatchCriteriaProto::set_allocated_casual_criteria(::CTFCasualMatchCriteria* casual_criteria) {
  delete casual_criteria_;
  casual_criteria_ = casual_criteria;
  if (casual_criteria) {
    set_has_casual_criteria();
  } else {
    clear_has_casual_criteria();
  }
  // @@protoc_insertion_point(field_set_allocated:CTFGroupMatchCriteriaProto.casual_criteria)
}

// -------------------------------------------------------------------

// CTFCasualMatchCriteria

// repeated fixed32 selected_maps_bits = 3;
inline int CTFCasualMatchCriteria::selected_maps_bits_size() const {
  return selected_maps_bits_.size();
}
inline void CTFCasualMatchCriteria::clear_selected_maps_bits() {
  selected_maps_bits_.Clear();
}
inline ::google::protobuf::uint32 CTFCasualMatchCriteria::selected_maps_bits(int index) const {
  // @@protoc_insertion_point(field_get:CTFCasualMatchCriteria.selected_maps_bits)
  return selected_maps_bits_.Get(index);
}
inline void CTFCasualMatchCriteria::set_selected_maps_bits(int index, ::google::protobuf::uint32 value) {
  selected_maps_bits_.Set(index, value);
  // @@protoc_insertion_point(field_set:CTFCasualMatchCriteria.selected_maps_bits)
}
inline void CTFCasualMatchCriteria::add_selected_maps_bits(::google::protobuf::uint32 value) {
  selected_maps_bits_.Add(value);
  // @@protoc_insertion_point(field_add:CTFCasualMatchCriteria.selected_maps_bits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CTFCasualMatchCriteria::selected_maps_bits() const {
  // @@protoc_insertion_point(field_list:CTFCasualMatchCriteria.selected_maps_bits)
  return selected_maps_bits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CTFCasualMatchCriteria::mutable_selected_maps_bits() {
  // @@protoc_insertion_point(field_mutable_list:CTFCasualMatchCriteria.selected_maps_bits)
  return &selected_maps_bits_;
}

// -------------------------------------------------------------------

// CTFPerPlayerMatchCriteriaProto

// optional bool mvm_squad_surplus = 1;
inline bool CTFPerPlayerMatchCriteriaProto::has_mvm_squad_surplus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFPerPlayerMatchCriteriaProto::set_has_mvm_squad_surplus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFPerPlayerMatchCriteriaProto::clear_has_mvm_squad_surplus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFPerPlayerMatchCriteriaProto::clear_mvm_squad_surplus() {
  mvm_squad_surplus_ = false;
  clear_has_mvm_squad_surplus();
}
inline bool CTFPerPlayerMatchCriteriaProto::mvm_squad_surplus() const {
  // @@protoc_insertion_point(field_get:CTFPerPlayerMatchCriteriaProto.mvm_squad_surplus)
  return mvm_squad_surplus_;
}
inline void CTFPerPlayerMatchCriteriaProto::set_mvm_squad_surplus(bool value) {
  set_has_mvm_squad_surplus();
  mvm_squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CTFPerPlayerMatchCriteriaProto.mvm_squad_surplus)
}

// -------------------------------------------------------------------

// CTFPartyOptions

// optional bool overwrite_existing = 1;
inline bool CTFPartyOptions::has_overwrite_existing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFPartyOptions::set_has_overwrite_existing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFPartyOptions::clear_has_overwrite_existing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFPartyOptions::clear_overwrite_existing() {
  overwrite_existing_ = false;
  clear_has_overwrite_existing();
}
inline bool CTFPartyOptions::overwrite_existing() const {
  // @@protoc_insertion_point(field_get:CTFPartyOptions.overwrite_existing)
  return overwrite_existing_;
}
inline void CTFPartyOptions::set_overwrite_existing(bool value) {
  set_has_overwrite_existing();
  overwrite_existing_ = value;
  // @@protoc_insertion_point(field_set:CTFPartyOptions.overwrite_existing)
}

// optional .CTFGroupMatchCriteriaProto group_criteria = 2;
inline bool CTFPartyOptions::has_group_criteria() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTFPartyOptions::set_has_group_criteria() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTFPartyOptions::clear_has_group_criteria() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTFPartyOptions::clear_group_criteria() {
  if (group_criteria_ != NULL) group_criteria_->::CTFGroupMatchCriteriaProto::Clear();
  clear_has_group_criteria();
}
inline const ::CTFGroupMatchCriteriaProto& CTFPartyOptions::group_criteria() const {
  // @@protoc_insertion_point(field_get:CTFPartyOptions.group_criteria)
  return group_criteria_ != NULL ? *group_criteria_ : *default_instance_->group_criteria_;
}
inline ::CTFGroupMatchCriteriaProto* CTFPartyOptions::mutable_group_criteria() {
  set_has_group_criteria();
  if (group_criteria_ == NULL) group_criteria_ = new ::CTFGroupMatchCriteriaProto;
  // @@protoc_insertion_point(field_mutable:CTFPartyOptions.group_criteria)
  return group_criteria_;
}
inline ::CTFGroupMatchCriteriaProto* CTFPartyOptions::release_group_criteria() {
  clear_has_group_criteria();
  ::CTFGroupMatchCriteriaProto* temp = group_criteria_;
  group_criteria_ = NULL;
  return temp;
}
inline void CTFPartyOptions::set_allocated_group_criteria(::CTFGroupMatchCriteriaProto* group_criteria) {
  delete group_criteria_;
  group_criteria_ = group_criteria;
  if (group_criteria) {
    set_has_group_criteria();
  } else {
    clear_has_group_criteria();
  }
  // @@protoc_insertion_point(field_set_allocated:CTFPartyOptions.group_criteria)
}

// optional .CTFPerPlayerMatchCriteriaProto player_criteria = 3;
inline bool CTFPartyOptions::has_player_criteria() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTFPartyOptions::set_has_player_criteria() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTFPartyOptions::clear_has_player_criteria() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTFPartyOptions::clear_player_criteria() {
  if (player_criteria_ != NULL) player_criteria_->::CTFPerPlayerMatchCriteriaProto::Clear();
  clear_has_player_criteria();
}
inline const ::CTFPerPlayerMatchCriteriaProto& CTFPartyOptions::player_criteria() const {
  // @@protoc_insertion_point(field_get:CTFPartyOptions.player_criteria)
  return player_criteria_ != NULL ? *player_criteria_ : *default_instance_->player_criteria_;
}
inline ::CTFPerPlayerMatchCriteriaProto* CTFPartyOptions::mutable_player_criteria() {
  set_has_player_criteria();
  if (player_criteria_ == NULL) player_criteria_ = new ::CTFPerPlayerMatchCriteriaProto;
  // @@protoc_insertion_point(field_mutable:CTFPartyOptions.player_criteria)
  return player_criteria_;
}
inline ::CTFPerPlayerMatchCriteriaProto* CTFPartyOptions::release_player_criteria() {
  clear_has_player_criteria();
  ::CTFPerPlayerMatchCriteriaProto* temp = player_criteria_;
  player_criteria_ = NULL;
  return temp;
}
inline void CTFPartyOptions::set_allocated_player_criteria(::CTFPerPlayerMatchCriteriaProto* player_criteria) {
  delete player_criteria_;
  player_criteria_ = player_criteria;
  if (player_criteria) {
    set_has_player_criteria();
  } else {
    clear_has_player_criteria();
  }
  // @@protoc_insertion_point(field_set_allocated:CTFPartyOptions.player_criteria)
}

// optional .TFSyncedMMUIState player_uistate = 5;
inline bool CTFPartyOptions::has_player_uistate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTFPartyOptions::set_has_player_uistate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTFPartyOptions::clear_has_player_uistate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTFPartyOptions::clear_player_uistate() {
  if (player_uistate_ != NULL) player_uistate_->::TFSyncedMMUIState::Clear();
  clear_has_player_uistate();
}
inline const ::TFSyncedMMUIState& CTFPartyOptions::player_uistate() const {
  // @@protoc_insertion_point(field_get:CTFPartyOptions.player_uistate)
  return player_uistate_ != NULL ? *player_uistate_ : *default_instance_->player_uistate_;
}
inline ::TFSyncedMMUIState* CTFPartyOptions::mutable_player_uistate() {
  set_has_player_uistate();
  if (player_uistate_ == NULL) player_uistate_ = new ::TFSyncedMMUIState;
  // @@protoc_insertion_point(field_mutable:CTFPartyOptions.player_uistate)
  return player_uistate_;
}
inline ::TFSyncedMMUIState* CTFPartyOptions::release_player_uistate() {
  clear_has_player_uistate();
  ::TFSyncedMMUIState* temp = player_uistate_;
  player_uistate_ = NULL;
  return temp;
}
inline void CTFPartyOptions::set_allocated_player_uistate(::TFSyncedMMUIState* player_uistate) {
  delete player_uistate_;
  player_uistate_ = player_uistate;
  if (player_uistate) {
    set_has_player_uistate();
  } else {
    clear_has_player_uistate();
  }
  // @@protoc_insertion_point(field_set_allocated:CTFPartyOptions.player_uistate)
}

// -------------------------------------------------------------------

// CMsgPartySetOptions

// optional fixed64 party_id = 1;
inline bool CMsgPartySetOptions::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartySetOptions::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartySetOptions::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartySetOptions::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartySetOptions::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartySetOptions.party_id)
  return party_id_;
}
inline void CMsgPartySetOptions::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartySetOptions.party_id)
}

// optional .CTFPartyOptions options = 2;
inline bool CMsgPartySetOptions::has_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartySetOptions::set_has_options() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartySetOptions::clear_has_options() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartySetOptions::clear_options() {
  if (options_ != NULL) options_->::CTFPartyOptions::Clear();
  clear_has_options();
}
inline const ::CTFPartyOptions& CMsgPartySetOptions::options() const {
  // @@protoc_insertion_point(field_get:CMsgPartySetOptions.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::CTFPartyOptions* CMsgPartySetOptions::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::CTFPartyOptions;
  // @@protoc_insertion_point(field_mutable:CMsgPartySetOptions.options)
  return options_;
}
inline ::CTFPartyOptions* CMsgPartySetOptions::release_options() {
  clear_has_options();
  ::CTFPartyOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void CMsgPartySetOptions::set_allocated_options(::CTFPartyOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPartySetOptions.options)
}

// -------------------------------------------------------------------

// CMsgPartySetOptionsResponse

// -------------------------------------------------------------------

// CMsgPartyQueueForMatch

// optional fixed64 party_id = 1;
inline bool CMsgPartyQueueForMatch::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyQueueForMatch::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyQueueForMatch::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyQueueForMatch::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyQueueForMatch::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyQueueForMatch.party_id)
  return party_id_;
}
inline void CMsgPartyQueueForMatch::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyQueueForMatch.party_id)
}

// optional .CTFPartyOptions final_options = 2;
inline bool CMsgPartyQueueForMatch::has_final_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyQueueForMatch::set_has_final_options() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyQueueForMatch::clear_has_final_options() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyQueueForMatch::clear_final_options() {
  if (final_options_ != NULL) final_options_->::CTFPartyOptions::Clear();
  clear_has_final_options();
}
inline const ::CTFPartyOptions& CMsgPartyQueueForMatch::final_options() const {
  // @@protoc_insertion_point(field_get:CMsgPartyQueueForMatch.final_options)
  return final_options_ != NULL ? *final_options_ : *default_instance_->final_options_;
}
inline ::CTFPartyOptions* CMsgPartyQueueForMatch::mutable_final_options() {
  set_has_final_options();
  if (final_options_ == NULL) final_options_ = new ::CTFPartyOptions;
  // @@protoc_insertion_point(field_mutable:CMsgPartyQueueForMatch.final_options)
  return final_options_;
}
inline ::CTFPartyOptions* CMsgPartyQueueForMatch::release_final_options() {
  clear_has_final_options();
  ::CTFPartyOptions* temp = final_options_;
  final_options_ = NULL;
  return temp;
}
inline void CMsgPartyQueueForMatch::set_allocated_final_options(::CTFPartyOptions* final_options) {
  delete final_options_;
  final_options_ = final_options;
  if (final_options) {
    set_has_final_options();
  } else {
    clear_has_final_options();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPartyQueueForMatch.final_options)
}

// optional .ETFMatchGroup match_group = 3;
inline bool CMsgPartyQueueForMatch::has_match_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPartyQueueForMatch::set_has_match_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPartyQueueForMatch::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPartyQueueForMatch::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::ETFMatchGroup CMsgPartyQueueForMatch::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgPartyQueueForMatch.match_group)
  return static_cast< ::ETFMatchGroup >(match_group_);
}
inline void CMsgPartyQueueForMatch::set_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyQueueForMatch.match_group)
}

// -------------------------------------------------------------------

// CMsgPartyQueueForMatchResponse

// -------------------------------------------------------------------

// CMsgPartyQueueForStandby

// optional fixed64 party_id = 1;
inline bool CMsgPartyQueueForStandby::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyQueueForStandby::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyQueueForStandby::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyQueueForStandby::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyQueueForStandby::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyQueueForStandby.party_id)
  return party_id_;
}
inline void CMsgPartyQueueForStandby::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyQueueForStandby.party_id)
}

// optional fixed64 party_lobby_id = 2;
inline bool CMsgPartyQueueForStandby::has_party_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyQueueForStandby::set_has_party_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyQueueForStandby::clear_has_party_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyQueueForStandby::clear_party_lobby_id() {
  party_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_lobby_id();
}
inline ::google::protobuf::uint64 CMsgPartyQueueForStandby::party_lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyQueueForStandby.party_lobby_id)
  return party_lobby_id_;
}
inline void CMsgPartyQueueForStandby::set_party_lobby_id(::google::protobuf::uint64 value) {
  set_has_party_lobby_id();
  party_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyQueueForStandby.party_lobby_id)
}

// -------------------------------------------------------------------

// CMsgPartyQueueForStandbyResponse

// -------------------------------------------------------------------

// CMsgPartyRemoveFromQueue

// optional fixed64 party_id = 1;
inline bool CMsgPartyRemoveFromQueue::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyRemoveFromQueue::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyRemoveFromQueue::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyRemoveFromQueue::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyRemoveFromQueue::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRemoveFromQueue.party_id)
  return party_id_;
}
inline void CMsgPartyRemoveFromQueue::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRemoveFromQueue.party_id)
}

// optional .ETFMatchGroup match_group = 2;
inline bool CMsgPartyRemoveFromQueue::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyRemoveFromQueue::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyRemoveFromQueue::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyRemoveFromQueue::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::ETFMatchGroup CMsgPartyRemoveFromQueue::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRemoveFromQueue.match_group)
  return static_cast< ::ETFMatchGroup >(match_group_);
}
inline void CMsgPartyRemoveFromQueue::set_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRemoveFromQueue.match_group)
}

// -------------------------------------------------------------------

// CMsgPartyRemoveFromQueueResponse

// -------------------------------------------------------------------

// CMsgPartyRemoveFromStandbyQueue

// optional fixed64 party_id = 1;
inline bool CMsgPartyRemoveFromStandbyQueue::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyRemoveFromStandbyQueue::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyRemoveFromStandbyQueue::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyRemoveFromStandbyQueue::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyRemoveFromStandbyQueue::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRemoveFromStandbyQueue.party_id)
  return party_id_;
}
inline void CMsgPartyRemoveFromStandbyQueue::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRemoveFromStandbyQueue.party_id)
}

// -------------------------------------------------------------------

// CMsgPartyRemoveFromStandbyQueueResponse

// -------------------------------------------------------------------

// CMsgPartyInvitePlayer

// optional fixed64 party_id = 1;
inline bool CMsgPartyInvitePlayer::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyInvitePlayer::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyInvitePlayer::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyInvitePlayer::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyInvitePlayer::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInvitePlayer.party_id)
  return party_id_;
}
inline void CMsgPartyInvitePlayer::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyInvitePlayer.party_id)
}

// optional fixed64 player_id = 2;
inline bool CMsgPartyInvitePlayer::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyInvitePlayer::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyInvitePlayer::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyInvitePlayer::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 CMsgPartyInvitePlayer::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInvitePlayer.player_id)
  return player_id_;
}
inline void CMsgPartyInvitePlayer::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyInvitePlayer.player_id)
}

// optional bool expecting_request_to_join = 3;
inline bool CMsgPartyInvitePlayer::has_expecting_request_to_join() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPartyInvitePlayer::set_has_expecting_request_to_join() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPartyInvitePlayer::clear_has_expecting_request_to_join() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPartyInvitePlayer::clear_expecting_request_to_join() {
  expecting_request_to_join_ = false;
  clear_has_expecting_request_to_join();
}
inline bool CMsgPartyInvitePlayer::expecting_request_to_join() const {
  // @@protoc_insertion_point(field_get:CMsgPartyInvitePlayer.expecting_request_to_join)
  return expecting_request_to_join_;
}
inline void CMsgPartyInvitePlayer::set_expecting_request_to_join(bool value) {
  set_has_expecting_request_to_join();
  expecting_request_to_join_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyInvitePlayer.expecting_request_to_join)
}

// -------------------------------------------------------------------

// CMsgPartyRequestJoinPlayer

// optional fixed64 current_party_id = 1;
inline bool CMsgPartyRequestJoinPlayer::has_current_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyRequestJoinPlayer::set_has_current_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyRequestJoinPlayer::clear_has_current_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyRequestJoinPlayer::clear_current_party_id() {
  current_party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_current_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyRequestJoinPlayer::current_party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRequestJoinPlayer.current_party_id)
  return current_party_id_;
}
inline void CMsgPartyRequestJoinPlayer::set_current_party_id(::google::protobuf::uint64 value) {
  set_has_current_party_id();
  current_party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRequestJoinPlayer.current_party_id)
}

// optional fixed64 join_player_id = 2;
inline bool CMsgPartyRequestJoinPlayer::has_join_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyRequestJoinPlayer::set_has_join_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyRequestJoinPlayer::clear_has_join_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyRequestJoinPlayer::clear_join_player_id() {
  join_player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_join_player_id();
}
inline ::google::protobuf::uint64 CMsgPartyRequestJoinPlayer::join_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRequestJoinPlayer.join_player_id)
  return join_player_id_;
}
inline void CMsgPartyRequestJoinPlayer::set_join_player_id(::google::protobuf::uint64 value) {
  set_has_join_player_id();
  join_player_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRequestJoinPlayer.join_player_id)
}

// optional fixed64 join_party_id = 3;
inline bool CMsgPartyRequestJoinPlayer::has_join_party_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPartyRequestJoinPlayer::set_has_join_party_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPartyRequestJoinPlayer::clear_has_join_party_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPartyRequestJoinPlayer::clear_join_party_id() {
  join_party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_join_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyRequestJoinPlayer::join_party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRequestJoinPlayer.join_party_id)
  return join_party_id_;
}
inline void CMsgPartyRequestJoinPlayer::set_join_party_id(::google::protobuf::uint64 value) {
  set_has_join_party_id();
  join_party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRequestJoinPlayer.join_party_id)
}

// optional bool expecting_invite = 4;
inline bool CMsgPartyRequestJoinPlayer::has_expecting_invite() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPartyRequestJoinPlayer::set_has_expecting_invite() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPartyRequestJoinPlayer::clear_has_expecting_invite() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPartyRequestJoinPlayer::clear_expecting_invite() {
  expecting_invite_ = false;
  clear_has_expecting_invite();
}
inline bool CMsgPartyRequestJoinPlayer::expecting_invite() const {
  // @@protoc_insertion_point(field_get:CMsgPartyRequestJoinPlayer.expecting_invite)
  return expecting_invite_;
}
inline void CMsgPartyRequestJoinPlayer::set_expecting_invite(bool value) {
  set_has_expecting_invite();
  expecting_invite_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyRequestJoinPlayer.expecting_invite)
}

// -------------------------------------------------------------------

// CMsgPartyClearPendingPlayer

// optional fixed64 party_id = 1;
inline bool CMsgPartyClearPendingPlayer::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyClearPendingPlayer::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyClearPendingPlayer::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyClearPendingPlayer::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyClearPendingPlayer::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyClearPendingPlayer.party_id)
  return party_id_;
}
inline void CMsgPartyClearPendingPlayer::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyClearPendingPlayer.party_id)
}

// optional fixed64 pending_player_id = 2;
inline bool CMsgPartyClearPendingPlayer::has_pending_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyClearPendingPlayer::set_has_pending_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyClearPendingPlayer::clear_has_pending_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyClearPendingPlayer::clear_pending_player_id() {
  pending_player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_player_id();
}
inline ::google::protobuf::uint64 CMsgPartyClearPendingPlayer::pending_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyClearPendingPlayer.pending_player_id)
  return pending_player_id_;
}
inline void CMsgPartyClearPendingPlayer::set_pending_player_id(::google::protobuf::uint64 value) {
  set_has_pending_player_id();
  pending_player_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyClearPendingPlayer.pending_player_id)
}

// -------------------------------------------------------------------

// CMsgPartyMMError

// optional .CMsgPartyMMError.Type type = 1;
inline bool CMsgPartyMMError::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyMMError::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyMMError::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyMMError::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::CMsgPartyMMError_Type CMsgPartyMMError::type() const {
  // @@protoc_insertion_point(field_get:CMsgPartyMMError.type)
  return static_cast< ::CMsgPartyMMError_Type >(type_);
}
inline void CMsgPartyMMError::set_type(::CMsgPartyMMError_Type value) {
  assert(::CMsgPartyMMError_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyMMError.type)
}

// -------------------------------------------------------------------

// CMsgPartyClearPendingPlayerResponse

// -------------------------------------------------------------------

// CMsgPartyClearOtherPartyRequest

// optional fixed64 other_party_id = 1;
inline bool CMsgPartyClearOtherPartyRequest::has_other_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyClearOtherPartyRequest::set_has_other_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyClearOtherPartyRequest::clear_has_other_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyClearOtherPartyRequest::clear_other_party_id() {
  other_party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_other_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyClearOtherPartyRequest::other_party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyClearOtherPartyRequest.other_party_id)
  return other_party_id_;
}
inline void CMsgPartyClearOtherPartyRequest::set_other_party_id(::google::protobuf::uint64 value) {
  set_has_other_party_id();
  other_party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyClearOtherPartyRequest.other_party_id)
}

// -------------------------------------------------------------------

// CMsgPartyClearOtherPartyRequestResponse

// -------------------------------------------------------------------

// CMsgPartyPromoteToLeader

// optional fixed64 party_id = 1;
inline bool CMsgPartyPromoteToLeader::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyPromoteToLeader::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyPromoteToLeader::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyPromoteToLeader::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyPromoteToLeader::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyPromoteToLeader.party_id)
  return party_id_;
}
inline void CMsgPartyPromoteToLeader::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyPromoteToLeader.party_id)
}

// optional fixed64 new_leader_id = 2;
inline bool CMsgPartyPromoteToLeader::has_new_leader_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyPromoteToLeader::set_has_new_leader_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyPromoteToLeader::clear_has_new_leader_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyPromoteToLeader::clear_new_leader_id() {
  new_leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_new_leader_id();
}
inline ::google::protobuf::uint64 CMsgPartyPromoteToLeader::new_leader_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyPromoteToLeader.new_leader_id)
  return new_leader_id_;
}
inline void CMsgPartyPromoteToLeader::set_new_leader_id(::google::protobuf::uint64 value) {
  set_has_new_leader_id();
  new_leader_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyPromoteToLeader.new_leader_id)
}

// -------------------------------------------------------------------

// CMsgPartyKickMember

// optional fixed64 party_id = 1;
inline bool CMsgPartyKickMember::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyKickMember::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyKickMember::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyKickMember::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyKickMember::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyKickMember.party_id)
  return party_id_;
}
inline void CMsgPartyKickMember::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyKickMember.party_id)
}

// optional fixed64 target_id = 2;
inline bool CMsgPartyKickMember::has_target_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyKickMember::set_has_target_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyKickMember::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyKickMember::clear_target_id() {
  target_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_id();
}
inline ::google::protobuf::uint64 CMsgPartyKickMember::target_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyKickMember.target_id)
  return target_id_;
}
inline void CMsgPartyKickMember::set_target_id(::google::protobuf::uint64 value) {
  set_has_target_id();
  target_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyKickMember.target_id)
}

// -------------------------------------------------------------------

// CMsgPartySendChat

// optional fixed64 party_id = 1;
inline bool CMsgPartySendChat::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartySendChat::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartySendChat::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartySendChat::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartySendChat::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartySendChat.party_id)
  return party_id_;
}
inline void CMsgPartySendChat::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartySendChat.party_id)
}

// optional string msg = 2;
inline bool CMsgPartySendChat::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartySendChat::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartySendChat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartySendChat::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& CMsgPartySendChat::msg() const {
  // @@protoc_insertion_point(field_get:CMsgPartySendChat.msg)
  return *msg_;
}
inline void CMsgPartySendChat::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPartySendChat.msg)
}
inline void CMsgPartySendChat::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPartySendChat.msg)
}
inline void CMsgPartySendChat::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPartySendChat.msg)
}
inline ::std::string* CMsgPartySendChat::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPartySendChat.msg)
  return msg_;
}
inline ::std::string* CMsgPartySendChat::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPartySendChat::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPartySendChat.msg)
}

// -------------------------------------------------------------------

// CMsgPartyChatMsg

// optional .ETFPartyChatType type = 1;
inline bool CMsgPartyChatMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyChatMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyChatMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyChatMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ETFPartyChatType CMsgPartyChatMsg::type() const {
  // @@protoc_insertion_point(field_get:CMsgPartyChatMsg.type)
  return static_cast< ::ETFPartyChatType >(type_);
}
inline void CMsgPartyChatMsg::set_type(::ETFPartyChatType value) {
  assert(::ETFPartyChatType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyChatMsg.type)
}

// optional fixed64 actor_id = 2;
inline bool CMsgPartyChatMsg::has_actor_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyChatMsg::set_has_actor_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyChatMsg::clear_has_actor_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyChatMsg::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_id();
}
inline ::google::protobuf::uint64 CMsgPartyChatMsg::actor_id() const {
  // @@protoc_insertion_point(field_get:CMsgPartyChatMsg.actor_id)
  return actor_id_;
}
inline void CMsgPartyChatMsg::set_actor_id(::google::protobuf::uint64 value) {
  set_has_actor_id();
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPartyChatMsg.actor_id)
}

// optional string msg = 3;
inline bool CMsgPartyChatMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPartyChatMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPartyChatMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPartyChatMsg::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& CMsgPartyChatMsg::msg() const {
  // @@protoc_insertion_point(field_get:CMsgPartyChatMsg.msg)
  return *msg_;
}
inline void CMsgPartyChatMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgPartyChatMsg.msg)
}
inline void CMsgPartyChatMsg::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgPartyChatMsg.msg)
}
inline void CMsgPartyChatMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgPartyChatMsg.msg)
}
inline ::std::string* CMsgPartyChatMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgPartyChatMsg.msg)
  return msg_;
}
inline ::std::string* CMsgPartyChatMsg::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgPartyChatMsg::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgPartyChatMsg.msg)
}

// -------------------------------------------------------------------

// CSOTFParty_QueueEntry

// optional .ETFMatchGroup match_group = 1;
inline bool CSOTFParty_QueueEntry::has_match_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFParty_QueueEntry::set_has_match_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFParty_QueueEntry::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFParty_QueueEntry::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::ETFMatchGroup CSOTFParty_QueueEntry::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.QueueEntry.match_group)
  return static_cast< ::ETFMatchGroup >(match_group_);
}
inline void CSOTFParty_QueueEntry::set_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.QueueEntry.match_group)
}

// optional fixed32 queued_time = 2;
inline bool CSOTFParty_QueueEntry::has_queued_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFParty_QueueEntry::set_has_queued_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFParty_QueueEntry::clear_has_queued_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFParty_QueueEntry::clear_queued_time() {
  queued_time_ = 0u;
  clear_has_queued_time();
}
inline ::google::protobuf::uint32 CSOTFParty_QueueEntry::queued_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.QueueEntry.queued_time)
  return queued_time_;
}
inline void CSOTFParty_QueueEntry::set_queued_time(::google::protobuf::uint32 value) {
  set_has_queued_time();
  queued_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.QueueEntry.queued_time)
}

// -------------------------------------------------------------------

// CSOTFParty

// optional uint64 party_id = 1;
inline bool CSOTFParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CSOTFParty::party_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.party_id)
  return party_id_;
}
inline void CSOTFParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.party_id)
}

// optional fixed64 leader_id = 2;
inline bool CSOTFParty::has_leader_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFParty::set_has_leader_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFParty::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFParty::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::uint64 CSOTFParty::leader_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.leader_id)
  return leader_id_;
}
inline void CSOTFParty::set_leader_id(::google::protobuf::uint64 value) {
  set_has_leader_id();
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.leader_id)
}

// repeated fixed64 member_ids = 3;
inline int CSOTFParty::member_ids_size() const {
  return member_ids_.size();
}
inline void CSOTFParty::clear_member_ids() {
  member_ids_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::member_ids(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.member_ids)
  return member_ids_.Get(index);
}
inline void CSOTFParty::set_member_ids(int index, ::google::protobuf::uint64 value) {
  member_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.member_ids)
}
inline void CSOTFParty::add_member_ids(::google::protobuf::uint64 value) {
  member_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.member_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::member_ids() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.member_ids)
  return member_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_member_ids() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.member_ids)
  return &member_ids_;
}

// repeated .CSOTFPartyMember members = 13;
inline int CSOTFParty::members_size() const {
  return members_.size();
}
inline void CSOTFParty::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyMember& CSOTFParty::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.members)
  return members_.Get(index);
}
inline ::CSOTFPartyMember* CSOTFParty::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.members)
  return members_.Mutable(index);
}
inline ::CSOTFPartyMember* CSOTFParty::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFParty.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
CSOTFParty::members() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
CSOTFParty::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.members)
  return &members_;
}

// optional uint64 associated_lobby_id = 35;
inline bool CSOTFParty::has_associated_lobby_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFParty::set_has_associated_lobby_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFParty::clear_has_associated_lobby_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFParty::clear_associated_lobby_id() {
  associated_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_associated_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFParty::associated_lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.associated_lobby_id)
  return associated_lobby_id_;
}
inline void CSOTFParty::set_associated_lobby_id(::google::protobuf::uint64 value) {
  set_has_associated_lobby_id();
  associated_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.associated_lobby_id)
}

// optional .ETFMatchGroup associated_lobby_match_group = 40;
inline bool CSOTFParty::has_associated_lobby_match_group() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFParty::set_has_associated_lobby_match_group() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFParty::clear_has_associated_lobby_match_group() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFParty::clear_associated_lobby_match_group() {
  associated_lobby_match_group_ = -1;
  clear_has_associated_lobby_match_group();
}
inline ::ETFMatchGroup CSOTFParty::associated_lobby_match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.associated_lobby_match_group)
  return static_cast< ::ETFMatchGroup >(associated_lobby_match_group_);
}
inline void CSOTFParty::set_associated_lobby_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_associated_lobby_match_group();
  associated_lobby_match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.associated_lobby_match_group)
}

// repeated .CSOTFParty.QueueEntry matchmaking_queues = 43;
inline int CSOTFParty::matchmaking_queues_size() const {
  return matchmaking_queues_.size();
}
inline void CSOTFParty::clear_matchmaking_queues() {
  matchmaking_queues_.Clear();
}
inline const ::CSOTFParty_QueueEntry& CSOTFParty::matchmaking_queues(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.matchmaking_queues)
  return matchmaking_queues_.Get(index);
}
inline ::CSOTFParty_QueueEntry* CSOTFParty::mutable_matchmaking_queues(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.matchmaking_queues)
  return matchmaking_queues_.Mutable(index);
}
inline ::CSOTFParty_QueueEntry* CSOTFParty::add_matchmaking_queues() {
  // @@protoc_insertion_point(field_add:CSOTFParty.matchmaking_queues)
  return matchmaking_queues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFParty_QueueEntry >&
CSOTFParty::matchmaking_queues() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.matchmaking_queues)
  return matchmaking_queues_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFParty_QueueEntry >*
CSOTFParty::mutable_matchmaking_queues() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.matchmaking_queues)
  return &matchmaking_queues_;
}

// optional .CTFGroupMatchCriteriaProto group_criteria = 37;
inline bool CSOTFParty::has_group_criteria() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFParty::set_has_group_criteria() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFParty::clear_has_group_criteria() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFParty::clear_group_criteria() {
  if (group_criteria_ != NULL) group_criteria_->::CTFGroupMatchCriteriaProto::Clear();
  clear_has_group_criteria();
}
inline const ::CTFGroupMatchCriteriaProto& CSOTFParty::group_criteria() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.group_criteria)
  return group_criteria_ != NULL ? *group_criteria_ : *default_instance_->group_criteria_;
}
inline ::CTFGroupMatchCriteriaProto* CSOTFParty::mutable_group_criteria() {
  set_has_group_criteria();
  if (group_criteria_ == NULL) group_criteria_ = new ::CTFGroupMatchCriteriaProto;
  // @@protoc_insertion_point(field_mutable:CSOTFParty.group_criteria)
  return group_criteria_;
}
inline ::CTFGroupMatchCriteriaProto* CSOTFParty::release_group_criteria() {
  clear_has_group_criteria();
  ::CTFGroupMatchCriteriaProto* temp = group_criteria_;
  group_criteria_ = NULL;
  return temp;
}
inline void CSOTFParty::set_allocated_group_criteria(::CTFGroupMatchCriteriaProto* group_criteria) {
  delete group_criteria_;
  group_criteria_ = group_criteria;
  if (group_criteria) {
    set_has_group_criteria();
  } else {
    clear_has_group_criteria();
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFParty.group_criteria)
}

// optional uint32 casual_banned_time = 18;
inline bool CSOTFParty::has_casual_banned_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFParty::set_has_casual_banned_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFParty::clear_has_casual_banned_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFParty::clear_casual_banned_time() {
  casual_banned_time_ = 0u;
  clear_has_casual_banned_time();
}
inline ::google::protobuf::uint32 CSOTFParty::casual_banned_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.casual_banned_time)
  return casual_banned_time_;
}
inline void CSOTFParty::set_casual_banned_time(::google::protobuf::uint32 value) {
  set_has_casual_banned_time();
  casual_banned_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.casual_banned_time)
}

// optional uint32 casual_low_priority_time = 20;
inline bool CSOTFParty::has_casual_low_priority_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFParty::set_has_casual_low_priority_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFParty::clear_has_casual_low_priority_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFParty::clear_casual_low_priority_time() {
  casual_low_priority_time_ = 0u;
  clear_has_casual_low_priority_time();
}
inline ::google::protobuf::uint32 CSOTFParty::casual_low_priority_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.casual_low_priority_time)
  return casual_low_priority_time_;
}
inline void CSOTFParty::set_casual_low_priority_time(::google::protobuf::uint32 value) {
  set_has_casual_low_priority_time();
  casual_low_priority_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.casual_low_priority_time)
}

// optional uint32 ranked_banned_time = 41;
inline bool CSOTFParty::has_ranked_banned_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFParty::set_has_ranked_banned_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFParty::clear_has_ranked_banned_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFParty::clear_ranked_banned_time() {
  ranked_banned_time_ = 0u;
  clear_has_ranked_banned_time();
}
inline ::google::protobuf::uint32 CSOTFParty::ranked_banned_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.ranked_banned_time)
  return ranked_banned_time_;
}
inline void CSOTFParty::set_ranked_banned_time(::google::protobuf::uint32 value) {
  set_has_ranked_banned_time();
  ranked_banned_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.ranked_banned_time)
}

// optional uint32 ranked_low_priority_time = 42;
inline bool CSOTFParty::has_ranked_low_priority_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFParty::set_has_ranked_low_priority_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFParty::clear_has_ranked_low_priority_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFParty::clear_ranked_low_priority_time() {
  ranked_low_priority_time_ = 0u;
  clear_has_ranked_low_priority_time();
}
inline ::google::protobuf::uint32 CSOTFParty::ranked_low_priority_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.ranked_low_priority_time)
  return ranked_low_priority_time_;
}
inline void CSOTFParty::set_ranked_low_priority_time(::google::protobuf::uint32 value) {
  set_has_ranked_low_priority_time();
  ranked_low_priority_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.ranked_low_priority_time)
}

// optional .TFSyncedMMUIState leader_ui_state = 44;
inline bool CSOTFParty::has_leader_ui_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFParty::set_has_leader_ui_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFParty::clear_has_leader_ui_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFParty::clear_leader_ui_state() {
  if (leader_ui_state_ != NULL) leader_ui_state_->::TFSyncedMMUIState::Clear();
  clear_has_leader_ui_state();
}
inline const ::TFSyncedMMUIState& CSOTFParty::leader_ui_state() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.leader_ui_state)
  return leader_ui_state_ != NULL ? *leader_ui_state_ : *default_instance_->leader_ui_state_;
}
inline ::TFSyncedMMUIState* CSOTFParty::mutable_leader_ui_state() {
  set_has_leader_ui_state();
  if (leader_ui_state_ == NULL) leader_ui_state_ = new ::TFSyncedMMUIState;
  // @@protoc_insertion_point(field_mutable:CSOTFParty.leader_ui_state)
  return leader_ui_state_;
}
inline ::TFSyncedMMUIState* CSOTFParty::release_leader_ui_state() {
  clear_has_leader_ui_state();
  ::TFSyncedMMUIState* temp = leader_ui_state_;
  leader_ui_state_ = NULL;
  return temp;
}
inline void CSOTFParty::set_allocated_leader_ui_state(::TFSyncedMMUIState* leader_ui_state) {
  delete leader_ui_state_;
  leader_ui_state_ = leader_ui_state;
  if (leader_ui_state) {
    set_has_leader_ui_state();
  } else {
    clear_has_leader_ui_state();
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFParty.leader_ui_state)
}

// repeated .TFPendingPartyMember pending_members = 39;
inline int CSOTFParty::pending_members_size() const {
  return pending_members_.size();
}
inline void CSOTFParty::clear_pending_members() {
  pending_members_.Clear();
}
inline const ::TFPendingPartyMember& CSOTFParty::pending_members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.pending_members)
  return pending_members_.Get(index);
}
inline ::TFPendingPartyMember* CSOTFParty::mutable_pending_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.pending_members)
  return pending_members_.Mutable(index);
}
inline ::TFPendingPartyMember* CSOTFParty::add_pending_members() {
  // @@protoc_insertion_point(field_add:CSOTFParty.pending_members)
  return pending_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TFPendingPartyMember >&
CSOTFParty::pending_members() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.pending_members)
  return pending_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::TFPendingPartyMember >*
CSOTFParty::mutable_pending_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.pending_members)
  return &pending_members_;
}

// -------------------------------------------------------------------

// CSOTFPartyInvite_PartyMember

// optional fixed64 steamid = 2;
inline bool CSOTFPartyInvite_PartyMember::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyInvite_PartyMember::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite_PartyMember::steamid() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.steamid)
  return steamid_;
}
inline void CSOTFPartyInvite_PartyMember::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.steamid)
}

// -------------------------------------------------------------------

// CSOTFPartyInvite

// optional uint64 group_id = 1;
inline bool CSOTFPartyInvite::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyInvite::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyInvite::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyInvite::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::group_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.group_id)
  return group_id_;
}
inline void CSOTFPartyInvite::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.group_id)
}

// optional fixed64 inviter = 2;
inline bool CSOTFPartyInvite::has_inviter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyInvite::set_has_inviter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyInvite::clear_has_inviter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyInvite::clear_inviter() {
  inviter_ = GOOGLE_ULONGLONG(0);
  clear_has_inviter();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::inviter() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.inviter)
  return inviter_;
}
inline void CSOTFPartyInvite::set_inviter(::google::protobuf::uint64 value) {
  set_has_inviter();
  inviter_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.inviter)
}

// repeated .CSOTFPartyInvite.PartyMember members = 4;
inline int CSOTFPartyInvite::members_size() const {
  return members_.size();
}
inline void CSOTFPartyInvite::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyInvite_PartyMember& CSOTFPartyInvite::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.members)
  return members_.Get(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.members)
  return members_.Mutable(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFPartyInvite.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
CSOTFPartyInvite::members() const {
  // @@protoc_insertion_point(field_list:CSOTFPartyInvite.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
CSOTFPartyInvite::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFPartyInvite.members)
  return &members_;
}

// optional .CSOTFPartyInvite.Type type = 5;
inline bool CSOTFPartyInvite::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFPartyInvite::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFPartyInvite::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFPartyInvite::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::CSOTFPartyInvite_Type CSOTFPartyInvite::type() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.type)
  return static_cast< ::CSOTFPartyInvite_Type >(type_);
}
inline void CSOTFPartyInvite::set_type(::CSOTFPartyInvite_Type value) {
  assert(::CSOTFPartyInvite_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.type)
}

// -------------------------------------------------------------------

// CTFLobbyPlayerProto

// optional fixed64 id = 1;
inline bool CTFLobbyPlayerProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFLobbyPlayerProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFLobbyPlayerProto::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CTFLobbyPlayerProto::id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.id)
  return id_;
}
inline void CTFLobbyPlayerProto::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.id)
}

// optional .TF_GC_TEAM team = 3;
inline bool CTFLobbyPlayerProto::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTFLobbyPlayerProto::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTFLobbyPlayerProto::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::TF_GC_TEAM CTFLobbyPlayerProto::team() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.team)
  return static_cast< ::TF_GC_TEAM >(team_);
}
inline void CTFLobbyPlayerProto::set_team(::TF_GC_TEAM value) {
  assert(::TF_GC_TEAM_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.team)
}

// optional .CTFLobbyPlayerProto.ConnectState connect_state = 13;
inline bool CTFLobbyPlayerProto::has_connect_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_connect_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTFLobbyPlayerProto::clear_has_connect_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTFLobbyPlayerProto::clear_connect_state() {
  connect_state_ = 0;
  clear_has_connect_state();
}
inline ::CTFLobbyPlayerProto_ConnectState CTFLobbyPlayerProto::connect_state() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.connect_state)
  return static_cast< ::CTFLobbyPlayerProto_ConnectState >(connect_state_);
}
inline void CTFLobbyPlayerProto::set_connect_state(::CTFLobbyPlayerProto_ConnectState value) {
  assert(::CTFLobbyPlayerProto_ConnectState_IsValid(value));
  set_has_connect_state();
  connect_state_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.connect_state)
}

// optional string name = 6;
inline bool CTFLobbyPlayerProto::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTFLobbyPlayerProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTFLobbyPlayerProto::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CTFLobbyPlayerProto::name() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.name)
  return *name_;
}
inline void CTFLobbyPlayerProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.name)
}
inline void CTFLobbyPlayerProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CTFLobbyPlayerProto.name)
}
inline void CTFLobbyPlayerProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CTFLobbyPlayerProto.name)
}
inline ::std::string* CTFLobbyPlayerProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CTFLobbyPlayerProto.name)
  return name_;
}
inline ::std::string* CTFLobbyPlayerProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CTFLobbyPlayerProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CTFLobbyPlayerProto.name)
}

// optional uint64 original_party_id = 12;
inline bool CTFLobbyPlayerProto::has_original_party_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_original_party_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTFLobbyPlayerProto::clear_has_original_party_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTFLobbyPlayerProto::clear_original_party_id() {
  original_party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_party_id();
}
inline ::google::protobuf::uint64 CTFLobbyPlayerProto::original_party_id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.original_party_id)
  return original_party_id_;
}
inline void CTFLobbyPlayerProto::set_original_party_id(::google::protobuf::uint64 value) {
  set_has_original_party_id();
  original_party_id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.original_party_id)
}

// optional bool squad_surplus = 14;
inline bool CTFLobbyPlayerProto::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTFLobbyPlayerProto::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTFLobbyPlayerProto::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CTFLobbyPlayerProto::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.squad_surplus)
  return squad_surplus_;
}
inline void CTFLobbyPlayerProto::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.squad_surplus)
}

// optional uint32 badge_level = 15;
inline bool CTFLobbyPlayerProto::has_badge_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_badge_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CTFLobbyPlayerProto::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CTFLobbyPlayerProto::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CTFLobbyPlayerProto::badge_level() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.badge_level)
  return badge_level_;
}
inline void CTFLobbyPlayerProto::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.badge_level)
}

// optional uint32 last_connect_time = 17;
inline bool CTFLobbyPlayerProto::has_last_connect_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_last_connect_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CTFLobbyPlayerProto::clear_has_last_connect_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CTFLobbyPlayerProto::clear_last_connect_time() {
  last_connect_time_ = 0u;
  clear_has_last_connect_time();
}
inline ::google::protobuf::uint32 CTFLobbyPlayerProto::last_connect_time() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.last_connect_time)
  return last_connect_time_;
}
inline void CTFLobbyPlayerProto::set_last_connect_time(::google::protobuf::uint32 value) {
  set_has_last_connect_time();
  last_connect_time_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.last_connect_time)
}

// optional .CTFLobbyPlayerProto.Type type = 19;
inline bool CTFLobbyPlayerProto::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CTFLobbyPlayerProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CTFLobbyPlayerProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::CTFLobbyPlayerProto_Type CTFLobbyPlayerProto::type() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.type)
  return static_cast< ::CTFLobbyPlayerProto_Type >(type_);
}
inline void CTFLobbyPlayerProto::set_type(::CTFLobbyPlayerProto_Type value) {
  assert(::CTFLobbyPlayerProto_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.type)
}

// optional double normalized_rating = 20;
inline bool CTFLobbyPlayerProto::has_normalized_rating() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_normalized_rating() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CTFLobbyPlayerProto::clear_has_normalized_rating() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CTFLobbyPlayerProto::clear_normalized_rating() {
  normalized_rating_ = 0;
  clear_has_normalized_rating();
}
inline double CTFLobbyPlayerProto::normalized_rating() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.normalized_rating)
  return normalized_rating_;
}
inline void CTFLobbyPlayerProto::set_normalized_rating(double value) {
  set_has_normalized_rating();
  normalized_rating_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.normalized_rating)
}

// optional double normalized_uncertainty = 22;
inline bool CTFLobbyPlayerProto::has_normalized_uncertainty() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_normalized_uncertainty() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CTFLobbyPlayerProto::clear_has_normalized_uncertainty() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CTFLobbyPlayerProto::clear_normalized_uncertainty() {
  normalized_uncertainty_ = 0;
  clear_has_normalized_uncertainty();
}
inline double CTFLobbyPlayerProto::normalized_uncertainty() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.normalized_uncertainty)
  return normalized_uncertainty_;
}
inline void CTFLobbyPlayerProto::set_normalized_uncertainty(double value) {
  set_has_normalized_uncertainty();
  normalized_uncertainty_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.normalized_uncertainty)
}

// optional uint32 rank = 21;
inline bool CTFLobbyPlayerProto::has_rank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_rank() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CTFLobbyPlayerProto::clear_has_rank() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CTFLobbyPlayerProto::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CTFLobbyPlayerProto::rank() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.rank)
  return rank_;
}
inline void CTFLobbyPlayerProto::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.rank)
}

// optional bool chat_suspension = 23;
inline bool CTFLobbyPlayerProto::has_chat_suspension() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CTFLobbyPlayerProto::set_has_chat_suspension() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CTFLobbyPlayerProto::clear_has_chat_suspension() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CTFLobbyPlayerProto::clear_chat_suspension() {
  chat_suspension_ = false;
  clear_has_chat_suspension();
}
inline bool CTFLobbyPlayerProto::chat_suspension() const {
  // @@protoc_insertion_point(field_get:CTFLobbyPlayerProto.chat_suspension)
  return chat_suspension_;
}
inline void CTFLobbyPlayerProto::set_chat_suspension(bool value) {
  set_has_chat_suspension();
  chat_suspension_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyPlayerProto.chat_suspension)
}

// -------------------------------------------------------------------

// CTFLobbyInviteProto

// optional fixed64 lobby_id = 1;
inline bool CTFLobbyInviteProto::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFLobbyInviteProto::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFLobbyInviteProto::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFLobbyInviteProto::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CTFLobbyInviteProto::lobby_id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyInviteProto.lobby_id)
  return lobby_id_;
}
inline void CTFLobbyInviteProto::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyInviteProto.lobby_id)
}

// optional .ETFMatchGroup match_group = 2;
inline bool CTFLobbyInviteProto::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTFLobbyInviteProto::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTFLobbyInviteProto::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTFLobbyInviteProto::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::ETFMatchGroup CTFLobbyInviteProto::match_group() const {
  // @@protoc_insertion_point(field_get:CTFLobbyInviteProto.match_group)
  return static_cast< ::ETFMatchGroup >(match_group_);
}
inline void CTFLobbyInviteProto::set_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyInviteProto.match_group)
}

// -------------------------------------------------------------------

// CSOTFGameServerLobby

// optional uint64 lobby_id = 1;
inline bool CSOTFGameServerLobby::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFGameServerLobby::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFGameServerLobby::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFGameServerLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.lobby_id)
  return lobby_id_;
}
inline void CSOTFGameServerLobby::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.lobby_id)
}

// repeated .CTFLobbyPlayerProto members = 2;
inline int CSOTFGameServerLobby::members_size() const {
  return members_.size();
}
inline void CSOTFGameServerLobby::clear_members() {
  members_.Clear();
}
inline const ::CTFLobbyPlayerProto& CSOTFGameServerLobby::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.members)
  return members_.Get(index);
}
inline ::CTFLobbyPlayerProto* CSOTFGameServerLobby::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.members)
  return members_.Mutable(index);
}
inline ::CTFLobbyPlayerProto* CSOTFGameServerLobby::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFGameServerLobby.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >&
CSOTFGameServerLobby::members() const {
  // @@protoc_insertion_point(field_list:CSOTFGameServerLobby.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >*
CSOTFGameServerLobby::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFGameServerLobby.members)
  return &members_;
}

// optional fixed64 server_id = 6 [default = 0];
inline bool CSOTFGameServerLobby::has_server_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFGameServerLobby::set_has_server_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFGameServerLobby::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFGameServerLobby::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::server_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.server_id)
  return server_id_;
}
inline void CSOTFGameServerLobby::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.server_id)
}

// optional .CSOTFGameServerLobby.State state = 4 [default = UNKNOWN];
inline bool CSOTFGameServerLobby::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFGameServerLobby::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFGameServerLobby::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFGameServerLobby::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::CSOTFGameServerLobby_State CSOTFGameServerLobby::state() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.state)
  return static_cast< ::CSOTFGameServerLobby_State >(state_);
}
inline void CSOTFGameServerLobby::set_state(::CSOTFGameServerLobby_State value) {
  assert(::CSOTFGameServerLobby_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.state)
}

// optional string connect = 5;
inline bool CSOTFGameServerLobby::has_connect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFGameServerLobby::set_has_connect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFGameServerLobby::clear_has_connect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFGameServerLobby::clear_connect() {
  if (connect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& CSOTFGameServerLobby::connect() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.connect)
  return *connect_;
}
inline void CSOTFGameServerLobby::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.connect)
}
inline void CSOTFGameServerLobby::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.connect)
}
inline void CSOTFGameServerLobby::set_connect(const char* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.connect)
}
inline ::std::string* CSOTFGameServerLobby::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.connect)
  return connect_;
}
inline ::std::string* CSOTFGameServerLobby::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFGameServerLobby::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.connect)
}

// optional .TF_GC_GameState game_state = 22;
inline bool CSOTFGameServerLobby::has_game_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFGameServerLobby::set_has_game_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFGameServerLobby::clear_has_game_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFGameServerLobby::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::TF_GC_GameState CSOTFGameServerLobby::game_state() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.game_state)
  return static_cast< ::TF_GC_GameState >(game_state_);
}
inline void CSOTFGameServerLobby::set_game_state(::TF_GC_GameState value) {
  assert(::TF_GC_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.game_state)
}

// optional double initial_average_mm_rating = 32;
inline bool CSOTFGameServerLobby::has_initial_average_mm_rating() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFGameServerLobby::set_has_initial_average_mm_rating() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFGameServerLobby::clear_has_initial_average_mm_rating() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFGameServerLobby::clear_initial_average_mm_rating() {
  initial_average_mm_rating_ = 0;
  clear_has_initial_average_mm_rating();
}
inline double CSOTFGameServerLobby::initial_average_mm_rating() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.initial_average_mm_rating)
  return initial_average_mm_rating_;
}
inline void CSOTFGameServerLobby::set_initial_average_mm_rating(double value) {
  set_has_initial_average_mm_rating();
  initial_average_mm_rating_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.initial_average_mm_rating)
}

// optional string mannup_tour_name = 42;
inline bool CSOTFGameServerLobby::has_mannup_tour_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFGameServerLobby::set_has_mannup_tour_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFGameServerLobby::clear_has_mannup_tour_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFGameServerLobby::clear_mannup_tour_name() {
  if (mannup_tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_->clear();
  }
  clear_has_mannup_tour_name();
}
inline const ::std::string& CSOTFGameServerLobby::mannup_tour_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.mannup_tour_name)
  return *mannup_tour_name_;
}
inline void CSOTFGameServerLobby::set_mannup_tour_name(const ::std::string& value) {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.mannup_tour_name)
}
inline void CSOTFGameServerLobby::set_mannup_tour_name(const char* value) {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.mannup_tour_name)
}
inline void CSOTFGameServerLobby::set_mannup_tour_name(const char* value, size_t size) {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.mannup_tour_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_mannup_tour_name() {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.mannup_tour_name)
  return mannup_tour_name_;
}
inline ::std::string* CSOTFGameServerLobby::release_mannup_tour_name() {
  clear_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mannup_tour_name_;
    mannup_tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFGameServerLobby::set_allocated_mannup_tour_name(::std::string* mannup_tour_name) {
  if (mannup_tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mannup_tour_name_;
  }
  if (mannup_tour_name) {
    set_has_mannup_tour_name();
    mannup_tour_name_ = mannup_tour_name;
  } else {
    clear_has_mannup_tour_name();
    mannup_tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.mannup_tour_name)
}

// optional string map_name = 38;
inline bool CSOTFGameServerLobby::has_map_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFGameServerLobby::set_has_map_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFGameServerLobby::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFGameServerLobby::clear_map_name() {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_->clear();
  }
  clear_has_map_name();
}
inline const ::std::string& CSOTFGameServerLobby::map_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.map_name)
  return *map_name_;
}
inline void CSOTFGameServerLobby::set_map_name(const ::std::string& value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.map_name)
}
inline void CSOTFGameServerLobby::set_map_name(const char* value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.map_name)
}
inline void CSOTFGameServerLobby::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.map_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_map_name() {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.map_name)
  return map_name_;
}
inline ::std::string* CSOTFGameServerLobby::release_map_name() {
  clear_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_name_;
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFGameServerLobby::set_allocated_map_name(::std::string* map_name) {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_name_;
  }
  if (map_name) {
    set_has_map_name();
    map_name_ = map_name;
  } else {
    clear_has_map_name();
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.map_name)
}

// optional string mission_name = 39;
inline bool CSOTFGameServerLobby::has_mission_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFGameServerLobby::set_has_mission_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFGameServerLobby::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFGameServerLobby::clear_mission_name() {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_->clear();
  }
  clear_has_mission_name();
}
inline const ::std::string& CSOTFGameServerLobby::mission_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.mission_name)
  return *mission_name_;
}
inline void CSOTFGameServerLobby::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.mission_name)
}
inline void CSOTFGameServerLobby::set_mission_name(const char* value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.mission_name)
}
inline void CSOTFGameServerLobby::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.mission_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_mission_name() {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.mission_name)
  return mission_name_;
}
inline ::std::string* CSOTFGameServerLobby::release_mission_name() {
  clear_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mission_name_;
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFGameServerLobby::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mission_name_;
  }
  if (mission_name) {
    set_has_mission_name();
    mission_name_ = mission_name;
  } else {
    clear_has_mission_name();
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.mission_name)
}

// optional uint32 match_group = 41;
inline bool CSOTFGameServerLobby::has_match_group() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFGameServerLobby::set_has_match_group() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFGameServerLobby::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFGameServerLobby::clear_match_group() {
  match_group_ = 0u;
  clear_has_match_group();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.match_group)
  return match_group_;
}
inline void CSOTFGameServerLobby::set_match_group(::google::protobuf::uint32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.match_group)
}

// optional uint64 match_id = 30 [default = 0];
inline bool CSOTFGameServerLobby::has_match_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFGameServerLobby::set_has_match_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFGameServerLobby::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFGameServerLobby::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.match_id)
  return match_id_;
}
inline void CSOTFGameServerLobby::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.match_id)
}

// optional uint32 formed_time = 36;
inline bool CSOTFGameServerLobby::has_formed_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_formed_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFGameServerLobby::clear_has_formed_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFGameServerLobby::clear_formed_time() {
  formed_time_ = 0u;
  clear_has_formed_time();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::formed_time() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.formed_time)
  return formed_time_;
}
inline void CSOTFGameServerLobby::set_formed_time(::google::protobuf::uint32 value) {
  set_has_formed_time();
  formed_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.formed_time)
}

// optional uint32 flags = 43;
inline bool CSOTFGameServerLobby::has_flags() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_flags() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFGameServerLobby::clear_has_flags() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFGameServerLobby::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::flags() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.flags)
  return flags_;
}
inline void CSOTFGameServerLobby::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.flags)
}

// optional bool late_join_eligible = 44;
inline bool CSOTFGameServerLobby::has_late_join_eligible() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_late_join_eligible() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFGameServerLobby::clear_has_late_join_eligible() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFGameServerLobby::clear_late_join_eligible() {
  late_join_eligible_ = false;
  clear_has_late_join_eligible();
}
inline bool CSOTFGameServerLobby::late_join_eligible() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.late_join_eligible)
  return late_join_eligible_;
}
inline void CSOTFGameServerLobby::set_late_join_eligible(bool value) {
  set_has_late_join_eligible();
  late_join_eligible_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.late_join_eligible)
}

// optional uint32 fixed_match_size = 45;
inline bool CSOTFGameServerLobby::has_fixed_match_size() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_fixed_match_size() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFGameServerLobby::clear_has_fixed_match_size() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFGameServerLobby::clear_fixed_match_size() {
  fixed_match_size_ = 0u;
  clear_has_fixed_match_size();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::fixed_match_size() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.fixed_match_size)
  return fixed_match_size_;
}
inline void CSOTFGameServerLobby::set_fixed_match_size(::google::protobuf::uint32 value) {
  set_has_fixed_match_size();
  fixed_match_size_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.fixed_match_size)
}

// optional .CSOTFGameServerLobby.WarMatch is_war_match = 46 [default = NOPE];
inline bool CSOTFGameServerLobby::has_is_war_match() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_is_war_match() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFGameServerLobby::clear_has_is_war_match() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFGameServerLobby::clear_is_war_match() {
  is_war_match_ = 0;
  clear_has_is_war_match();
}
inline ::CSOTFGameServerLobby_WarMatch CSOTFGameServerLobby::is_war_match() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.is_war_match)
  return static_cast< ::CSOTFGameServerLobby_WarMatch >(is_war_match_);
}
inline void CSOTFGameServerLobby::set_is_war_match(::CSOTFGameServerLobby_WarMatch value) {
  assert(::CSOTFGameServerLobby_WarMatch_IsValid(value));
  set_has_is_war_match();
  is_war_match_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.is_war_match)
}

// repeated uint32 next_maps_for_vote = 47;
inline int CSOTFGameServerLobby::next_maps_for_vote_size() const {
  return next_maps_for_vote_.size();
}
inline void CSOTFGameServerLobby::clear_next_maps_for_vote() {
  next_maps_for_vote_.Clear();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::next_maps_for_vote(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.next_maps_for_vote)
  return next_maps_for_vote_.Get(index);
}
inline void CSOTFGameServerLobby::set_next_maps_for_vote(int index, ::google::protobuf::uint32 value) {
  next_maps_for_vote_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.next_maps_for_vote)
}
inline void CSOTFGameServerLobby::add_next_maps_for_vote(::google::protobuf::uint32 value) {
  next_maps_for_vote_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFGameServerLobby.next_maps_for_vote)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOTFGameServerLobby::next_maps_for_vote() const {
  // @@protoc_insertion_point(field_list:CSOTFGameServerLobby.next_maps_for_vote)
  return next_maps_for_vote_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOTFGameServerLobby::mutable_next_maps_for_vote() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFGameServerLobby.next_maps_for_vote)
  return &next_maps_for_vote_;
}

// optional uint32 lobby_mm_version = 48;
inline bool CSOTFGameServerLobby::has_lobby_mm_version() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_lobby_mm_version() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFGameServerLobby::clear_has_lobby_mm_version() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFGameServerLobby::clear_lobby_mm_version() {
  lobby_mm_version_ = 0u;
  clear_has_lobby_mm_version();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::lobby_mm_version() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.lobby_mm_version)
  return lobby_mm_version_;
}
inline void CSOTFGameServerLobby::set_lobby_mm_version(::google::protobuf::uint32 value) {
  set_has_lobby_mm_version();
  lobby_mm_version_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.lobby_mm_version)
}

// repeated .CTFLobbyPlayerProto pending_members = 49;
inline int CSOTFGameServerLobby::pending_members_size() const {
  return pending_members_.size();
}
inline void CSOTFGameServerLobby::clear_pending_members() {
  pending_members_.Clear();
}
inline const ::CTFLobbyPlayerProto& CSOTFGameServerLobby::pending_members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.pending_members)
  return pending_members_.Get(index);
}
inline ::CTFLobbyPlayerProto* CSOTFGameServerLobby::mutable_pending_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.pending_members)
  return pending_members_.Mutable(index);
}
inline ::CTFLobbyPlayerProto* CSOTFGameServerLobby::add_pending_members() {
  // @@protoc_insertion_point(field_add:CSOTFGameServerLobby.pending_members)
  return pending_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >&
CSOTFGameServerLobby::pending_members() const {
  // @@protoc_insertion_point(field_list:CSOTFGameServerLobby.pending_members)
  return pending_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyPlayerProto >*
CSOTFGameServerLobby::mutable_pending_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFGameServerLobby.pending_members)
  return &pending_members_;
}

// -------------------------------------------------------------------

// CMsgExitMatchmaking

// optional bool explicit_abandon = 1;
inline bool CMsgExitMatchmaking::has_explicit_abandon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExitMatchmaking::set_has_explicit_abandon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExitMatchmaking::clear_has_explicit_abandon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExitMatchmaking::clear_explicit_abandon() {
  explicit_abandon_ = false;
  clear_has_explicit_abandon();
}
inline bool CMsgExitMatchmaking::explicit_abandon() const {
  // @@protoc_insertion_point(field_get:CMsgExitMatchmaking.explicit_abandon)
  return explicit_abandon_;
}
inline void CMsgExitMatchmaking::set_explicit_abandon(bool value) {
  set_has_explicit_abandon();
  explicit_abandon_ = value;
  // @@protoc_insertion_point(field_set:CMsgExitMatchmaking.explicit_abandon)
}

// optional uint64 party_id = 2;
inline bool CMsgExitMatchmaking::has_party_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgExitMatchmaking::set_has_party_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgExitMatchmaking::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgExitMatchmaking::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgExitMatchmaking::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgExitMatchmaking.party_id)
  return party_id_;
}
inline void CMsgExitMatchmaking::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgExitMatchmaking.party_id)
}

// optional uint64 lobby_id = 3;
inline bool CMsgExitMatchmaking::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgExitMatchmaking::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgExitMatchmaking::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgExitMatchmaking::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgExitMatchmaking::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgExitMatchmaking.lobby_id)
  return lobby_id_;
}
inline void CMsgExitMatchmaking::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgExitMatchmaking.lobby_id)
}

// -------------------------------------------------------------------

// CMsgAcceptLobbyInvite

// optional uint64 invited_lobby_id = 1;
inline bool CMsgAcceptLobbyInvite::has_invited_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcceptLobbyInvite::set_has_invited_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcceptLobbyInvite::clear_has_invited_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcceptLobbyInvite::clear_invited_lobby_id() {
  invited_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_invited_lobby_id();
}
inline ::google::protobuf::uint64 CMsgAcceptLobbyInvite::invited_lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptLobbyInvite.invited_lobby_id)
  return invited_lobby_id_;
}
inline void CMsgAcceptLobbyInvite::set_invited_lobby_id(::google::protobuf::uint64 value) {
  set_has_invited_lobby_id();
  invited_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptLobbyInvite.invited_lobby_id)
}

// optional uint64 abandoning_match_id = 2;
inline bool CMsgAcceptLobbyInvite::has_abandoning_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAcceptLobbyInvite::set_has_abandoning_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAcceptLobbyInvite::clear_has_abandoning_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAcceptLobbyInvite::clear_abandoning_match_id() {
  abandoning_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_abandoning_match_id();
}
inline ::google::protobuf::uint64 CMsgAcceptLobbyInvite::abandoning_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptLobbyInvite.abandoning_match_id)
  return abandoning_match_id_;
}
inline void CMsgAcceptLobbyInvite::set_abandoning_match_id(::google::protobuf::uint64 value) {
  set_has_abandoning_match_id();
  abandoning_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptLobbyInvite.abandoning_match_id)
}

// repeated uint64 abandoning_invite_lobby_ids = 3;
inline int CMsgAcceptLobbyInvite::abandoning_invite_lobby_ids_size() const {
  return abandoning_invite_lobby_ids_.size();
}
inline void CMsgAcceptLobbyInvite::clear_abandoning_invite_lobby_ids() {
  abandoning_invite_lobby_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgAcceptLobbyInvite::abandoning_invite_lobby_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAcceptLobbyInvite.abandoning_invite_lobby_ids)
  return abandoning_invite_lobby_ids_.Get(index);
}
inline void CMsgAcceptLobbyInvite::set_abandoning_invite_lobby_ids(int index, ::google::protobuf::uint64 value) {
  abandoning_invite_lobby_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAcceptLobbyInvite.abandoning_invite_lobby_ids)
}
inline void CMsgAcceptLobbyInvite::add_abandoning_invite_lobby_ids(::google::protobuf::uint64 value) {
  abandoning_invite_lobby_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgAcceptLobbyInvite.abandoning_invite_lobby_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgAcceptLobbyInvite::abandoning_invite_lobby_ids() const {
  // @@protoc_insertion_point(field_list:CMsgAcceptLobbyInvite.abandoning_invite_lobby_ids)
  return abandoning_invite_lobby_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgAcceptLobbyInvite::mutable_abandoning_invite_lobby_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAcceptLobbyInvite.abandoning_invite_lobby_ids)
  return &abandoning_invite_lobby_ids_;
}

// -------------------------------------------------------------------

// CMsgAcceptLobbyInviteReply

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountRequest

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountResponse

// repeated uint32 searching_players_by_group = 1;
inline int CMsgMatchmakingSearchCountResponse::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CMsgMatchmakingSearchCountResponse::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CMsgMatchmakingSearchCountResponse::searching_players_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return searching_players_by_group_.Get(index);
}
inline void CMsgMatchmakingSearchCountResponse::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
}
inline void CMsgMatchmakingSearchCountResponse::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgMatchmakingSearchCountResponse::searching_players_by_group() const {
  // @@protoc_insertion_point(field_list:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgMatchmakingSearchCountResponse::mutable_searching_players_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return &searching_players_by_group_;
}

// -------------------------------------------------------------------

// CMsgKickedFromMatchmakingQueue

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGameServerMatchmakingStatus_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameServerMatchmakingStatus_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.Player.steam_id)
  return steam_id_;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.Player.steam_id)
}

// optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2;
inline bool CMsgGameServerMatchmakingStatus_Player::has_connect_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_has_connect_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_has_connect_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_connect_state() {
  connect_state_ = 0;
  clear_has_connect_state();
}
inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_Player::connect_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.Player.connect_state)
  return static_cast< ::CMsgGameServerMatchmakingStatus_PlayerConnectState >(connect_state_);
}
inline void CMsgGameServerMatchmakingStatus_Player::set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  assert(::CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value));
  set_has_connect_state();
  connect_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.Player.connect_state)
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus

// optional uint32 server_version = 16 [default = 1225];
inline bool CMsgGameServerMatchmakingStatus::has_server_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_version() {
  server_version_ = 1225u;
  clear_has_server_version();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_version)
  return server_version_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_version(::google::protobuf::uint32 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_version)
}

// optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_matchmaking_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_matchmaking_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_state() {
  matchmaking_state_ = 0;
  clear_has_matchmaking_state();
}
inline ::ServerMatchmakingState CMsgGameServerMatchmakingStatus::matchmaking_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.matchmaking_state)
  return static_cast< ::ServerMatchmakingState >(matchmaking_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_state(::ServerMatchmakingState value) {
  assert(::ServerMatchmakingState_IsValid(value));
  set_has_matchmaking_state();
  matchmaking_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.matchmaking_state)
}

// optional string map = 3;
inline bool CMsgGameServerMatchmakingStatus::has_map() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_map() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_map() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerMatchmakingStatus::clear_map() {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_->clear();
  }
  clear_has_map();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::map() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.map)
  return *map_;
}
inline void CMsgGameServerMatchmakingStatus::set_map(const ::std::string& value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.map)
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.map)
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value, size_t size) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.map)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_map() {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.map)
  return map_;
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_map() {
  clear_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_;
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_map(::std::string* map) {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_;
  }
  if (map) {
    set_has_map();
    map_ = map;
  } else {
    clear_has_map();
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.map)
}

// optional string tags = 4;
inline bool CMsgGameServerMatchmakingStatus::has_tags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_tags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_tags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameServerMatchmakingStatus::clear_tags() {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_->clear();
  }
  clear_has_tags();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::tags() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.tags)
  return *tags_;
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const ::std::string& value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.tags)
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.tags)
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value, size_t size) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.tags)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_tags() {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.tags)
  return tags_;
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_tags() {
  clear_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tags_;
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_tags(::std::string* tags) {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tags_;
  }
  if (tags) {
    set_has_tags();
    tags_ = tags;
  } else {
    clear_has_tags();
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.tags)
}

// optional uint32 bot_count = 5;
inline bool CMsgGameServerMatchmakingStatus::has_bot_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_bot_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_bot_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameServerMatchmakingStatus::clear_bot_count() {
  bot_count_ = 0u;
  clear_has_bot_count();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::bot_count() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.bot_count)
  return bot_count_;
}
inline void CMsgGameServerMatchmakingStatus::set_bot_count(::google::protobuf::uint32 value) {
  set_has_bot_count();
  bot_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.bot_count)
}

// optional uint32 num_spectators = 6;
inline bool CMsgGameServerMatchmakingStatus::has_num_spectators() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_num_spectators() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_num_spectators() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameServerMatchmakingStatus::clear_num_spectators() {
  num_spectators_ = 0u;
  clear_has_num_spectators();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::num_spectators() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.num_spectators)
  return num_spectators_;
}
inline void CMsgGameServerMatchmakingStatus::set_num_spectators(::google::protobuf::uint32 value) {
  set_has_num_spectators();
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.num_spectators)
}

// optional uint32 max_players = 7;
inline bool CMsgGameServerMatchmakingStatus::has_max_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_max_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_max_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameServerMatchmakingStatus::clear_max_players() {
  max_players_ = 0u;
  clear_has_max_players();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::max_players() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.max_players)
  return max_players_;
}
inline void CMsgGameServerMatchmakingStatus::set_max_players(::google::protobuf::uint32 value) {
  set_has_max_players();
  max_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.max_players)
}

// optional uint32 slots_free = 8;
inline bool CMsgGameServerMatchmakingStatus::has_slots_free() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_slots_free() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_slots_free() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameServerMatchmakingStatus::clear_slots_free() {
  slots_free_ = 0u;
  clear_has_slots_free();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::slots_free() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.slots_free)
  return slots_free_;
}
inline void CMsgGameServerMatchmakingStatus::set_slots_free(::google::protobuf::uint32 value) {
  set_has_slots_free();
  slots_free_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.slots_free)
}

// optional uint32 server_region = 9;
inline bool CMsgGameServerMatchmakingStatus::has_server_region() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_region() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_region)
  return server_region_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_region)
}

// optional float server_loadavg = 10;
inline bool CMsgGameServerMatchmakingStatus::has_server_loadavg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_loadavg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_loadavg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_loadavg() {
  server_loadavg_ = 0;
  clear_has_server_loadavg();
}
inline float CMsgGameServerMatchmakingStatus::server_loadavg() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_loadavg)
  return server_loadavg_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_loadavg(float value) {
  set_has_server_loadavg();
  server_loadavg_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_loadavg)
}

// optional bool server_trusted = 11;
inline bool CMsgGameServerMatchmakingStatus::has_server_trusted() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_trusted() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_trusted() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_trusted() {
  server_trusted_ = false;
  clear_has_server_trusted();
}
inline bool CMsgGameServerMatchmakingStatus::server_trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_trusted)
  return server_trusted_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_trusted(bool value) {
  set_has_server_trusted();
  server_trusted_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_trusted)
}

// optional bool server_dedicated = 12;
inline bool CMsgGameServerMatchmakingStatus::has_server_dedicated() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_dedicated() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_dedicated() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_dedicated() {
  server_dedicated_ = false;
  clear_has_server_dedicated();
}
inline bool CMsgGameServerMatchmakingStatus::server_dedicated() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_dedicated)
  return server_dedicated_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_dedicated(bool value) {
  set_has_server_dedicated();
  server_dedicated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_dedicated)
}

// optional uint32 strict = 17;
inline bool CMsgGameServerMatchmakingStatus::has_strict() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_strict() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_strict() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_strict() {
  strict_ = 0u;
  clear_has_strict();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::strict() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.strict)
  return strict_;
}
inline void CMsgGameServerMatchmakingStatus::set_strict(::google::protobuf::uint32 value) {
  set_has_strict();
  strict_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.strict)
}

// optional string fake_ip = 25;
inline bool CMsgGameServerMatchmakingStatus::has_fake_ip() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_fake_ip() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_fake_ip() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_fake_ip() {
  if (fake_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fake_ip_->clear();
  }
  clear_has_fake_ip();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::fake_ip() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.fake_ip)
  return *fake_ip_;
}
inline void CMsgGameServerMatchmakingStatus::set_fake_ip(const ::std::string& value) {
  set_has_fake_ip();
  if (fake_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fake_ip_ = new ::std::string;
  }
  fake_ip_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.fake_ip)
}
inline void CMsgGameServerMatchmakingStatus::set_fake_ip(const char* value) {
  set_has_fake_ip();
  if (fake_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fake_ip_ = new ::std::string;
  }
  fake_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.fake_ip)
}
inline void CMsgGameServerMatchmakingStatus::set_fake_ip(const char* value, size_t size) {
  set_has_fake_ip();
  if (fake_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fake_ip_ = new ::std::string;
  }
  fake_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.fake_ip)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_fake_ip() {
  set_has_fake_ip();
  if (fake_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    fake_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.fake_ip)
  return fake_ip_;
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_fake_ip() {
  clear_has_fake_ip();
  if (fake_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = fake_ip_;
    fake_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_fake_ip(::std::string* fake_ip) {
  if (fake_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fake_ip_;
  }
  if (fake_ip) {
    set_has_fake_ip();
    fake_ip_ = fake_ip;
  } else {
    clear_has_fake_ip();
    fake_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.fake_ip)
}

// repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
inline int CMsgGameServerMatchmakingStatus::players_size() const {
  return players_.size();
}
inline void CMsgGameServerMatchmakingStatus::clear_players() {
  players_.Clear();
}
inline const ::CMsgGameServerMatchmakingStatus_Player& CMsgGameServerMatchmakingStatus::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.players)
  return players_.Get(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.players)
  return players_.Mutable(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::add_players() {
  // @@protoc_insertion_point(field_add:CMsgGameServerMatchmakingStatus.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
CMsgGameServerMatchmakingStatus::players() const {
  // @@protoc_insertion_point(field_list:CMsgGameServerMatchmakingStatus.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
CMsgGameServerMatchmakingStatus::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameServerMatchmakingStatus.players)
  return &players_;
}

// optional .TF_GC_GameState game_state = 14;
inline bool CMsgGameServerMatchmakingStatus::has_game_state() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_game_state() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_game_state() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::TF_GC_GameState CMsgGameServerMatchmakingStatus::game_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.game_state)
  return static_cast< ::TF_GC_GameState >(game_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_game_state(::TF_GC_GameState value) {
  assert(::TF_GC_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.game_state)
}

// optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
inline bool CMsgGameServerMatchmakingStatus::has_event() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_event() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_event() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus::event() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.event)
  return static_cast< ::CMsgGameServerMatchmakingStatus_Event >(event_);
}
inline void CMsgGameServerMatchmakingStatus::set_event(::CMsgGameServerMatchmakingStatus_Event value) {
  assert(::CMsgGameServerMatchmakingStatus_Event_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.event)
}

// optional uint32 mvm_wave = 18;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_wave() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_wave() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_wave() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_wave() {
  mvm_wave_ = 0u;
  clear_has_mvm_wave();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_wave() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_wave)
  return mvm_wave_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_wave(::google::protobuf::uint32 value) {
  set_has_mvm_wave();
  mvm_wave_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_wave)
}

// optional uint32 mvm_credits_acquired = 19;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_acquired() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_credits_acquired() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_credits_acquired() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_acquired() {
  mvm_credits_acquired_ = 0u;
  clear_has_mvm_credits_acquired();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_acquired() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_credits_acquired)
  return mvm_credits_acquired_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_acquired(::google::protobuf::uint32 value) {
  set_has_mvm_credits_acquired();
  mvm_credits_acquired_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_credits_acquired)
}

// optional uint32 mvm_credits_dropped = 20;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_dropped() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_credits_dropped() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_credits_dropped() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_dropped() {
  mvm_credits_dropped_ = 0u;
  clear_has_mvm_credits_dropped();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_dropped() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_credits_dropped)
  return mvm_credits_dropped_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_dropped(::google::protobuf::uint32 value) {
  set_has_mvm_credits_dropped();
  mvm_credits_dropped_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_credits_dropped)
}

// optional sint32 match_group = 23 [default = -1];
inline bool CMsgGameServerMatchmakingStatus::has_match_group() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_match_group() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_match_group() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgGameServerMatchmakingStatus::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.match_group)
  return match_group_;
}
inline void CMsgGameServerMatchmakingStatus::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.match_group)
}

// optional uint32 lobby_mm_version = 24;
inline bool CMsgGameServerMatchmakingStatus::has_lobby_mm_version() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_lobby_mm_version() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_lobby_mm_version() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_lobby_mm_version() {
  lobby_mm_version_ = 0u;
  clear_has_lobby_mm_version();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::lobby_mm_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.lobby_mm_version)
  return lobby_mm_version_;
}
inline void CMsgGameServerMatchmakingStatus::set_lobby_mm_version(::google::protobuf::uint32 value) {
  set_has_lobby_mm_version();
  lobby_mm_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.lobby_mm_version)
}

// -------------------------------------------------------------------

// CMsgMatchmakingProgress

// optional uint32 avg_wait_time_new = 4;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_new() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_avg_wait_time_new() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchmakingProgress::clear_has_avg_wait_time_new() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_new() {
  avg_wait_time_new_ = 0u;
  clear_has_avg_wait_time_new();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_new() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.avg_wait_time_new)
  return avg_wait_time_new_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_new(::google::protobuf::uint32 value) {
  set_has_avg_wait_time_new();
  avg_wait_time_new_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.avg_wait_time_new)
}

// optional uint32 avg_wait_time_join_late = 5;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_join_late() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_avg_wait_time_join_late() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchmakingProgress::clear_has_avg_wait_time_join_late() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_join_late() {
  avg_wait_time_join_late_ = 0u;
  clear_has_avg_wait_time_join_late();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_join_late() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.avg_wait_time_join_late)
  return avg_wait_time_join_late_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_join_late(::google::protobuf::uint32 value) {
  set_has_avg_wait_time_join_late();
  avg_wait_time_join_late_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.avg_wait_time_join_late)
}

// optional uint32 your_wait_time = 6;
inline bool CMsgMatchmakingProgress::has_your_wait_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_your_wait_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchmakingProgress::clear_has_your_wait_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchmakingProgress::clear_your_wait_time() {
  your_wait_time_ = 0u;
  clear_has_your_wait_time();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::your_wait_time() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.your_wait_time)
  return your_wait_time_;
}
inline void CMsgMatchmakingProgress::set_your_wait_time(::google::protobuf::uint32 value) {
  set_has_your_wait_time();
  your_wait_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.your_wait_time)
}

// optional uint32 matching_worldwide_searching_players = 8;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_searching_players() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_searching_players() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_searching_players() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_searching_players() {
  matching_worldwide_searching_players_ = 0u;
  clear_has_matching_worldwide_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_searching_players)
  return matching_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_searching_players(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_searching_players();
  matching_worldwide_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_searching_players)
}

// optional uint32 matching_near_you_searching_players = 9;
inline bool CMsgMatchmakingProgress::has_matching_near_you_searching_players() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_searching_players() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_searching_players() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_searching_players() {
  matching_near_you_searching_players_ = 0u;
  clear_has_matching_near_you_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_searching_players)
  return matching_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_searching_players(::google::protobuf::uint32 value) {
  set_has_matching_near_you_searching_players();
  matching_near_you_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_searching_players)
}

// optional uint32 total_worldwide_searching_players = 13;
inline bool CMsgMatchmakingProgress::has_total_worldwide_searching_players() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_searching_players() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_searching_players() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_searching_players() {
  total_worldwide_searching_players_ = 0u;
  clear_has_total_worldwide_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_searching_players)
  return total_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_searching_players(::google::protobuf::uint32 value) {
  set_has_total_worldwide_searching_players();
  total_worldwide_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_searching_players)
}

// optional uint32 total_near_you_searching_players = 14;
inline bool CMsgMatchmakingProgress::has_total_near_you_searching_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_searching_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_searching_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_searching_players() {
  total_near_you_searching_players_ = 0u;
  clear_has_total_near_you_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_searching_players)
  return total_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_searching_players(::google::protobuf::uint32 value) {
  set_has_total_near_you_searching_players();
  total_near_you_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_searching_players)
}

// optional uint32 matching_worldwide_active_players = 15;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_active_players() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_active_players() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_active_players() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_active_players() {
  matching_worldwide_active_players_ = 0u;
  clear_has_matching_worldwide_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_active_players)
  return matching_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_active_players(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_active_players();
  matching_worldwide_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_active_players)
}

// optional uint32 matching_near_you_active_players = 16;
inline bool CMsgMatchmakingProgress::has_matching_near_you_active_players() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_active_players() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_active_players() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_active_players() {
  matching_near_you_active_players_ = 0u;
  clear_has_matching_near_you_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_active_players)
  return matching_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_active_players(::google::protobuf::uint32 value) {
  set_has_matching_near_you_active_players();
  matching_near_you_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_active_players)
}

// optional uint32 total_worldwide_active_players = 17;
inline bool CMsgMatchmakingProgress::has_total_worldwide_active_players() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_active_players() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_active_players() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_active_players() {
  total_worldwide_active_players_ = 0u;
  clear_has_total_worldwide_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_active_players)
  return total_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_active_players(::google::protobuf::uint32 value) {
  set_has_total_worldwide_active_players();
  total_worldwide_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_active_players)
}

// optional uint32 total_near_you_active_players = 18;
inline bool CMsgMatchmakingProgress::has_total_near_you_active_players() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_active_players() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_active_players() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_active_players() {
  total_near_you_active_players_ = 0u;
  clear_has_total_near_you_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_active_players)
  return total_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_active_players(::google::protobuf::uint32 value) {
  set_has_total_near_you_active_players();
  total_near_you_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_active_players)
}

// optional uint32 matching_worldwide_empty_gameservers = 19;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_empty_gameservers() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_empty_gameservers() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_empty_gameservers() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_empty_gameservers() {
  matching_worldwide_empty_gameservers_ = 0u;
  clear_has_matching_worldwide_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_empty_gameservers)
  return matching_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_empty_gameservers();
  matching_worldwide_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_empty_gameservers)
}

// optional uint32 matching_near_you_empty_gameservers = 20;
inline bool CMsgMatchmakingProgress::has_matching_near_you_empty_gameservers() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_empty_gameservers() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_empty_gameservers() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_empty_gameservers() {
  matching_near_you_empty_gameservers_ = 0u;
  clear_has_matching_near_you_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_empty_gameservers)
  return matching_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_matching_near_you_empty_gameservers();
  matching_near_you_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_empty_gameservers)
}

// optional uint32 total_worldwide_empty_gameservers = 21;
inline bool CMsgMatchmakingProgress::has_total_worldwide_empty_gameservers() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_empty_gameservers() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_empty_gameservers() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_empty_gameservers() {
  total_worldwide_empty_gameservers_ = 0u;
  clear_has_total_worldwide_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_empty_gameservers)
  return total_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_total_worldwide_empty_gameservers();
  total_worldwide_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_empty_gameservers)
}

// optional uint32 total_near_you_empty_gameservers = 22;
inline bool CMsgMatchmakingProgress::has_total_near_you_empty_gameservers() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_empty_gameservers() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_empty_gameservers() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_empty_gameservers() {
  total_near_you_empty_gameservers_ = 0u;
  clear_has_total_near_you_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_empty_gameservers)
  return total_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_total_near_you_empty_gameservers();
  total_near_you_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_empty_gameservers)
}

// optional uint32 urgency_pct = 1;
inline bool CMsgMatchmakingProgress::has_urgency_pct() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_urgency_pct() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgMatchmakingProgress::clear_has_urgency_pct() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgMatchmakingProgress::clear_urgency_pct() {
  urgency_pct_ = 0u;
  clear_has_urgency_pct();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::urgency_pct() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.urgency_pct)
  return urgency_pct_;
}
inline void CMsgMatchmakingProgress::set_urgency_pct(::google::protobuf::uint32 value) {
  set_has_urgency_pct();
  urgency_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.urgency_pct)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Item

// optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1;
inline bool CMsgMvMVictoryInfo_Item::has_grant_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_grant_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_grant_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo_Item::clear_grant_reason() {
  grant_reason_ = 0;
  clear_has_grant_reason();
}
inline ::CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_Item::grant_reason() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.grant_reason)
  return static_cast< ::CMsgMvMVictoryInfo_GrantReason >(grant_reason_);
}
inline void CMsgMvMVictoryInfo_Item::set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value) {
  assert(::CMsgMvMVictoryInfo_GrantReason_IsValid(value));
  set_has_grant_reason();
  grant_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.grant_reason)
}

// optional bytes item_data = 2;
inline bool CMsgMvMVictoryInfo_Item::has_item_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_item_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_item_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo_Item::clear_item_data() {
  if (item_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_->clear();
  }
  clear_has_item_data();
}
inline const ::std::string& CMsgMvMVictoryInfo_Item::item_data() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.item_data)
  return *item_data_;
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const ::std::string& value) {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.item_data)
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const char* value) {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.Item.item_data)
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const void* value, size_t size) {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.Item.item_data)
}
inline ::std::string* CMsgMvMVictoryInfo_Item::mutable_item_data() {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.Item.item_data)
  return item_data_;
}
inline ::std::string* CMsgMvMVictoryInfo_Item::release_item_data() {
  clear_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_data_;
    item_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictoryInfo_Item::set_allocated_item_data(::std::string* item_data) {
  if (item_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_data_;
  }
  if (item_data) {
    set_has_item_data();
    item_data_ = item_data;
  } else {
    clear_has_item_data();
    item_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.Item.item_data)
}

// optional fixed64 squad_surplus_claimer_steam_id = 3;
inline bool CMsgMvMVictoryInfo_Item::has_squad_surplus_claimer_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_squad_surplus_claimer_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_squad_surplus_claimer_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo_Item::clear_squad_surplus_claimer_steam_id() {
  squad_surplus_claimer_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_squad_surplus_claimer_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Item::squad_surplus_claimer_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.squad_surplus_claimer_steam_id)
  return squad_surplus_claimer_steam_id_;
}
inline void CMsgMvMVictoryInfo_Item::set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value) {
  set_has_squad_surplus_claimer_steam_id();
  squad_surplus_claimer_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.squad_surplus_claimer_steam_id)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictoryInfo_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.steam_id)
  return steam_id_;
}
inline void CMsgMvMVictoryInfo_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.steam_id)
}

// optional bool badge_granted = 3;
inline bool CMsgMvMVictoryInfo_Player::has_badge_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_granted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_granted() {
  badge_granted_ = false;
  clear_has_badge_granted();
}
inline bool CMsgMvMVictoryInfo_Player::badge_granted() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_granted)
  return badge_granted_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_granted(bool value) {
  set_has_badge_granted();
  badge_granted_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_granted)
}

// optional bool badge_progress_updated = 4;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_progress_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_progress_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_updated() {
  badge_progress_updated_ = false;
  clear_has_badge_progress_updated();
}
inline bool CMsgMvMVictoryInfo_Player::badge_progress_updated() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_progress_updated)
  return badge_progress_updated_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_updated(bool value) {
  set_has_badge_progress_updated();
  badge_progress_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_progress_updated)
}

// optional bool badge_leveled = 5;
inline bool CMsgMvMVictoryInfo_Player::has_badge_leveled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_leveled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_leveled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_leveled() {
  badge_leveled_ = false;
  clear_has_badge_leveled();
}
inline bool CMsgMvMVictoryInfo_Player::badge_leveled() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_leveled)
  return badge_leveled_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_leveled(bool value) {
  set_has_badge_leveled();
  badge_leveled_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_leveled)
}

// optional uint32 badge_level = 6;
inline bool CMsgMvMVictoryInfo_Player::has_badge_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_level() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_level)
  return badge_level_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_level)
}

// optional uint32 badge_progress_bits = 7;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_bits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_progress_bits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_progress_bits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_bits() {
  badge_progress_bits_ = 0u;
  clear_has_badge_progress_bits();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_progress_bits() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_progress_bits)
  return badge_progress_bits_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_bits(::google::protobuf::uint32 value) {
  set_has_badge_progress_bits();
  badge_progress_bits_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_progress_bits)
}

// repeated .CMsgMvMVictoryInfo.Item items = 8;
inline int CMsgMvMVictoryInfo_Player::items_size() const {
  return items_.size();
}
inline void CMsgMvMVictoryInfo_Player::clear_items() {
  items_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Item& CMsgMvMVictoryInfo_Player::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.items)
  return items_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.Player.items)
  return items_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::add_items() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictoryInfo.Player.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
CMsgMvMVictoryInfo_Player::items() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictoryInfo.Player.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
CMsgMvMVictoryInfo_Player::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictoryInfo.Player.items)
  return &items_;
}

// optional bool voucher_missing = 9;
inline bool CMsgMvMVictoryInfo_Player::has_voucher_missing() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_voucher_missing() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_voucher_missing() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMvMVictoryInfo_Player::clear_voucher_missing() {
  voucher_missing_ = false;
  clear_has_voucher_missing();
}
inline bool CMsgMvMVictoryInfo_Player::voucher_missing() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.voucher_missing)
  return voucher_missing_;
}
inline void CMsgMvMVictoryInfo_Player::set_voucher_missing(bool value) {
  set_has_voucher_missing();
  voucher_missing_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.voucher_missing)
}

// optional uint32 badge_points = 10;
inline bool CMsgMvMVictoryInfo_Player::has_badge_points() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_points() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_points() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_points() {
  badge_points_ = 0u;
  clear_has_badge_points();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_points() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_points)
  return badge_points_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_points(::google::protobuf::uint32 value) {
  set_has_badge_points();
  badge_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_points)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo

// repeated .CMsgMvMVictoryInfo.Player players = 1;
inline int CMsgMvMVictoryInfo::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictoryInfo::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Player& CMsgMvMVictoryInfo::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.players)
  return players_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.players)
  return players_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictoryInfo.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
CMsgMvMVictoryInfo::players() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictoryInfo.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
CMsgMvMVictoryInfo::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictoryInfo.players)
  return &players_;
}

// optional string tour_name = 2;
inline bool CMsgMvMVictoryInfo::has_tour_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo::set_has_tour_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo::clear_has_tour_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo::clear_tour_name() {
  if (tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_->clear();
  }
  clear_has_tour_name();
}
inline const ::std::string& CMsgMvMVictoryInfo::tour_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.tour_name)
  return *tour_name_;
}
inline void CMsgMvMVictoryInfo::set_tour_name(const ::std::string& value) {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.tour_name)
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value) {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.tour_name)
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value, size_t size) {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.tour_name)
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_tour_name() {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.tour_name)
  return tour_name_;
}
inline ::std::string* CMsgMvMVictoryInfo::release_tour_name() {
  clear_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tour_name_;
    tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictoryInfo::set_allocated_tour_name(::std::string* tour_name) {
  if (tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tour_name_;
  }
  if (tour_name) {
    set_has_tour_name();
    tour_name_ = tour_name;
  } else {
    clear_has_tour_name();
    tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.tour_name)
}

// optional string mission_name = 3;
inline bool CMsgMvMVictoryInfo::has_mission_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo::set_has_mission_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo::clear_mission_name() {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_->clear();
  }
  clear_has_mission_name();
}
inline const ::std::string& CMsgMvMVictoryInfo::mission_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.mission_name)
  return *mission_name_;
}
inline void CMsgMvMVictoryInfo::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.mission_name)
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.mission_name)
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.mission_name)
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_mission_name() {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.mission_name)
  return mission_name_;
}
inline ::std::string* CMsgMvMVictoryInfo::release_mission_name() {
  clear_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mission_name_;
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictoryInfo::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mission_name_;
  }
  if (mission_name) {
    set_has_mission_name();
    mission_name_ = mission_name;
  } else {
    clear_has_mission_name();
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.mission_name)
}

// -------------------------------------------------------------------

// CGCMsgTFHelloResponse

// optional uint32 version_check = 1;
inline bool CGCMsgTFHelloResponse::has_version_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFHelloResponse::set_has_version_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFHelloResponse::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFHelloResponse::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_check)
  return version_check_;
}
inline void CGCMsgTFHelloResponse::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_check)
}

// repeated uint64 version_checksum = 2;
inline int CGCMsgTFHelloResponse::version_checksum_size() const {
  return version_checksum_.size();
}
inline void CGCMsgTFHelloResponse::clear_version_checksum() {
  version_checksum_.Clear();
}
inline ::google::protobuf::uint64 CGCMsgTFHelloResponse::version_checksum(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_checksum)
  return version_checksum_.Get(index);
}
inline void CGCMsgTFHelloResponse::set_version_checksum(int index, ::google::protobuf::uint64 value) {
  version_checksum_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_checksum)
}
inline void CGCMsgTFHelloResponse::add_version_checksum(::google::protobuf::uint64 value) {
  version_checksum_.Add(value);
  // @@protoc_insertion_point(field_add:CGCMsgTFHelloResponse.version_checksum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CGCMsgTFHelloResponse::version_checksum() const {
  // @@protoc_insertion_point(field_list:CGCMsgTFHelloResponse.version_checksum)
  return version_checksum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CGCMsgTFHelloResponse::mutable_version_checksum() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgTFHelloResponse.version_checksum)
  return &version_checksum_;
}

// optional uint32 version_verbose = 3;
inline bool CGCMsgTFHelloResponse::has_version_verbose() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFHelloResponse::set_has_version_verbose() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFHelloResponse::clear_has_version_verbose() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFHelloResponse::clear_version_verbose() {
  version_verbose_ = 0u;
  clear_has_version_verbose();
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_verbose() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_verbose)
  return version_verbose_;
}
inline void CGCMsgTFHelloResponse::set_version_verbose(::google::protobuf::uint32 value) {
  set_has_version_verbose();
  version_verbose_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_verbose)
}

// -------------------------------------------------------------------

// CGCMsgTFSync

// optional bytes version_checksum = 1;
inline bool CGCMsgTFSync::has_version_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFSync::set_has_version_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFSync::clear_has_version_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFSync::clear_version_checksum() {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_->clear();
  }
  clear_has_version_checksum();
}
inline const ::std::string& CGCMsgTFSync::version_checksum() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_checksum)
  return *version_checksum_;
}
inline void CGCMsgTFSync::set_version_checksum(const ::std::string& value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_checksum)
}
inline void CGCMsgTFSync::set_version_checksum(const char* value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSync.version_checksum)
}
inline void CGCMsgTFSync::set_version_checksum(const void* value, size_t size) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSync.version_checksum)
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum() {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSync.version_checksum)
  return version_checksum_;
}
inline ::std::string* CGCMsgTFSync::release_version_checksum() {
  clear_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_;
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSync::set_allocated_version_checksum(::std::string* version_checksum) {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_;
  }
  if (version_checksum) {
    set_has_version_checksum();
    version_checksum_ = version_checksum;
  } else {
    clear_has_version_checksum();
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSync.version_checksum)
}

// optional uint32 version_check = 2;
inline bool CGCMsgTFSync::has_version_check() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFSync::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFSync::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check)
  return version_check_;
}
inline void CGCMsgTFSync::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check)
}

// optional uint32 version_check_ex = 3;
inline bool CGCMsgTFSync::has_version_check_ex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check_ex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFSync::clear_has_version_check_ex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFSync::clear_version_check_ex() {
  version_check_ex_ = 0u;
  clear_has_version_check_ex();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check_ex)
  return version_check_ex_;
}
inline void CGCMsgTFSync::set_version_check_ex(::google::protobuf::uint32 value) {
  set_has_version_check_ex();
  version_check_ex_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check_ex)
}

// optional uint32 version_check_ex2 = 4;
inline bool CGCMsgTFSync::has_version_check_ex2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check_ex2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgTFSync::clear_has_version_check_ex2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgTFSync::clear_version_check_ex2() {
  version_check_ex2_ = 0u;
  clear_has_version_check_ex2();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex2() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check_ex2)
  return version_check_ex2_;
}
inline void CGCMsgTFSync::set_version_check_ex2(::google::protobuf::uint32 value) {
  set_has_version_check_ex2();
  version_check_ex2_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check_ex2)
}

// optional bytes version_checksum_ex = 5;
inline bool CGCMsgTFSync::has_version_checksum_ex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgTFSync::set_has_version_checksum_ex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgTFSync::clear_has_version_checksum_ex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgTFSync::clear_version_checksum_ex() {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_->clear();
  }
  clear_has_version_checksum_ex();
}
inline const ::std::string& CGCMsgTFSync::version_checksum_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_checksum_ex)
  return *version_checksum_ex_;
}
inline void CGCMsgTFSync::set_version_checksum_ex(const ::std::string& value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_checksum_ex)
}
inline void CGCMsgTFSync::set_version_checksum_ex(const char* value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSync.version_checksum_ex)
}
inline void CGCMsgTFSync::set_version_checksum_ex(const void* value, size_t size) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSync.version_checksum_ex)
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum_ex() {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSync.version_checksum_ex)
  return version_checksum_ex_;
}
inline ::std::string* CGCMsgTFSync::release_version_checksum_ex() {
  clear_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_ex_;
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSync::set_allocated_version_checksum_ex(::std::string* version_checksum_ex) {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_ex_;
  }
  if (version_checksum_ex) {
    set_has_version_checksum_ex();
    version_checksum_ex_ = version_checksum_ex;
  } else {
    clear_has_version_checksum_ex();
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSync.version_checksum_ex)
}

// -------------------------------------------------------------------

// CGCMsgTFSyncEx

// optional string version_checksum = 1;
inline bool CGCMsgTFSyncEx::has_version_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFSyncEx::clear_has_version_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFSyncEx::clear_version_checksum() {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_->clear();
  }
  clear_has_version_checksum();
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_checksum)
  return *version_checksum_;
}
inline void CGCMsgTFSyncEx::set_version_checksum(const ::std::string& value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_checksum)
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSyncEx.version_checksum)
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value, size_t size) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSyncEx.version_checksum)
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum() {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSyncEx.version_checksum)
  return version_checksum_;
}
inline ::std::string* CGCMsgTFSyncEx::release_version_checksum() {
  clear_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_;
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSyncEx::set_allocated_version_checksum(::std::string* version_checksum) {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_;
  }
  if (version_checksum) {
    set_has_version_checksum();
    version_checksum_ = version_checksum;
  } else {
    clear_has_version_checksum();
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSyncEx.version_checksum)
}

// optional bytes version_checksum_ex = 2;
inline bool CGCMsgTFSyncEx::has_version_checksum_ex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_checksum_ex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFSyncEx::clear_has_version_checksum_ex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFSyncEx::clear_version_checksum_ex() {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_->clear();
  }
  clear_has_version_checksum_ex();
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_checksum_ex)
  return *version_checksum_ex_;
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const ::std::string& value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_checksum_ex)
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const char* value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSyncEx.version_checksum_ex)
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const void* value, size_t size) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSyncEx.version_checksum_ex)
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum_ex() {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSyncEx.version_checksum_ex)
  return version_checksum_ex_;
}
inline ::std::string* CGCMsgTFSyncEx::release_version_checksum_ex() {
  clear_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_ex_;
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSyncEx::set_allocated_version_checksum_ex(::std::string* version_checksum_ex) {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_ex_;
  }
  if (version_checksum_ex) {
    set_has_version_checksum_ex();
    version_checksum_ex_ = version_checksum_ex;
  } else {
    clear_has_version_checksum_ex();
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSyncEx.version_checksum_ex)
}

// optional uint32 version_check = 3;
inline bool CGCMsgTFSyncEx::has_version_check() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_check() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFSyncEx::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFSyncEx::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFSyncEx::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_check)
  return version_check_;
}
inline void CGCMsgTFSyncEx::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_check)
}

// -------------------------------------------------------------------

// CMsgMvMVictory_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictory_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictory_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictory_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictory_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictory_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.Player.steam_id)
  return steam_id_;
}
inline void CMsgMvMVictory_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.Player.steam_id)
}

// optional bool squad_surplus = 2;
inline bool CMsgMvMVictory_Player::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictory_Player::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictory_Player::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictory_Player::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CMsgMvMVictory_Player::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.Player.squad_surplus)
  return squad_surplus_;
}
inline void CMsgMvMVictory_Player::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.Player.squad_surplus)
}

// -------------------------------------------------------------------

// CMsgMvMVictory

// optional uint32 legacy_mission_index = 1;
inline bool CMsgMvMVictory::has_legacy_mission_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictory::set_has_legacy_mission_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictory::clear_has_legacy_mission_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictory::clear_legacy_mission_index() {
  legacy_mission_index_ = 0u;
  clear_has_legacy_mission_index();
}
inline ::google::protobuf::uint32 CMsgMvMVictory::legacy_mission_index() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.legacy_mission_index)
  return legacy_mission_index_;
}
inline void CMsgMvMVictory::set_legacy_mission_index(::google::protobuf::uint32 value) {
  set_has_legacy_mission_index();
  legacy_mission_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.legacy_mission_index)
}

// optional string tour_name_mannup = 5;
inline bool CMsgMvMVictory::has_tour_name_mannup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictory::set_has_tour_name_mannup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictory::clear_has_tour_name_mannup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictory::clear_tour_name_mannup() {
  if (tour_name_mannup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_->clear();
  }
  clear_has_tour_name_mannup();
}
inline const ::std::string& CMsgMvMVictory::tour_name_mannup() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.tour_name_mannup)
  return *tour_name_mannup_;
}
inline void CMsgMvMVictory::set_tour_name_mannup(const ::std::string& value) {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.tour_name_mannup)
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value) {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictory.tour_name_mannup)
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value, size_t size) {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictory.tour_name_mannup)
}
inline ::std::string* CMsgMvMVictory::mutable_tour_name_mannup() {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.tour_name_mannup)
  return tour_name_mannup_;
}
inline ::std::string* CMsgMvMVictory::release_tour_name_mannup() {
  clear_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tour_name_mannup_;
    tour_name_mannup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictory::set_allocated_tour_name_mannup(::std::string* tour_name_mannup) {
  if (tour_name_mannup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tour_name_mannup_;
  }
  if (tour_name_mannup) {
    set_has_tour_name_mannup();
    tour_name_mannup_ = tour_name_mannup;
  } else {
    clear_has_tour_name_mannup();
    tour_name_mannup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictory.tour_name_mannup)
}

// optional string mission_name = 6;
inline bool CMsgMvMVictory::has_mission_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictory::set_has_mission_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictory::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictory::clear_mission_name() {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_->clear();
  }
  clear_has_mission_name();
}
inline const ::std::string& CMsgMvMVictory::mission_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.mission_name)
  return *mission_name_;
}
inline void CMsgMvMVictory::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.mission_name)
}
inline void CMsgMvMVictory::set_mission_name(const char* value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictory.mission_name)
}
inline void CMsgMvMVictory::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictory.mission_name)
}
inline ::std::string* CMsgMvMVictory::mutable_mission_name() {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.mission_name)
  return mission_name_;
}
inline ::std::string* CMsgMvMVictory::release_mission_name() {
  clear_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mission_name_;
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictory::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mission_name_;
  }
  if (mission_name) {
    set_has_mission_name();
    mission_name_ = mission_name;
  } else {
    clear_has_mission_name();
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictory.mission_name)
}

// repeated .CMsgMvMVictory.Player players = 2;
inline int CMsgMvMVictory::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictory::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictory_Player& CMsgMvMVictory::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.players)
  return players_.Get(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.players)
  return players_.Mutable(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictory.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
CMsgMvMVictory::players() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictory.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
CMsgMvMVictory::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictory.players)
  return &players_;
}

// optional uint64 lobby_id = 3;
inline bool CMsgMvMVictory::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMvMVictory::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMvMVictory::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMvMVictory::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictory::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.lobby_id)
  return lobby_id_;
}
inline void CMsgMvMVictory::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.lobby_id)
}

// optional fixed32 event_time = 4;
inline bool CMsgMvMVictory::has_event_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMvMVictory::set_has_event_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMvMVictory::clear_has_event_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMvMVictory::clear_event_time() {
  event_time_ = 0u;
  clear_has_event_time();
}
inline ::google::protobuf::uint32 CMsgMvMVictory::event_time() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.event_time)
  return event_time_;
}
inline void CMsgMvMVictory::set_event_time(::google::protobuf::uint32 value) {
  set_has_event_time();
  event_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.event_time)
}

// -------------------------------------------------------------------

// CMsgMvMMannUpVictoryReply

// -------------------------------------------------------------------

// CMsgGameServerKickingLobby

// optional uint64 lobby_id = 3;
inline bool CMsgGameServerKickingLobby::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerKickingLobby::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerKickingLobby::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerKickingLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.lobby_id)
  return lobby_id_;
}
inline void CMsgGameServerKickingLobby::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.lobby_id)
}

// optional uint64 match_id = 4;
inline bool CMsgGameServerKickingLobby::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerKickingLobby::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerKickingLobby::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerKickingLobby::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.match_id)
  return match_id_;
}
inline void CMsgGameServerKickingLobby::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.match_id)
}

// -------------------------------------------------------------------

// CMsgGameServerKickingLobbyResponse

// -------------------------------------------------------------------

// CMsgLeaveGameAndPrepareToJoinParty

// optional fixed64 party_id = 1;
inline bool CMsgLeaveGameAndPrepareToJoinParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgLeaveGameAndPrepareToJoinParty::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeaveGameAndPrepareToJoinParty.party_id)
  return party_id_;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaveGameAndPrepareToJoinParty.party_id)
}

// -------------------------------------------------------------------

// CMsgPlayerLeftMatch

// optional fixed64 steam_id = 1;
inline bool CMsgPlayerLeftMatch::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPlayerLeftMatch::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPlayerLeftMatch::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.steam_id)
  return steam_id_;
}
inline void CMsgPlayerLeftMatch::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.steam_id)
}

// optional .TFMatchLeaveReason leave_reason = 2;
inline bool CMsgPlayerLeftMatch::has_leave_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_leave_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPlayerLeftMatch::clear_has_leave_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPlayerLeftMatch::clear_leave_reason() {
  leave_reason_ = 0;
  clear_has_leave_reason();
}
inline ::TFMatchLeaveReason CMsgPlayerLeftMatch::leave_reason() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.leave_reason)
  return static_cast< ::TFMatchLeaveReason >(leave_reason_);
}
inline void CMsgPlayerLeftMatch::set_leave_reason(::TFMatchLeaveReason value) {
  assert(::TFMatchLeaveReason_IsValid(value));
  set_has_leave_reason();
  leave_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.leave_reason)
}

// optional bool was_abandon = 3;
inline bool CMsgPlayerLeftMatch::has_was_abandon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_was_abandon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPlayerLeftMatch::clear_has_was_abandon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPlayerLeftMatch::clear_was_abandon() {
  was_abandon_ = false;
  clear_has_was_abandon();
}
inline bool CMsgPlayerLeftMatch::was_abandon() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.was_abandon)
  return was_abandon_;
}
inline void CMsgPlayerLeftMatch::set_was_abandon(bool value) {
  set_has_was_abandon();
  was_abandon_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.was_abandon)
}

// optional uint64 lobby_id = 4;
inline bool CMsgPlayerLeftMatch::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPlayerLeftMatch::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPlayerLeftMatch::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.lobby_id)
  return lobby_id_;
}
inline void CMsgPlayerLeftMatch::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.lobby_id)
}

// optional uint64 match_id = 5;
inline bool CMsgPlayerLeftMatch::has_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPlayerLeftMatch::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPlayerLeftMatch::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.match_id)
  return match_id_;
}
inline void CMsgPlayerLeftMatch::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.match_id)
}

// repeated .CMsgTFXPSource xp_breakdown = 6;
inline int CMsgPlayerLeftMatch::xp_breakdown_size() const {
  return xp_breakdown_.size();
}
inline void CMsgPlayerLeftMatch::clear_xp_breakdown() {
  xp_breakdown_.Clear();
}
inline const ::CMsgTFXPSource& CMsgPlayerLeftMatch::xp_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_.Get(index);
}
inline ::CMsgTFXPSource* CMsgPlayerLeftMatch::mutable_xp_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_.Mutable(index);
}
inline ::CMsgTFXPSource* CMsgPlayerLeftMatch::add_xp_breakdown() {
  // @@protoc_insertion_point(field_add:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
CMsgPlayerLeftMatch::xp_breakdown() const {
  // @@protoc_insertion_point(field_list:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
CMsgPlayerLeftMatch::mutable_xp_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPlayerLeftMatch.xp_breakdown)
  return &xp_breakdown_;
}

// -------------------------------------------------------------------

// CMsgPlayerLeftMatchResponse

// -------------------------------------------------------------------

// CMsgProcessMatchVoteKick_Vote

// optional fixed64 steam_id = 1;
inline bool CMsgProcessMatchVoteKick_Vote::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProcessMatchVoteKick_Vote::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgProcessMatchVoteKick_Vote::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgProcessMatchVoteKick_Vote::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgProcessMatchVoteKick_Vote::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.Vote.steam_id)
  return steam_id_;
}
inline void CMsgProcessMatchVoteKick_Vote::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.Vote.steam_id)
}

// optional bool vote_yay = 2;
inline bool CMsgProcessMatchVoteKick_Vote::has_vote_yay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProcessMatchVoteKick_Vote::set_has_vote_yay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgProcessMatchVoteKick_Vote::clear_has_vote_yay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgProcessMatchVoteKick_Vote::clear_vote_yay() {
  vote_yay_ = false;
  clear_has_vote_yay();
}
inline bool CMsgProcessMatchVoteKick_Vote::vote_yay() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.Vote.vote_yay)
  return vote_yay_;
}
inline void CMsgProcessMatchVoteKick_Vote::set_vote_yay(bool value) {
  set_has_vote_yay();
  vote_yay_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.Vote.vote_yay)
}

// -------------------------------------------------------------------

// CMsgProcessMatchVoteKick

// optional fixed64 match_id = 1;
inline bool CMsgProcessMatchVoteKick::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProcessMatchVoteKick::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgProcessMatchVoteKick::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgProcessMatchVoteKick::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgProcessMatchVoteKick::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.match_id)
  return match_id_;
}
inline void CMsgProcessMatchVoteKick::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.match_id)
}

// optional fixed64 initiator_steam_id = 2;
inline bool CMsgProcessMatchVoteKick::has_initiator_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProcessMatchVoteKick::set_has_initiator_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgProcessMatchVoteKick::clear_has_initiator_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgProcessMatchVoteKick::clear_initiator_steam_id() {
  initiator_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_initiator_steam_id();
}
inline ::google::protobuf::uint64 CMsgProcessMatchVoteKick::initiator_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.initiator_steam_id)
  return initiator_steam_id_;
}
inline void CMsgProcessMatchVoteKick::set_initiator_steam_id(::google::protobuf::uint64 value) {
  set_has_initiator_steam_id();
  initiator_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.initiator_steam_id)
}

// optional fixed64 target_steam_id = 3;
inline bool CMsgProcessMatchVoteKick::has_target_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProcessMatchVoteKick::set_has_target_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgProcessMatchVoteKick::clear_has_target_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgProcessMatchVoteKick::clear_target_steam_id() {
  target_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_steam_id();
}
inline ::google::protobuf::uint64 CMsgProcessMatchVoteKick::target_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.target_steam_id)
  return target_steam_id_;
}
inline void CMsgProcessMatchVoteKick::set_target_steam_id(::google::protobuf::uint64 value) {
  set_has_target_steam_id();
  target_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.target_steam_id)
}

// optional .TFVoteKickReason reason = 4;
inline bool CMsgProcessMatchVoteKick::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProcessMatchVoteKick::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgProcessMatchVoteKick::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgProcessMatchVoteKick::clear_reason() {
  reason_ = -1;
  clear_has_reason();
}
inline ::TFVoteKickReason CMsgProcessMatchVoteKick::reason() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.reason)
  return static_cast< ::TFVoteKickReason >(reason_);
}
inline void CMsgProcessMatchVoteKick::set_reason(::TFVoteKickReason value) {
  assert(::TFVoteKickReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.reason)
}

// repeated .CMsgProcessMatchVoteKick.Vote votes = 5;
inline int CMsgProcessMatchVoteKick::votes_size() const {
  return votes_.size();
}
inline void CMsgProcessMatchVoteKick::clear_votes() {
  votes_.Clear();
}
inline const ::CMsgProcessMatchVoteKick_Vote& CMsgProcessMatchVoteKick::votes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.votes)
  return votes_.Get(index);
}
inline ::CMsgProcessMatchVoteKick_Vote* CMsgProcessMatchVoteKick::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgProcessMatchVoteKick.votes)
  return votes_.Mutable(index);
}
inline ::CMsgProcessMatchVoteKick_Vote* CMsgProcessMatchVoteKick::add_votes() {
  // @@protoc_insertion_point(field_add:CMsgProcessMatchVoteKick.votes)
  return votes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgProcessMatchVoteKick_Vote >&
CMsgProcessMatchVoteKick::votes() const {
  // @@protoc_insertion_point(field_list:CMsgProcessMatchVoteKick.votes)
  return votes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgProcessMatchVoteKick_Vote >*
CMsgProcessMatchVoteKick::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgProcessMatchVoteKick.votes)
  return &votes_;
}

// optional bool default_pass = 6;
inline bool CMsgProcessMatchVoteKick::has_default_pass() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgProcessMatchVoteKick::set_has_default_pass() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgProcessMatchVoteKick::clear_has_default_pass() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgProcessMatchVoteKick::clear_default_pass() {
  default_pass_ = false;
  clear_has_default_pass();
}
inline bool CMsgProcessMatchVoteKick::default_pass() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKick.default_pass)
  return default_pass_;
}
inline void CMsgProcessMatchVoteKick::set_default_pass(bool value) {
  set_has_default_pass();
  default_pass_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKick.default_pass)
}

// -------------------------------------------------------------------

// CMsgProcessMatchVoteKickResponse

// optional bool rip = 1;
inline bool CMsgProcessMatchVoteKickResponse::has_rip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProcessMatchVoteKickResponse::set_has_rip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgProcessMatchVoteKickResponse::clear_has_rip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgProcessMatchVoteKickResponse::clear_rip() {
  rip_ = false;
  clear_has_rip();
}
inline bool CMsgProcessMatchVoteKickResponse::rip() const {
  // @@protoc_insertion_point(field_get:CMsgProcessMatchVoteKickResponse.rip)
  return rip_;
}
inline void CMsgProcessMatchVoteKickResponse::set_rip(bool value) {
  set_has_rip();
  rip_ = value;
  // @@protoc_insertion_point(field_set:CMsgProcessMatchVoteKickResponse.rip)
}

// -------------------------------------------------------------------

// CMsgHalloween_ServerBossEvent

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_ServerBossEvent::has_event_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_event_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_event_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHalloween_ServerBossEvent::clear_event_counter() {
  event_counter_ = 0u;
  clear_has_event_counter();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_counter() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.event_counter)
  return event_counter_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_counter(::google::protobuf::uint32 value) {
  set_has_event_counter();
  event_counter_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.event_counter)
}

// optional uint32 timestamp = 2;
inline bool CMsgHalloween_ServerBossEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHalloween_ServerBossEvent::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.timestamp)
  return timestamp_;
}
inline void CMsgHalloween_ServerBossEvent::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.timestamp)
}

// optional uint32 boss_type = 3;
inline bool CMsgHalloween_ServerBossEvent::has_boss_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_boss_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_boss_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_type() {
  boss_type_ = 0u;
  clear_has_boss_type();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_type() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.boss_type)
  return boss_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_type(::google::protobuf::uint32 value) {
  set_has_boss_type();
  boss_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.boss_type)
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_ServerBossEvent::has_boss_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_boss_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_boss_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_level() {
  boss_level_ = 0u;
  clear_has_boss_level();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_level() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.boss_level)
  return boss_level_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_level(::google::protobuf::uint32 value) {
  set_has_boss_level();
  boss_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.boss_level)
}

// optional uint32 event_type = 5;
inline bool CMsgHalloween_ServerBossEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHalloween_ServerBossEvent::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.event_type)
  return event_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.event_type)
}

// optional uint32 players_involved = 6;
inline bool CMsgHalloween_ServerBossEvent::has_players_involved() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_players_involved() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_players_involved() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHalloween_ServerBossEvent::clear_players_involved() {
  players_involved_ = 0u;
  clear_has_players_involved();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::players_involved() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.players_involved)
  return players_involved_;
}
inline void CMsgHalloween_ServerBossEvent::set_players_involved(::google::protobuf::uint32 value) {
  set_has_players_involved();
  players_involved_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.players_involved)
}

// optional float elapsed_time = 7;
inline bool CMsgHalloween_ServerBossEvent::has_elapsed_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_elapsed_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_elapsed_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHalloween_ServerBossEvent::clear_elapsed_time() {
  elapsed_time_ = 0;
  clear_has_elapsed_time();
}
inline float CMsgHalloween_ServerBossEvent::elapsed_time() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.elapsed_time)
  return elapsed_time_;
}
inline void CMsgHalloween_ServerBossEvent::set_elapsed_time(float value) {
  set_has_elapsed_time();
  elapsed_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.elapsed_time)
}

// -------------------------------------------------------------------

// CMsgHalloween_Merasmus2012

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_Merasmus2012::has_event_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_event_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_event_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHalloween_Merasmus2012::clear_event_counter() {
  event_counter_ = 0u;
  clear_has_event_counter();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::event_counter() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.event_counter)
  return event_counter_;
}
inline void CMsgHalloween_Merasmus2012::set_event_counter(::google::protobuf::uint32 value) {
  set_has_event_counter();
  event_counter_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.event_counter)
}

// optional fixed32 time_submitted = 2;
inline bool CMsgHalloween_Merasmus2012::has_time_submitted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_time_submitted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_time_submitted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHalloween_Merasmus2012::clear_time_submitted() {
  time_submitted_ = 0u;
  clear_has_time_submitted();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::time_submitted() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.time_submitted)
  return time_submitted_;
}
inline void CMsgHalloween_Merasmus2012::set_time_submitted(::google::protobuf::uint32 value) {
  set_has_time_submitted();
  time_submitted_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.time_submitted)
}

// optional bool is_valve_server = 3;
inline bool CMsgHalloween_Merasmus2012::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHalloween_Merasmus2012::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgHalloween_Merasmus2012::is_valve_server() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.is_valve_server)
  return is_valve_server_;
}
inline void CMsgHalloween_Merasmus2012::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.is_valve_server)
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_Merasmus2012::has_boss_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_boss_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_boss_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHalloween_Merasmus2012::clear_boss_level() {
  boss_level_ = 0u;
  clear_has_boss_level();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::boss_level() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.boss_level)
  return boss_level_;
}
inline void CMsgHalloween_Merasmus2012::set_boss_level(::google::protobuf::uint32 value) {
  set_has_boss_level();
  boss_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.boss_level)
}

// optional uint32 spawned_health = 5;
inline bool CMsgHalloween_Merasmus2012::has_spawned_health() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_spawned_health() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_spawned_health() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHalloween_Merasmus2012::clear_spawned_health() {
  spawned_health_ = 0u;
  clear_has_spawned_health();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spawned_health() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.spawned_health)
  return spawned_health_;
}
inline void CMsgHalloween_Merasmus2012::set_spawned_health(::google::protobuf::uint32 value) {
  set_has_spawned_health();
  spawned_health_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.spawned_health)
}

// optional uint32 remaining_health = 6;
inline bool CMsgHalloween_Merasmus2012::has_remaining_health() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_remaining_health() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_remaining_health() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHalloween_Merasmus2012::clear_remaining_health() {
  remaining_health_ = 0u;
  clear_has_remaining_health();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::remaining_health() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.remaining_health)
  return remaining_health_;
}
inline void CMsgHalloween_Merasmus2012::set_remaining_health(::google::protobuf::uint32 value) {
  set_has_remaining_health();
  remaining_health_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.remaining_health)
}

// optional uint32 life_time = 7;
inline bool CMsgHalloween_Merasmus2012::has_life_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_life_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_life_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHalloween_Merasmus2012::clear_life_time() {
  life_time_ = 0u;
  clear_has_life_time();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::life_time() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.life_time)
  return life_time_;
}
inline void CMsgHalloween_Merasmus2012::set_life_time(::google::protobuf::uint32 value) {
  set_has_life_time();
  life_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.life_time)
}

// optional uint32 bomb_kills = 8;
inline bool CMsgHalloween_Merasmus2012::has_bomb_kills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_bomb_kills() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_bomb_kills() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgHalloween_Merasmus2012::clear_bomb_kills() {
  bomb_kills_ = 0u;
  clear_has_bomb_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::bomb_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.bomb_kills)
  return bomb_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_bomb_kills(::google::protobuf::uint32 value) {
  set_has_bomb_kills();
  bomb_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.bomb_kills)
}

// optional uint32 staff_kills = 9;
inline bool CMsgHalloween_Merasmus2012::has_staff_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_staff_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_staff_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgHalloween_Merasmus2012::clear_staff_kills() {
  staff_kills_ = 0u;
  clear_has_staff_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::staff_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.staff_kills)
  return staff_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_staff_kills(::google::protobuf::uint32 value) {
  set_has_staff_kills();
  staff_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.staff_kills)
}

// optional uint32 pvp_kills = 10;
inline bool CMsgHalloween_Merasmus2012::has_pvp_kills() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_pvp_kills() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_pvp_kills() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgHalloween_Merasmus2012::clear_pvp_kills() {
  pvp_kills_ = 0u;
  clear_has_pvp_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pvp_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.pvp_kills)
  return pvp_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_pvp_kills(::google::protobuf::uint32 value) {
  set_has_pvp_kills();
  pvp_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.pvp_kills)
}

// optional uint32 prophunt_time1 = 11;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_prophunt_time1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_prophunt_time1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time1() {
  prophunt_time1_ = 0u;
  clear_has_prophunt_time1();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time1() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.prophunt_time1)
  return prophunt_time1_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time1(::google::protobuf::uint32 value) {
  set_has_prophunt_time1();
  prophunt_time1_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.prophunt_time1)
}

// optional uint32 prophunt_time2 = 12;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_prophunt_time2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_prophunt_time2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time2() {
  prophunt_time2_ = 0u;
  clear_has_prophunt_time2();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time2() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.prophunt_time2)
  return prophunt_time2_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time2(::google::protobuf::uint32 value) {
  set_has_prophunt_time2();
  prophunt_time2_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.prophunt_time2)
}

// optional uint32 dmg_scout = 13;
inline bool CMsgHalloween_Merasmus2012::has_dmg_scout() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_scout() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_scout() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_scout() {
  dmg_scout_ = 0u;
  clear_has_dmg_scout();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_scout() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_scout)
  return dmg_scout_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_scout(::google::protobuf::uint32 value) {
  set_has_dmg_scout();
  dmg_scout_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_scout)
}

// optional uint32 dmg_sniper = 14;
inline bool CMsgHalloween_Merasmus2012::has_dmg_sniper() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_sniper() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_sniper() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_sniper() {
  dmg_sniper_ = 0u;
  clear_has_dmg_sniper();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_sniper() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_sniper)
  return dmg_sniper_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_sniper(::google::protobuf::uint32 value) {
  set_has_dmg_sniper();
  dmg_sniper_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_sniper)
}

// optional uint32 dmg_soldier = 15;
inline bool CMsgHalloween_Merasmus2012::has_dmg_soldier() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_soldier() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_soldier() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_soldier() {
  dmg_soldier_ = 0u;
  clear_has_dmg_soldier();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_soldier() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_soldier)
  return dmg_soldier_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_soldier(::google::protobuf::uint32 value) {
  set_has_dmg_soldier();
  dmg_soldier_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_soldier)
}

// optional uint32 dmg_demo = 16;
inline bool CMsgHalloween_Merasmus2012::has_dmg_demo() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_demo() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_demo() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_demo() {
  dmg_demo_ = 0u;
  clear_has_dmg_demo();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_demo() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_demo)
  return dmg_demo_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_demo(::google::protobuf::uint32 value) {
  set_has_dmg_demo();
  dmg_demo_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_demo)
}

// optional uint32 dmg_medic = 17;
inline bool CMsgHalloween_Merasmus2012::has_dmg_medic() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_medic() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_medic() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_medic() {
  dmg_medic_ = 0u;
  clear_has_dmg_medic();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_medic() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_medic)
  return dmg_medic_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_medic(::google::protobuf::uint32 value) {
  set_has_dmg_medic();
  dmg_medic_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_medic)
}

// optional uint32 dmg_heavy = 18;
inline bool CMsgHalloween_Merasmus2012::has_dmg_heavy() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_heavy() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_heavy() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_heavy() {
  dmg_heavy_ = 0u;
  clear_has_dmg_heavy();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_heavy() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_heavy)
  return dmg_heavy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_heavy(::google::protobuf::uint32 value) {
  set_has_dmg_heavy();
  dmg_heavy_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_heavy)
}

// optional uint32 dmg_pyro = 19;
inline bool CMsgHalloween_Merasmus2012::has_dmg_pyro() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_pyro() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_pyro() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_pyro() {
  dmg_pyro_ = 0u;
  clear_has_dmg_pyro();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_pyro() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_pyro)
  return dmg_pyro_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_pyro(::google::protobuf::uint32 value) {
  set_has_dmg_pyro();
  dmg_pyro_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_pyro)
}

// optional uint32 dmg_spy = 20;
inline bool CMsgHalloween_Merasmus2012::has_dmg_spy() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_spy() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_spy() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_spy() {
  dmg_spy_ = 0u;
  clear_has_dmg_spy();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_spy() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_spy)
  return dmg_spy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_spy(::google::protobuf::uint32 value) {
  set_has_dmg_spy();
  dmg_spy_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_spy)
}

// optional uint32 dmg_engineer = 21;
inline bool CMsgHalloween_Merasmus2012::has_dmg_engineer() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_engineer() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_engineer() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_engineer() {
  dmg_engineer_ = 0u;
  clear_has_dmg_engineer();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_engineer() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_engineer)
  return dmg_engineer_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_engineer(::google::protobuf::uint32 value) {
  set_has_dmg_engineer();
  dmg_engineer_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_engineer)
}

// optional uint32 scout_count = 22;
inline bool CMsgHalloween_Merasmus2012::has_scout_count() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_scout_count() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_scout_count() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgHalloween_Merasmus2012::clear_scout_count() {
  scout_count_ = 0u;
  clear_has_scout_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::scout_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.scout_count)
  return scout_count_;
}
inline void CMsgHalloween_Merasmus2012::set_scout_count(::google::protobuf::uint32 value) {
  set_has_scout_count();
  scout_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.scout_count)
}

// optional uint32 sniper_count = 23;
inline bool CMsgHalloween_Merasmus2012::has_sniper_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_sniper_count() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_sniper_count() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgHalloween_Merasmus2012::clear_sniper_count() {
  sniper_count_ = 0u;
  clear_has_sniper_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::sniper_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.sniper_count)
  return sniper_count_;
}
inline void CMsgHalloween_Merasmus2012::set_sniper_count(::google::protobuf::uint32 value) {
  set_has_sniper_count();
  sniper_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.sniper_count)
}

// optional uint32 solider_count = 24;
inline bool CMsgHalloween_Merasmus2012::has_solider_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_solider_count() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_solider_count() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgHalloween_Merasmus2012::clear_solider_count() {
  solider_count_ = 0u;
  clear_has_solider_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::solider_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.solider_count)
  return solider_count_;
}
inline void CMsgHalloween_Merasmus2012::set_solider_count(::google::protobuf::uint32 value) {
  set_has_solider_count();
  solider_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.solider_count)
}

// optional uint32 demo_count = 25;
inline bool CMsgHalloween_Merasmus2012::has_demo_count() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_demo_count() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_demo_count() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_demo_count() {
  demo_count_ = 0u;
  clear_has_demo_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::demo_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.demo_count)
  return demo_count_;
}
inline void CMsgHalloween_Merasmus2012::set_demo_count(::google::protobuf::uint32 value) {
  set_has_demo_count();
  demo_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.demo_count)
}

// optional uint32 medic_count = 26;
inline bool CMsgHalloween_Merasmus2012::has_medic_count() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_medic_count() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_medic_count() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_medic_count() {
  medic_count_ = 0u;
  clear_has_medic_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::medic_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.medic_count)
  return medic_count_;
}
inline void CMsgHalloween_Merasmus2012::set_medic_count(::google::protobuf::uint32 value) {
  set_has_medic_count();
  medic_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.medic_count)
}

// optional uint32 heavy_count = 27;
inline bool CMsgHalloween_Merasmus2012::has_heavy_count() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_heavy_count() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_heavy_count() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_heavy_count() {
  heavy_count_ = 0u;
  clear_has_heavy_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::heavy_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.heavy_count)
  return heavy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_heavy_count(::google::protobuf::uint32 value) {
  set_has_heavy_count();
  heavy_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.heavy_count)
}

// optional uint32 pyro_count = 28;
inline bool CMsgHalloween_Merasmus2012::has_pyro_count() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_pyro_count() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_pyro_count() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_pyro_count() {
  pyro_count_ = 0u;
  clear_has_pyro_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pyro_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.pyro_count)
  return pyro_count_;
}
inline void CMsgHalloween_Merasmus2012::set_pyro_count(::google::protobuf::uint32 value) {
  set_has_pyro_count();
  pyro_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.pyro_count)
}

// optional uint32 spy_count = 29;
inline bool CMsgHalloween_Merasmus2012::has_spy_count() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_spy_count() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_spy_count() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_spy_count() {
  spy_count_ = 0u;
  clear_has_spy_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spy_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.spy_count)
  return spy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_spy_count(::google::protobuf::uint32 value) {
  set_has_spy_count();
  spy_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.spy_count)
}

// optional uint32 engineer_count = 30;
inline bool CMsgHalloween_Merasmus2012::has_engineer_count() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_engineer_count() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_engineer_count() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_engineer_count() {
  engineer_count_ = 0u;
  clear_has_engineer_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::engineer_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.engineer_count)
  return engineer_count_;
}
inline void CMsgHalloween_Merasmus2012::set_engineer_count(::google::protobuf::uint32 value) {
  set_has_engineer_count();
  engineer_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.engineer_count)
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel_Player

// optional fixed64 steam_id = 1;
inline bool CMsgUpdateHalloweenMerasmusLootLevel_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgUpdateHalloweenMerasmusLootLevel_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.Player.steam_id)
  return steam_id_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpdateHalloweenMerasmusLootLevel.Player.steam_id)
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel

// repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
inline int CMsgUpdateHalloweenMerasmusLootLevel::players_size() const {
  return players_.size();
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_players() {
  players_.Clear();
}
inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& CMsgUpdateHalloweenMerasmusLootLevel::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Get(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Mutable(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::add_players() {
  // @@protoc_insertion_point(field_add:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
CMsgUpdateHalloweenMerasmusLootLevel::players() const {
  // @@protoc_insertion_point(field_list:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
CMsgUpdateHalloweenMerasmusLootLevel::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return &players_;
}

// optional uint32 merasmus_level = 2;
inline bool CMsgUpdateHalloweenMerasmusLootLevel::has_merasmus_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_has_merasmus_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_has_merasmus_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_merasmus_level() {
  merasmus_level_ = 0u;
  clear_has_merasmus_level();
}
inline ::google::protobuf::uint32 CMsgUpdateHalloweenMerasmusLootLevel::merasmus_level() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.merasmus_level)
  return merasmus_level_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_merasmus_level(::google::protobuf::uint32 value) {
  set_has_merasmus_level();
  merasmus_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpdateHalloweenMerasmusLootLevel.merasmus_level)
}

// -------------------------------------------------------------------

// CAttribute_String

// optional string value = 1;
inline bool CAttribute_String::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_String::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_String::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_String::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CAttribute_String::value() const {
  // @@protoc_insertion_point(field_get:CAttribute_String.value)
  return *value_;
}
inline void CAttribute_String::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_String.value)
}
inline void CAttribute_String::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_String.value)
}
inline void CAttribute_String::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_String.value)
}
inline ::std::string* CAttribute_String::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_String.value)
  return value_;
}
inline ::std::string* CAttribute_String::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_String::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_String.value)
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::def_index() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.def_index)
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.def_index)
}

// optional uint32 item_quality = 2;
inline bool CAttribute_DynamicRecipeComponent::has_item_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_item_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.item_quality)
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.item_quality)
}

// optional uint32 component_flags = 3;
inline bool CAttribute_DynamicRecipeComponent::has_component_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_component_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_component_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent::clear_component_flags() {
  component_flags_ = 0u;
  clear_has_component_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::component_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.component_flags)
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent::set_component_flags(::google::protobuf::uint32 value) {
  set_has_component_flags();
  component_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.component_flags)
}

// optional string attributes_string = 4;
inline bool CAttribute_DynamicRecipeComponent::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent::clear_attributes_string() {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_->clear();
  }
  clear_has_attributes_string();
}
inline const ::std::string& CAttribute_DynamicRecipeComponent::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.attributes_string)
  return *attributes_string_;
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline ::std::string* CAttribute_DynamicRecipeComponent::mutable_attributes_string() {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_DynamicRecipeComponent.attributes_string)
  return attributes_string_;
}
inline ::std::string* CAttribute_DynamicRecipeComponent::release_attributes_string() {
  clear_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attributes_string_;
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_DynamicRecipeComponent::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attributes_string_;
  }
  if (attributes_string) {
    set_has_attributes_string();
    attributes_string_ = attributes_string;
  } else {
    clear_has_attributes_string();
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_DynamicRecipeComponent.attributes_string)
}

// optional uint32 num_required = 5;
inline bool CAttribute_DynamicRecipeComponent::has_num_required() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_num_required() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_num_required() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent::clear_num_required() {
  num_required_ = 0u;
  clear_has_num_required();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_required() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.num_required)
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_required(::google::protobuf::uint32 value) {
  set_has_num_required();
  num_required_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.num_required)
}

// optional uint32 num_fulfilled = 6;
inline bool CAttribute_DynamicRecipeComponent::has_num_fulfilled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_num_fulfilled() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_num_fulfilled() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  clear_has_num_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.num_fulfilled)
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_fulfilled(::google::protobuf::uint32 value) {
  set_has_num_fulfilled();
  num_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.num_fulfilled)
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::def_index() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.def_index)
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.def_index)
}

// optional uint32 item_def = 2;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_def() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_def)
  return item_def_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_def)
}

// optional uint32 item_quality = 3;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_quality)
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_quality)
}

// optional uint32 component_flags = 4;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_component_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_component_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_component_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_component_flags() {
  component_flags_ = 0u;
  clear_has_component_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::component_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.component_flags)
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_component_flags(::google::protobuf::uint32 value) {
  set_has_component_flags();
  component_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.component_flags)
}

// optional uint32 item_flags = 5;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_flags() {
  item_flags_ = 0u;
  clear_has_item_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_flags)
  return item_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_flags(::google::protobuf::uint32 value) {
  set_has_item_flags();
  item_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_flags)
}

// optional string attributes_string = 6;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_attributes_string() {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_->clear();
  }
  clear_has_attributes_string();
}
inline const ::std::string& CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  return *attributes_string_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::mutable_attributes_string() {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  return attributes_string_;
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::release_attributes_string() {
  clear_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attributes_string_;
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attributes_string_;
  }
  if (attributes_string) {
    set_has_attributes_string();
    attributes_string_ = attributes_string;
  } else {
    clear_has_attributes_string();
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}

// optional uint32 num_required = 7;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_required() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_num_required() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_num_required() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_required() {
  num_required_ = 0u;
  clear_has_num_required();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_required() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_required)
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_required(::google::protobuf::uint32 value) {
  set_has_num_required();
  num_required_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_required)
}

// optional uint32 item_count = 8;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_count() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_count)
  return item_count_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_count)
}

// optional uint32 num_fulfilled = 9;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_fulfilled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_num_fulfilled() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_num_fulfilled() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  clear_has_num_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_fulfilled)
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_fulfilled(::google::protobuf::uint32 value) {
  set_has_num_fulfilled();
  num_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_fulfilled)
}

// optional uint32 items_fulfilled = 10;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_items_fulfilled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_items_fulfilled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_items_fulfilled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_items_fulfilled() {
  items_fulfilled_ = 0u;
  clear_has_items_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::items_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.items_fulfilled)
  return items_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_items_fulfilled(::google::protobuf::uint32 value) {
  set_has_items_fulfilled();
  items_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.items_fulfilled)
}

// -------------------------------------------------------------------

// CAttribute_ItemSlotCriteria

// optional string tags = 1;
inline bool CAttribute_ItemSlotCriteria::has_tags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_ItemSlotCriteria::set_has_tags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_ItemSlotCriteria::clear_has_tags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_ItemSlotCriteria::clear_tags() {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_->clear();
  }
  clear_has_tags();
}
inline const ::std::string& CAttribute_ItemSlotCriteria::tags() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemSlotCriteria.tags)
  return *tags_;
}
inline void CAttribute_ItemSlotCriteria::set_tags(const ::std::string& value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemSlotCriteria.tags)
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_ItemSlotCriteria.tags)
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value, size_t size) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_ItemSlotCriteria.tags)
}
inline ::std::string* CAttribute_ItemSlotCriteria::mutable_tags() {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_ItemSlotCriteria.tags)
  return tags_;
}
inline ::std::string* CAttribute_ItemSlotCriteria::release_tags() {
  clear_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tags_;
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_ItemSlotCriteria::set_allocated_tags(::std::string* tags) {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tags_;
  }
  if (tags) {
    set_has_tags();
    tags_ = tags;
  } else {
    clear_has_tags();
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_ItemSlotCriteria.tags)
}

// -------------------------------------------------------------------

// CMsgSetItemSlotAttribute

// optional uint64 item_id = 1;
inline bool CMsgSetItemSlotAttribute::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetItemSlotAttribute::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetItemSlotAttribute::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.item_id)
  return item_id_;
}
inline void CMsgSetItemSlotAttribute::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.item_id)
}

// optional uint64 slot_item_original_id = 2;
inline bool CMsgSetItemSlotAttribute::has_slot_item_original_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_slot_item_original_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetItemSlotAttribute::clear_has_slot_item_original_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetItemSlotAttribute::clear_slot_item_original_id() {
  slot_item_original_id_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_item_original_id();
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::slot_item_original_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.slot_item_original_id)
  return slot_item_original_id_;
}
inline void CMsgSetItemSlotAttribute::set_slot_item_original_id(::google::protobuf::uint64 value) {
  set_has_slot_item_original_id();
  slot_item_original_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.slot_item_original_id)
}

// optional uint32 slot_index = 3;
inline bool CMsgSetItemSlotAttribute::has_slot_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_slot_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetItemSlotAttribute::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetItemSlotAttribute::clear_slot_index() {
  slot_index_ = 0u;
  clear_has_slot_index();
}
inline ::google::protobuf::uint32 CMsgSetItemSlotAttribute::slot_index() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.slot_index)
  return slot_index_;
}
inline void CMsgSetItemSlotAttribute::set_slot_index(::google::protobuf::uint32 value) {
  set_has_slot_index();
  slot_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.slot_index)
}

// -------------------------------------------------------------------

// CSOWarData

// optional uint32 account_id = 1;
inline bool CSOWarData::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOWarData::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOWarData::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOWarData::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOWarData::account_id() const {
  // @@protoc_insertion_point(field_get:CSOWarData.account_id)
  return account_id_;
}
inline void CSOWarData::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.account_id)
}

// optional uint32 war_id = 2;
inline bool CSOWarData::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOWarData::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOWarData::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOWarData::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CSOWarData::war_id() const {
  // @@protoc_insertion_point(field_get:CSOWarData.war_id)
  return war_id_;
}
inline void CSOWarData::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.war_id)
}

// optional uint32 affiliation = 3;
inline bool CSOWarData::has_affiliation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOWarData::set_has_affiliation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOWarData::clear_has_affiliation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOWarData::clear_affiliation() {
  affiliation_ = 0u;
  clear_has_affiliation();
}
inline ::google::protobuf::uint32 CSOWarData::affiliation() const {
  // @@protoc_insertion_point(field_get:CSOWarData.affiliation)
  return affiliation_;
}
inline void CSOWarData::set_affiliation(::google::protobuf::uint32 value) {
  set_has_affiliation();
  affiliation_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.affiliation)
}

// optional uint32 points_scored = 4;
inline bool CSOWarData::has_points_scored() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOWarData::set_has_points_scored() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOWarData::clear_has_points_scored() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOWarData::clear_points_scored() {
  points_scored_ = 0u;
  clear_has_points_scored();
}
inline ::google::protobuf::uint32 CSOWarData::points_scored() const {
  // @@protoc_insertion_point(field_get:CSOWarData.points_scored)
  return points_scored_;
}
inline void CSOWarData::set_points_scored(::google::protobuf::uint32 value) {
  set_has_points_scored();
  points_scored_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.points_scored)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_IndividualUpdate

// optional fixed64 steam_id = 1;
inline bool CGCMsgGC_War_IndividualUpdate::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_IndividualUpdate::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CGCMsgGC_War_IndividualUpdate::steam_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_IndividualUpdate.steam_id)
  return steam_id_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_IndividualUpdate.steam_id)
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_IndividualUpdate::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_IndividualUpdate::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_IndividualUpdate::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_IndividualUpdate.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_IndividualUpdate.war_id)
}

// optional uint32 score = 3;
inline bool CGCMsgGC_War_IndividualUpdate::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGC_War_IndividualUpdate::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_IndividualUpdate::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_IndividualUpdate.score)
  return score_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_IndividualUpdate.score)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_JoinWar

// optional uint32 affiliation = 1;
inline bool CGCMsgGC_War_JoinWar::has_affiliation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_JoinWar::set_has_affiliation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_JoinWar::clear_has_affiliation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_JoinWar::clear_affiliation() {
  affiliation_ = 0u;
  clear_has_affiliation();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_JoinWar::affiliation() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_JoinWar.affiliation)
  return affiliation_;
}
inline void CGCMsgGC_War_JoinWar::set_affiliation(::google::protobuf::uint32 value) {
  set_has_affiliation();
  affiliation_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_JoinWar.affiliation)
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_JoinWar::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_JoinWar::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_JoinWar::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_JoinWar::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_JoinWar::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_JoinWar.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_JoinWar::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_JoinWar.war_id)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_RequestGlobalStats

// optional uint32 war_id = 1;
inline bool CGCMsgGC_War_RequestGlobalStats::has_war_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_RequestGlobalStats::set_has_war_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_RequestGlobalStats::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_RequestGlobalStats::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_RequestGlobalStats::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_RequestGlobalStats.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_RequestGlobalStats::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_RequestGlobalStats.war_id)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_GlobalStatsResponse_SideScore

// optional uint32 side = 1;
inline bool CGCMsgGC_War_GlobalStatsResponse_SideScore::has_side() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_has_side() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_has_side() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_side() {
  side_ = 0u;
  clear_has_side();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_GlobalStatsResponse_SideScore::side() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.SideScore.side)
  return side_;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_side(::google::protobuf::uint32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_GlobalStatsResponse.SideScore.side)
}

// optional uint64 score = 2;
inline bool CGCMsgGC_War_GlobalStatsResponse_SideScore::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 CGCMsgGC_War_GlobalStatsResponse_SideScore::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.SideScore.score)
  return score_;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_GlobalStatsResponse.SideScore.score)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_GlobalStatsResponse

// repeated .CGCMsgGC_War_GlobalStatsResponse.SideScore side_scores = 1;
inline int CGCMsgGC_War_GlobalStatsResponse::side_scores_size() const {
  return side_scores_.size();
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_side_scores() {
  side_scores_.Clear();
}
inline const ::CGCMsgGC_War_GlobalStatsResponse_SideScore& CGCMsgGC_War_GlobalStatsResponse::side_scores(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_.Get(index);
}
inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* CGCMsgGC_War_GlobalStatsResponse::mutable_side_scores(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_.Mutable(index);
}
inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* CGCMsgGC_War_GlobalStatsResponse::add_side_scores() {
  // @@protoc_insertion_point(field_add:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >&
CGCMsgGC_War_GlobalStatsResponse::side_scores() const {
  // @@protoc_insertion_point(field_list:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_;
}
inline ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >*
CGCMsgGC_War_GlobalStatsResponse::mutable_side_scores() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return &side_scores_;
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_GlobalStatsResponse::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_GlobalStatsResponse::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_GlobalStatsResponse::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_GlobalStatsResponse::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_GlobalStatsResponse.war_id)
}

// -------------------------------------------------------------------

// CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate

// optional uint32 score = 2;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score)
  return score_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score)
}

// optional uint32 type = 3;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::type() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.type)
  return type_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.type)
}

// optional bytes score_id = 4;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_id() {
  if (score_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_->clear();
  }
  clear_has_score_id();
}
inline const ::std::string& CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  return *score_id_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const ::std::string& value) {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const char* value) {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const void* value, size_t size) {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::mutable_score_id() {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  return score_id_;
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::release_score_id() {
  clear_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = score_id_;
    score_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_allocated_score_id(::std::string* score_id) {
  if (score_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete score_id_;
  }
  if (score_id) {
    set_has_score_id();
    score_id_ = score_id;
  } else {
    clear_has_score_id();
    score_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}

// optional uint32 score_check = 5;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_check() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score_check() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score_check() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_check() {
  score_check_ = 0u;
  clear_has_score_check();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_check)
  return score_check_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_check(::google::protobuf::uint32 value) {
  set_has_score_check();
  score_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_check)
}

// -------------------------------------------------------------------

// CAttribute_WorldItemPlacement

// optional uint64 original_item_id = 1;
inline bool CAttribute_WorldItemPlacement::has_original_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_original_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_WorldItemPlacement::clear_has_original_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_WorldItemPlacement::clear_original_item_id() {
  original_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_item_id();
}
inline ::google::protobuf::uint64 CAttribute_WorldItemPlacement::original_item_id() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.original_item_id)
  return original_item_id_;
}
inline void CAttribute_WorldItemPlacement::set_original_item_id(::google::protobuf::uint64 value) {
  set_has_original_item_id();
  original_item_id_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.original_item_id)
}

// optional float pos_x = 2;
inline bool CAttribute_WorldItemPlacement::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_WorldItemPlacement::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_WorldItemPlacement::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float CAttribute_WorldItemPlacement::pos_x() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.pos_x)
  return pos_x_;
}
inline void CAttribute_WorldItemPlacement::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.pos_x)
}

// optional float pos_y = 3;
inline bool CAttribute_WorldItemPlacement::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_WorldItemPlacement::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_WorldItemPlacement::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float CAttribute_WorldItemPlacement::pos_y() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.pos_y)
  return pos_y_;
}
inline void CAttribute_WorldItemPlacement::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.pos_y)
}

// optional float pos_z = 4;
inline bool CAttribute_WorldItemPlacement::has_pos_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_pos_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_WorldItemPlacement::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_WorldItemPlacement::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float CAttribute_WorldItemPlacement::pos_z() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.pos_z)
  return pos_z_;
}
inline void CAttribute_WorldItemPlacement::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.pos_z)
}

// optional float ang_x = 5;
inline bool CAttribute_WorldItemPlacement::has_ang_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_ang_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_WorldItemPlacement::clear_has_ang_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_WorldItemPlacement::clear_ang_x() {
  ang_x_ = 0;
  clear_has_ang_x();
}
inline float CAttribute_WorldItemPlacement::ang_x() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.ang_x)
  return ang_x_;
}
inline void CAttribute_WorldItemPlacement::set_ang_x(float value) {
  set_has_ang_x();
  ang_x_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.ang_x)
}

// optional float ang_y = 6;
inline bool CAttribute_WorldItemPlacement::has_ang_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_ang_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_WorldItemPlacement::clear_has_ang_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_WorldItemPlacement::clear_ang_y() {
  ang_y_ = 0;
  clear_has_ang_y();
}
inline float CAttribute_WorldItemPlacement::ang_y() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.ang_y)
  return ang_y_;
}
inline void CAttribute_WorldItemPlacement::set_ang_y(float value) {
  set_has_ang_y();
  ang_y_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.ang_y)
}

// optional float ang_z = 7;
inline bool CAttribute_WorldItemPlacement::has_ang_z() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_ang_z() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CAttribute_WorldItemPlacement::clear_has_ang_z() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CAttribute_WorldItemPlacement::clear_ang_z() {
  ang_z_ = 0;
  clear_has_ang_z();
}
inline float CAttribute_WorldItemPlacement::ang_z() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.ang_z)
  return ang_z_;
}
inline void CAttribute_WorldItemPlacement::set_ang_z(float value) {
  set_has_ang_z();
  ang_z_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.ang_z)
}

// -------------------------------------------------------------------

// CGCMsg_WorldItemPlacement_Update

// optional uint64 original_item_id = 1;
inline bool CGCMsg_WorldItemPlacement_Update::has_original_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_original_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_original_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_original_item_id() {
  original_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_item_id();
}
inline ::google::protobuf::uint64 CGCMsg_WorldItemPlacement_Update::original_item_id() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.original_item_id)
  return original_item_id_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_original_item_id(::google::protobuf::uint64 value) {
  set_has_original_item_id();
  original_item_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.original_item_id)
}

// optional float pos_x = 2;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float CGCMsg_WorldItemPlacement_Update::pos_x() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.pos_x)
  return pos_x_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.pos_x)
}

// optional float pos_y = 3;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float CGCMsg_WorldItemPlacement_Update::pos_y() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.pos_y)
  return pos_y_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.pos_y)
}

// optional float pos_z = 4;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_pos_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float CGCMsg_WorldItemPlacement_Update::pos_z() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.pos_z)
  return pos_z_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.pos_z)
}

// optional float ang_x = 5;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_ang_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_ang_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_x() {
  ang_x_ = 0;
  clear_has_ang_x();
}
inline float CGCMsg_WorldItemPlacement_Update::ang_x() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.ang_x)
  return ang_x_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_x(float value) {
  set_has_ang_x();
  ang_x_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.ang_x)
}

// optional float ang_y = 6;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_ang_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_ang_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_y() {
  ang_y_ = 0;
  clear_has_ang_y();
}
inline float CGCMsg_WorldItemPlacement_Update::ang_y() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.ang_y)
  return ang_y_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_y(float value) {
  set_has_ang_y();
  ang_y_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.ang_y)
}

// optional float ang_z = 7;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_z() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_ang_z() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_ang_z() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_z() {
  ang_z_ = 0;
  clear_has_ang_z();
}
inline float CGCMsg_WorldItemPlacement_Update::ang_z() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.ang_z)
  return ang_z_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_z(float value) {
  set_has_ang_z();
  ang_z_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.ang_z)
}

// optional bool force_remove_all = 8;
inline bool CGCMsg_WorldItemPlacement_Update::has_force_remove_all() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_force_remove_all() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_force_remove_all() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_force_remove_all() {
  force_remove_all_ = false;
  clear_has_force_remove_all();
}
inline bool CGCMsg_WorldItemPlacement_Update::force_remove_all() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.force_remove_all)
  return force_remove_all_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_force_remove_all(bool value) {
  set_has_force_remove_all();
  force_remove_all_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.force_remove_all)
}

// optional string attrib_name = 9;
inline bool CGCMsg_WorldItemPlacement_Update::has_attrib_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_attrib_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_attrib_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_attrib_name() {
  if (attrib_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attrib_name_->clear();
  }
  clear_has_attrib_name();
}
inline const ::std::string& CGCMsg_WorldItemPlacement_Update::attrib_name() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.attrib_name)
  return *attrib_name_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const ::std::string& value) {
  set_has_attrib_name();
  if (attrib_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attrib_name_ = new ::std::string;
  }
  attrib_name_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const char* value) {
  set_has_attrib_name();
  if (attrib_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attrib_name_ = new ::std::string;
  }
  attrib_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const char* value, size_t size) {
  set_has_attrib_name();
  if (attrib_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attrib_name_ = new ::std::string;
  }
  attrib_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
inline ::std::string* CGCMsg_WorldItemPlacement_Update::mutable_attrib_name() {
  set_has_attrib_name();
  if (attrib_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attrib_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsg_WorldItemPlacement_Update.attrib_name)
  return attrib_name_;
}
inline ::std::string* CGCMsg_WorldItemPlacement_Update::release_attrib_name() {
  clear_has_attrib_name();
  if (attrib_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attrib_name_;
    attrib_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsg_WorldItemPlacement_Update::set_allocated_attrib_name(::std::string* attrib_name) {
  if (attrib_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attrib_name_;
  }
  if (attrib_name) {
    set_has_attrib_name();
    attrib_name_ = attrib_name;
  } else {
    clear_has_attrib_name();
    attrib_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsg_WorldItemPlacement_Update.attrib_name)
}

// -------------------------------------------------------------------

// CMsgAcknowledgeXP

// optional int32 match_group = 1;
inline bool CMsgAcknowledgeXP::has_match_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcknowledgeXP::set_has_match_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcknowledgeXP::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcknowledgeXP::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgAcknowledgeXP::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgAcknowledgeXP.match_group)
  return match_group_;
}
inline void CMsgAcknowledgeXP::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcknowledgeXP.match_group)
}

// optional uint32 predicted_experience = 2;
inline bool CMsgAcknowledgeXP::has_predicted_experience() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAcknowledgeXP::set_has_predicted_experience() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAcknowledgeXP::clear_has_predicted_experience() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAcknowledgeXP::clear_predicted_experience() {
  predicted_experience_ = 0u;
  clear_has_predicted_experience();
}
inline ::google::protobuf::uint32 CMsgAcknowledgeXP::predicted_experience() const {
  // @@protoc_insertion_point(field_get:CMsgAcknowledgeXP.predicted_experience)
  return predicted_experience_;
}
inline void CMsgAcknowledgeXP::set_predicted_experience(::google::protobuf::uint32 value) {
  set_has_predicted_experience();
  predicted_experience_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcknowledgeXP.predicted_experience)
}

// -------------------------------------------------------------------

// CMsgTFXPSource

// optional .CMsgTFXPSource.XPSourceType type = 1;
inline bool CMsgTFXPSource::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFXPSource::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFXPSource::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFXPSource::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::CMsgTFXPSource_XPSourceType CMsgTFXPSource::type() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.type)
  return static_cast< ::CMsgTFXPSource_XPSourceType >(type_);
}
inline void CMsgTFXPSource::set_type(::CMsgTFXPSource_XPSourceType value) {
  assert(::CMsgTFXPSource_XPSourceType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.type)
}

// optional int32 amount = 2;
inline bool CMsgTFXPSource::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFXPSource::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFXPSource::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFXPSource::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 CMsgTFXPSource::amount() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.amount)
  return amount_;
}
inline void CMsgTFXPSource::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.amount)
}

// optional int32 match_group = 3;
inline bool CMsgTFXPSource::has_match_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFXPSource::set_has_match_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFXPSource::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFXPSource::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgTFXPSource::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.match_group)
  return match_group_;
}
inline void CMsgTFXPSource::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.match_group)
}

// optional uint32 account_id = 4;
inline bool CMsgTFXPSource::has_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFXPSource::set_has_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFXPSource::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFXPSource::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgTFXPSource::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.account_id)
  return account_id_;
}
inline void CMsgTFXPSource::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.account_id)
}

// optional uint64 match_id = 5;
inline bool CMsgTFXPSource::has_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFXPSource::set_has_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFXPSource::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFXPSource::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgTFXPSource::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.match_id)
  return match_id_;
}
inline void CMsgTFXPSource::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.match_id)
}

// -------------------------------------------------------------------

// CMsgTFXPSourceBreakdown

// repeated .CMsgTFXPSource sources = 1;
inline int CMsgTFXPSourceBreakdown::sources_size() const {
  return sources_.size();
}
inline void CMsgTFXPSourceBreakdown::clear_sources() {
  sources_.Clear();
}
inline const ::CMsgTFXPSource& CMsgTFXPSourceBreakdown::sources(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSourceBreakdown.sources)
  return sources_.Get(index);
}
inline ::CMsgTFXPSource* CMsgTFXPSourceBreakdown::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFXPSourceBreakdown.sources)
  return sources_.Mutable(index);
}
inline ::CMsgTFXPSource* CMsgTFXPSourceBreakdown::add_sources() {
  // @@protoc_insertion_point(field_add:CMsgTFXPSourceBreakdown.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
CMsgTFXPSourceBreakdown::sources() const {
  // @@protoc_insertion_point(field_list:CMsgTFXPSourceBreakdown.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
CMsgTFXPSourceBreakdown::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFXPSourceBreakdown.sources)
  return &sources_;
}

// -------------------------------------------------------------------

// CMsgTFClientInit

// optional uint32 client_version = 1;
inline bool CMsgTFClientInit::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFClientInit::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFClientInit::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFClientInit::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgTFClientInit::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgTFClientInit.client_version)
  return client_version_;
}
inline void CMsgTFClientInit::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFClientInit.client_version)
}

// optional int32 language = 2;
inline bool CMsgTFClientInit::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFClientInit::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFClientInit::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFClientInit::clear_language() {
  language_ = 0;
  clear_has_language();
}
inline ::google::protobuf::int32 CMsgTFClientInit::language() const {
  // @@protoc_insertion_point(field_get:CMsgTFClientInit.language)
  return language_;
}
inline void CMsgTFClientInit::set_language(::google::protobuf::int32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFClientInit.language)
}

// -------------------------------------------------------------------

// CMsgGCNotification

// optional uint64 notification_id = 1;
inline bool CMsgGCNotification::has_notification_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotification::set_has_notification_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotification::clear_has_notification_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotification::clear_notification_id() {
  notification_id_ = GOOGLE_ULONGLONG(0);
  clear_has_notification_id();
}
inline ::google::protobuf::uint64 CMsgGCNotification::notification_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.notification_id)
  return notification_id_;
}
inline void CMsgGCNotification::set_notification_id(::google::protobuf::uint64 value) {
  set_has_notification_id();
  notification_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.notification_id)
}

// optional uint32 account_id = 2;
inline bool CMsgGCNotification::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNotification::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNotification::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNotification::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCNotification::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.account_id)
  return account_id_;
}
inline void CMsgGCNotification::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.account_id)
}

// optional fixed32 expiration_time = 3;
inline bool CMsgGCNotification::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNotification::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNotification::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNotification::clear_expiration_time() {
  expiration_time_ = 0u;
  clear_has_expiration_time();
}
inline ::google::protobuf::uint32 CMsgGCNotification::expiration_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.expiration_time)
  return expiration_time_;
}
inline void CMsgGCNotification::set_expiration_time(::google::protobuf::uint32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.expiration_time)
}

// optional .CMsgGCNotification.NotificationType type = 4 [default = NOTIFICATION_CUSTOM_STRING];
inline bool CMsgGCNotification::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCNotification::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCNotification::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCNotification::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::CMsgGCNotification_NotificationType CMsgGCNotification::type() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.type)
  return static_cast< ::CMsgGCNotification_NotificationType >(type_);
}
inline void CMsgGCNotification::set_type(::CMsgGCNotification_NotificationType value) {
  assert(::CMsgGCNotification_NotificationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.type)
}

// optional string notification_string = 5;
inline bool CMsgGCNotification::has_notification_string() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCNotification::set_has_notification_string() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCNotification::clear_has_notification_string() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCNotification::clear_notification_string() {
  if (notification_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notification_string_->clear();
  }
  clear_has_notification_string();
}
inline const ::std::string& CMsgGCNotification::notification_string() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.notification_string)
  return *notification_string_;
}
inline void CMsgGCNotification::set_notification_string(const ::std::string& value) {
  set_has_notification_string();
  if (notification_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notification_string_ = new ::std::string;
  }
  notification_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCNotification.notification_string)
}
inline void CMsgGCNotification::set_notification_string(const char* value) {
  set_has_notification_string();
  if (notification_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notification_string_ = new ::std::string;
  }
  notification_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCNotification.notification_string)
}
inline void CMsgGCNotification::set_notification_string(const char* value, size_t size) {
  set_has_notification_string();
  if (notification_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notification_string_ = new ::std::string;
  }
  notification_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCNotification.notification_string)
}
inline ::std::string* CMsgGCNotification::mutable_notification_string() {
  set_has_notification_string();
  if (notification_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notification_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCNotification.notification_string)
  return notification_string_;
}
inline ::std::string* CMsgGCNotification::release_notification_string() {
  clear_has_notification_string();
  if (notification_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notification_string_;
    notification_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCNotification::set_allocated_notification_string(::std::string* notification_string) {
  if (notification_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notification_string_;
  }
  if (notification_string) {
    set_has_notification_string();
    notification_string_ = notification_string;
  } else {
    clear_has_notification_string();
    notification_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCNotification.notification_string)
}

// -------------------------------------------------------------------

// CMsgGCNotificationQueue

// repeated .CMsgGCNotification notifications = 1;
inline int CMsgGCNotificationQueue::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationQueue::clear_notifications() {
  notifications_.Clear();
}
inline const ::CMsgGCNotification& CMsgGCNotificationQueue::notifications(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationQueue.notifications)
  return notifications_.Get(index);
}
inline ::CMsgGCNotification* CMsgGCNotificationQueue::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCNotificationQueue.notifications)
  return notifications_.Mutable(index);
}
inline ::CMsgGCNotification* CMsgGCNotificationQueue::add_notifications() {
  // @@protoc_insertion_point(field_add:CMsgGCNotificationQueue.notifications)
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >&
CMsgGCNotificationQueue::notifications() const {
  // @@protoc_insertion_point(field_list:CMsgGCNotificationQueue.notifications)
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >*
CMsgGCNotificationQueue::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCNotificationQueue.notifications)
  return &notifications_;
}

// -------------------------------------------------------------------

// CMsgNotificationAcknowledge

// optional uint32 account_id = 1;
inline bool CMsgNotificationAcknowledge::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotificationAcknowledge::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNotificationAcknowledge::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNotificationAcknowledge::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgNotificationAcknowledge::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationAcknowledge.account_id)
  return account_id_;
}
inline void CMsgNotificationAcknowledge::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationAcknowledge.account_id)
}

// optional uint64 notification_id = 2;
inline bool CMsgNotificationAcknowledge::has_notification_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNotificationAcknowledge::set_has_notification_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNotificationAcknowledge::clear_has_notification_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNotificationAcknowledge::clear_notification_id() {
  notification_id_ = GOOGLE_ULONGLONG(0);
  clear_has_notification_id();
}
inline ::google::protobuf::uint64 CMsgNotificationAcknowledge::notification_id() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationAcknowledge.notification_id)
  return notification_id_;
}
inline void CMsgNotificationAcknowledge::set_notification_id(::google::protobuf::uint64 value) {
  set_has_notification_id();
  notification_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationAcknowledge.notification_id)
}

// -------------------------------------------------------------------

// CMsgNotificationAcknowledgeReply

// -------------------------------------------------------------------

// CMsgGC_Match_Result_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGC_Match_Result_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Match_Result_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Match_Result_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.steam_id)
  return steam_id_;
}
inline void CMsgGC_Match_Result_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.steam_id)
}

// optional uint64 original_party_id = 2;
inline bool CMsgGC_Match_Result_Player::has_original_party_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_original_party_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Match_Result_Player::clear_has_original_party_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Match_Result_Player::clear_original_party_id() {
  original_party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_party_id();
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result_Player::original_party_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.original_party_id)
  return original_party_id_;
}
inline void CMsgGC_Match_Result_Player::set_original_party_id(::google::protobuf::uint64 value) {
  set_has_original_party_id();
  original_party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.original_party_id)
}

// optional uint32 team = 3;
inline bool CMsgGC_Match_Result_Player::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Match_Result_Player::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Match_Result_Player::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::team() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.team)
  return team_;
}
inline void CMsgGC_Match_Result_Player::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.team)
}

// optional uint32 score = 4;
inline bool CMsgGC_Match_Result_Player::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Match_Result_Player::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Match_Result_Player::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.score)
  return score_;
}
inline void CMsgGC_Match_Result_Player::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.score)
}

// optional uint32 ping = 5;
inline bool CMsgGC_Match_Result_Player::has_ping() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_ping() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_Match_Result_Player::clear_has_ping() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_Match_Result_Player::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::ping() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.ping)
  return ping_;
}
inline void CMsgGC_Match_Result_Player::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.ping)
}

// optional uint32 flags = 6;
inline bool CMsgGC_Match_Result_Player::has_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGC_Match_Result_Player::clear_has_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGC_Match_Result_Player::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::flags() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.flags)
  return flags_;
}
inline void CMsgGC_Match_Result_Player::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.flags)
}

// optional uint32 rank = 9;
inline bool CMsgGC_Match_Result_Player::has_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGC_Match_Result_Player::clear_has_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGC_Match_Result_Player::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::rank() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.rank)
  return rank_;
}
inline void CMsgGC_Match_Result_Player::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.rank)
}

// optional uint32 classes_played = 10;
inline bool CMsgGC_Match_Result_Player::has_classes_played() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_classes_played() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGC_Match_Result_Player::clear_has_classes_played() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGC_Match_Result_Player::clear_classes_played() {
  classes_played_ = 0u;
  clear_has_classes_played();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::classes_played() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.classes_played)
  return classes_played_;
}
inline void CMsgGC_Match_Result_Player::set_classes_played(::google::protobuf::uint32 value) {
  set_has_classes_played();
  classes_played_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.classes_played)
}

// optional uint32 kills = 11;
inline bool CMsgGC_Match_Result_Player::has_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGC_Match_Result_Player::clear_has_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGC_Match_Result_Player::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::kills() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.kills)
  return kills_;
}
inline void CMsgGC_Match_Result_Player::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.kills)
}

// optional uint32 deaths = 12;
inline bool CMsgGC_Match_Result_Player::has_deaths() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_deaths() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGC_Match_Result_Player::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGC_Match_Result_Player::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.deaths)
  return deaths_;
}
inline void CMsgGC_Match_Result_Player::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.deaths)
}

// optional uint32 damage = 13;
inline bool CMsgGC_Match_Result_Player::has_damage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_damage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGC_Match_Result_Player::clear_has_damage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGC_Match_Result_Player::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::damage() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.damage)
  return damage_;
}
inline void CMsgGC_Match_Result_Player::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.damage)
}

// optional uint32 healing = 14;
inline bool CMsgGC_Match_Result_Player::has_healing() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_healing() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGC_Match_Result_Player::clear_has_healing() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGC_Match_Result_Player::clear_healing() {
  healing_ = 0u;
  clear_has_healing();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::healing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.healing)
  return healing_;
}
inline void CMsgGC_Match_Result_Player::set_healing(::google::protobuf::uint32 value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.healing)
}

// optional uint32 support = 15;
inline bool CMsgGC_Match_Result_Player::has_support() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_support() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_support() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGC_Match_Result_Player::clear_support() {
  support_ = 0u;
  clear_has_support();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::support() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.support)
  return support_;
}
inline void CMsgGC_Match_Result_Player::set_support(::google::protobuf::uint32 value) {
  set_has_support();
  support_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.support)
}

// optional uint32 score_medal = 16;
inline bool CMsgGC_Match_Result_Player::has_score_medal() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_score_medal() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_score_medal() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGC_Match_Result_Player::clear_score_medal() {
  score_medal_ = 0u;
  clear_has_score_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::score_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.score_medal)
  return score_medal_;
}
inline void CMsgGC_Match_Result_Player::set_score_medal(::google::protobuf::uint32 value) {
  set_has_score_medal();
  score_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.score_medal)
}

// optional uint32 kills_medal = 17;
inline bool CMsgGC_Match_Result_Player::has_kills_medal() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_kills_medal() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_kills_medal() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGC_Match_Result_Player::clear_kills_medal() {
  kills_medal_ = 0u;
  clear_has_kills_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::kills_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.kills_medal)
  return kills_medal_;
}
inline void CMsgGC_Match_Result_Player::set_kills_medal(::google::protobuf::uint32 value) {
  set_has_kills_medal();
  kills_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.kills_medal)
}

// optional uint32 damage_medal = 18;
inline bool CMsgGC_Match_Result_Player::has_damage_medal() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_damage_medal() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_damage_medal() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGC_Match_Result_Player::clear_damage_medal() {
  damage_medal_ = 0u;
  clear_has_damage_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::damage_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.damage_medal)
  return damage_medal_;
}
inline void CMsgGC_Match_Result_Player::set_damage_medal(::google::protobuf::uint32 value) {
  set_has_damage_medal();
  damage_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.damage_medal)
}

// optional uint32 healing_medal = 19;
inline bool CMsgGC_Match_Result_Player::has_healing_medal() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_healing_medal() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_healing_medal() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGC_Match_Result_Player::clear_healing_medal() {
  healing_medal_ = 0u;
  clear_has_healing_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::healing_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.healing_medal)
  return healing_medal_;
}
inline void CMsgGC_Match_Result_Player::set_healing_medal(::google::protobuf::uint32 value) {
  set_has_healing_medal();
  healing_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.healing_medal)
}

// optional uint32 support_medal = 20;
inline bool CMsgGC_Match_Result_Player::has_support_medal() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_support_medal() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_support_medal() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGC_Match_Result_Player::clear_support_medal() {
  support_medal_ = 0u;
  clear_has_support_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::support_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.support_medal)
  return support_medal_;
}
inline void CMsgGC_Match_Result_Player::set_support_medal(::google::protobuf::uint32 value) {
  set_has_support_medal();
  support_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.support_medal)
}

// repeated .CMsgTFXPSource xp_breakdown = 21;
inline int CMsgGC_Match_Result_Player::xp_breakdown_size() const {
  return xp_breakdown_.size();
}
inline void CMsgGC_Match_Result_Player::clear_xp_breakdown() {
  xp_breakdown_.Clear();
}
inline const ::CMsgTFXPSource& CMsgGC_Match_Result_Player::xp_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_.Get(index);
}
inline ::CMsgTFXPSource* CMsgGC_Match_Result_Player::mutable_xp_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_.Mutable(index);
}
inline ::CMsgTFXPSource* CMsgGC_Match_Result_Player::add_xp_breakdown() {
  // @@protoc_insertion_point(field_add:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
CMsgGC_Match_Result_Player::xp_breakdown() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
CMsgGC_Match_Result_Player::mutable_xp_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Match_Result.Player.xp_breakdown)
  return &xp_breakdown_;
}

// optional uint32 leave_time = 22;
inline bool CMsgGC_Match_Result_Player::has_leave_time() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_leave_time() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_leave_time() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGC_Match_Result_Player::clear_leave_time() {
  leave_time_ = 0u;
  clear_has_leave_time();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::leave_time() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.leave_time)
  return leave_time_;
}
inline void CMsgGC_Match_Result_Player::set_leave_time(::google::protobuf::uint32 value) {
  set_has_leave_time();
  leave_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.leave_time)
}

// optional .TFMatchLeaveReason leave_reason = 23;
inline bool CMsgGC_Match_Result_Player::has_leave_reason() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_leave_reason() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_leave_reason() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGC_Match_Result_Player::clear_leave_reason() {
  leave_reason_ = 0;
  clear_has_leave_reason();
}
inline ::TFMatchLeaveReason CMsgGC_Match_Result_Player::leave_reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.leave_reason)
  return static_cast< ::TFMatchLeaveReason >(leave_reason_);
}
inline void CMsgGC_Match_Result_Player::set_leave_reason(::TFMatchLeaveReason value) {
  assert(::TFMatchLeaveReason_IsValid(value));
  set_has_leave_reason();
  leave_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.leave_reason)
}

// optional uint32 connect_time = 24;
inline bool CMsgGC_Match_Result_Player::has_connect_time() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_connect_time() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_connect_time() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgGC_Match_Result_Player::clear_connect_time() {
  connect_time_ = 0u;
  clear_has_connect_time();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::connect_time() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.connect_time)
  return connect_time_;
}
inline void CMsgGC_Match_Result_Player::set_connect_time(::google::protobuf::uint32 value) {
  set_has_connect_time();
  connect_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.connect_time)
}

// -------------------------------------------------------------------

// CMsgGC_Match_Result

// optional uint64 match_id = 1;
inline bool CMsgGC_Match_Result::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Match_Result::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Match_Result::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Match_Result::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.match_id)
  return match_id_;
}
inline void CMsgGC_Match_Result::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.match_id)
}

// optional int32 match_group = 2;
inline bool CMsgGC_Match_Result::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Match_Result::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Match_Result::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Match_Result::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgGC_Match_Result::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.match_group)
  return match_group_;
}
inline void CMsgGC_Match_Result::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.match_group)
}

// optional .CMsgGC_Match_Result.Status status = 3;
inline bool CMsgGC_Match_Result::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Match_Result::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Match_Result::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Match_Result::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CMsgGC_Match_Result_Status CMsgGC_Match_Result::status() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.status)
  return static_cast< ::CMsgGC_Match_Result_Status >(status_);
}
inline void CMsgGC_Match_Result::set_status(::CMsgGC_Match_Result_Status value) {
  assert(::CMsgGC_Match_Result_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.status)
}

// optional uint32 duration = 4;
inline bool CMsgGC_Match_Result::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Match_Result::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Match_Result::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Match_Result::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::duration() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.duration)
  return duration_;
}
inline void CMsgGC_Match_Result::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.duration)
}

// optional uint32 red_score = 5;
inline bool CMsgGC_Match_Result::has_red_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_Match_Result::set_has_red_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_Match_Result::clear_has_red_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_Match_Result::clear_red_score() {
  red_score_ = 0u;
  clear_has_red_score();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::red_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.red_score)
  return red_score_;
}
inline void CMsgGC_Match_Result::set_red_score(::google::protobuf::uint32 value) {
  set_has_red_score();
  red_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.red_score)
}

// optional uint32 blue_score = 6;
inline bool CMsgGC_Match_Result::has_blue_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGC_Match_Result::set_has_blue_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGC_Match_Result::clear_has_blue_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGC_Match_Result::clear_blue_score() {
  blue_score_ = 0u;
  clear_has_blue_score();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::blue_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.blue_score)
  return blue_score_;
}
inline void CMsgGC_Match_Result::set_blue_score(::google::protobuf::uint32 value) {
  set_has_blue_score();
  blue_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.blue_score)
}

// optional uint32 winning_team = 7;
inline bool CMsgGC_Match_Result::has_winning_team() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGC_Match_Result::set_has_winning_team() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGC_Match_Result::clear_has_winning_team() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGC_Match_Result::clear_winning_team() {
  winning_team_ = 0u;
  clear_has_winning_team();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::winning_team() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.winning_team)
  return winning_team_;
}
inline void CMsgGC_Match_Result::set_winning_team(::google::protobuf::uint32 value) {
  set_has_winning_team();
  winning_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.winning_team)
}

// optional uint32 map_index = 8;
inline bool CMsgGC_Match_Result::has_map_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGC_Match_Result::set_has_map_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGC_Match_Result::clear_has_map_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGC_Match_Result::clear_map_index() {
  map_index_ = 0u;
  clear_has_map_index();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::map_index() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.map_index)
  return map_index_;
}
inline void CMsgGC_Match_Result::set_map_index(::google::protobuf::uint32 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.map_index)
}

// optional uint32 game_type = 9 [default = 0];
inline bool CMsgGC_Match_Result::has_game_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGC_Match_Result::set_has_game_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGC_Match_Result::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGC_Match_Result::clear_game_type() {
  game_type_ = 0u;
  clear_has_game_type();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::game_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.game_type)
  return game_type_;
}
inline void CMsgGC_Match_Result::set_game_type(::google::protobuf::uint32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.game_type)
}

// repeated .CMsgGC_Match_Result.Player players = 10;
inline int CMsgGC_Match_Result::players_size() const {
  return players_.size();
}
inline void CMsgGC_Match_Result::clear_players() {
  players_.Clear();
}
inline const ::CMsgGC_Match_Result_Player& CMsgGC_Match_Result::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.players)
  return players_.Get(index);
}
inline ::CMsgGC_Match_Result_Player* CMsgGC_Match_Result::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_Match_Result.players)
  return players_.Mutable(index);
}
inline ::CMsgGC_Match_Result_Player* CMsgGC_Match_Result::add_players() {
  // @@protoc_insertion_point(field_add:CMsgGC_Match_Result.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >&
CMsgGC_Match_Result::players() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Match_Result.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >*
CMsgGC_Match_Result::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Match_Result.players)
  return &players_;
}

// optional uint32 win_reason = 13;
inline bool CMsgGC_Match_Result::has_win_reason() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGC_Match_Result::set_has_win_reason() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGC_Match_Result::clear_has_win_reason() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGC_Match_Result::clear_win_reason() {
  win_reason_ = 0u;
  clear_has_win_reason();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::win_reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.win_reason)
  return win_reason_;
}
inline void CMsgGC_Match_Result::set_win_reason(::google::protobuf::uint32 value) {
  set_has_win_reason();
  win_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.win_reason)
}

// optional uint32 flags = 14;
inline bool CMsgGC_Match_Result::has_flags() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGC_Match_Result::set_has_flags() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGC_Match_Result::clear_has_flags() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGC_Match_Result::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::flags() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.flags)
  return flags_;
}
inline void CMsgGC_Match_Result::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.flags)
}

// optional uint32 bots = 16;
inline bool CMsgGC_Match_Result::has_bots() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGC_Match_Result::set_has_bots() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGC_Match_Result::clear_has_bots() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGC_Match_Result::clear_bots() {
  bots_ = 0u;
  clear_has_bots();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::bots() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.bots)
  return bots_;
}
inline void CMsgGC_Match_Result::set_bots(::google::protobuf::uint32 value) {
  set_has_bots();
  bots_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.bots)
}

// -------------------------------------------------------------------

// CMsgGC_Match_ResultResponse

// -------------------------------------------------------------------

// CEconItemPreviewDataBlock

// optional .CSOEconItem econitem = 1;
inline bool CEconItemPreviewDataBlock::has_econitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_econitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CEconItemPreviewDataBlock::clear_has_econitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CEconItemPreviewDataBlock::clear_econitem() {
  if (econitem_ != NULL) econitem_->::CSOEconItem::Clear();
  clear_has_econitem();
}
inline const ::CSOEconItem& CEconItemPreviewDataBlock::econitem() const {
  // @@protoc_insertion_point(field_get:CEconItemPreviewDataBlock.econitem)
  return econitem_ != NULL ? *econitem_ : *default_instance_->econitem_;
}
inline ::CSOEconItem* CEconItemPreviewDataBlock::mutable_econitem() {
  set_has_econitem();
  if (econitem_ == NULL) econitem_ = new ::CSOEconItem;
  // @@protoc_insertion_point(field_mutable:CEconItemPreviewDataBlock.econitem)
  return econitem_;
}
inline ::CSOEconItem* CEconItemPreviewDataBlock::release_econitem() {
  clear_has_econitem();
  ::CSOEconItem* temp = econitem_;
  econitem_ = NULL;
  return temp;
}
inline void CEconItemPreviewDataBlock::set_allocated_econitem(::CSOEconItem* econitem) {
  delete econitem_;
  econitem_ = econitem;
  if (econitem) {
    set_has_econitem();
  } else {
    clear_has_econitem();
  }
  // @@protoc_insertion_point(field_set_allocated:CEconItemPreviewDataBlock.econitem)
}

// -------------------------------------------------------------------

// CMsgGC_Client2GCEconPreviewDataBlockRequest

// optional uint64 param_s = 1;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_s() {
  param_s_ = GOOGLE_ULONGLONG(0);
  clear_has_param_s();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_s() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_s)
  return param_s_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_s(::google::protobuf::uint64 value) {
  set_has_param_s();
  param_s_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_s)
}

// optional uint64 param_a = 2;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_a() {
  param_a_ = GOOGLE_ULONGLONG(0);
  clear_has_param_a();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_a() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_a)
  return param_a_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_a(::google::protobuf::uint64 value) {
  set_has_param_a();
  param_a_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_a)
}

// optional uint64 param_d = 3;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_d() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_d() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_d() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_d() {
  param_d_ = GOOGLE_ULONGLONG(0);
  clear_has_param_d();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_d() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_d)
  return param_d_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_d(::google::protobuf::uint64 value) {
  set_has_param_d();
  param_d_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_d)
}

// optional uint64 param_m = 4;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_m() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_m() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_m() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_m() {
  param_m_ = GOOGLE_ULONGLONG(0);
  clear_has_param_m();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_m() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_m)
  return param_m_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_m(::google::protobuf::uint64 value) {
  set_has_param_m();
  param_m_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_m)
}

// -------------------------------------------------------------------

// CMsgGC_Client2GCEconPreviewDataBlockResponse

// optional .CEconItemPreviewDataBlock iteminfo = 1;
inline bool CMsgGC_Client2GCEconPreviewDataBlockResponse::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CEconItemPreviewDataBlock::Clear();
  clear_has_iteminfo();
}
inline const ::CEconItemPreviewDataBlock& CMsgGC_Client2GCEconPreviewDataBlockResponse::iteminfo() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::CEconItemPreviewDataBlock* CMsgGC_Client2GCEconPreviewDataBlockResponse::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::CEconItemPreviewDataBlock;
  // @@protoc_insertion_point(field_mutable:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
  return iteminfo_;
}
inline ::CEconItemPreviewDataBlock* CMsgGC_Client2GCEconPreviewDataBlockResponse::release_iteminfo() {
  clear_has_iteminfo();
  ::CEconItemPreviewDataBlock* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
}

// -------------------------------------------------------------------

// CSOTFLadderPlayerStats

// optional uint32 account_id = 1;
inline bool CSOTFLadderPlayerStats::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFLadderPlayerStats::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFLadderPlayerStats::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.account_id)
  return account_id_;
}
inline void CSOTFLadderPlayerStats::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.account_id)
}

// optional int32 match_group = 2;
inline bool CSOTFLadderPlayerStats::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFLadderPlayerStats::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFLadderPlayerStats::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CSOTFLadderPlayerStats::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.match_group)
  return match_group_;
}
inline void CSOTFLadderPlayerStats::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.match_group)
}

// optional uint32 season_id = 3;
inline bool CSOTFLadderPlayerStats::has_season_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_season_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFLadderPlayerStats::clear_has_season_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFLadderPlayerStats::clear_season_id() {
  season_id_ = 0u;
  clear_has_season_id();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::season_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.season_id)
  return season_id_;
}
inline void CSOTFLadderPlayerStats::set_season_id(::google::protobuf::uint32 value) {
  set_has_season_id();
  season_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.season_id)
}

// optional uint32 games = 9;
inline bool CSOTFLadderPlayerStats::has_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFLadderPlayerStats::clear_has_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFLadderPlayerStats::clear_games() {
  games_ = 0u;
  clear_has_games();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::games() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.games)
  return games_;
}
inline void CSOTFLadderPlayerStats::set_games(::google::protobuf::uint32 value) {
  set_has_games();
  games_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.games)
}

// optional uint32 score = 10;
inline bool CSOTFLadderPlayerStats::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFLadderPlayerStats::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFLadderPlayerStats::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score)
  return score_;
}
inline void CSOTFLadderPlayerStats::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score)
}

// optional uint32 kills = 11;
inline bool CSOTFLadderPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFLadderPlayerStats::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills)
  return kills_;
}
inline void CSOTFLadderPlayerStats::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills)
}

// optional uint32 deaths = 12;
inline bool CSOTFLadderPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_deaths() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFLadderPlayerStats::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFLadderPlayerStats::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.deaths)
  return deaths_;
}
inline void CSOTFLadderPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.deaths)
}

// optional uint32 damage = 13;
inline bool CSOTFLadderPlayerStats::has_damage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFLadderPlayerStats::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage)
  return damage_;
}
inline void CSOTFLadderPlayerStats::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage)
}

// optional uint32 healing = 14;
inline bool CSOTFLadderPlayerStats::has_healing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFLadderPlayerStats::clear_healing() {
  healing_ = 0u;
  clear_has_healing();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing)
  return healing_;
}
inline void CSOTFLadderPlayerStats::set_healing(::google::protobuf::uint32 value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing)
}

// optional uint32 support = 15;
inline bool CSOTFLadderPlayerStats::has_support() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFLadderPlayerStats::clear_has_support() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFLadderPlayerStats::clear_support() {
  support_ = 0u;
  clear_has_support();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support)
  return support_;
}
inline void CSOTFLadderPlayerStats::set_support(::google::protobuf::uint32 value) {
  set_has_support();
  support_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support)
}

// optional uint32 score_bronze = 16;
inline bool CSOTFLadderPlayerStats::has_score_bronze() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score_bronze() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFLadderPlayerStats::clear_has_score_bronze() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFLadderPlayerStats::clear_score_bronze() {
  score_bronze_ = 0u;
  clear_has_score_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score_bronze)
  return score_bronze_;
}
inline void CSOTFLadderPlayerStats::set_score_bronze(::google::protobuf::uint32 value) {
  set_has_score_bronze();
  score_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score_bronze)
}

// optional uint32 score_silver = 17;
inline bool CSOTFLadderPlayerStats::has_score_silver() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score_silver() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFLadderPlayerStats::clear_has_score_silver() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFLadderPlayerStats::clear_score_silver() {
  score_silver_ = 0u;
  clear_has_score_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score_silver)
  return score_silver_;
}
inline void CSOTFLadderPlayerStats::set_score_silver(::google::protobuf::uint32 value) {
  set_has_score_silver();
  score_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score_silver)
}

// optional uint32 score_gold = 18;
inline bool CSOTFLadderPlayerStats::has_score_gold() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score_gold() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFLadderPlayerStats::clear_has_score_gold() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFLadderPlayerStats::clear_score_gold() {
  score_gold_ = 0u;
  clear_has_score_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score_gold)
  return score_gold_;
}
inline void CSOTFLadderPlayerStats::set_score_gold(::google::protobuf::uint32 value) {
  set_has_score_gold();
  score_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score_gold)
}

// optional uint32 kills_bronze = 19;
inline bool CSOTFLadderPlayerStats::has_kills_bronze() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills_bronze() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills_bronze() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFLadderPlayerStats::clear_kills_bronze() {
  kills_bronze_ = 0u;
  clear_has_kills_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills_bronze)
  return kills_bronze_;
}
inline void CSOTFLadderPlayerStats::set_kills_bronze(::google::protobuf::uint32 value) {
  set_has_kills_bronze();
  kills_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills_bronze)
}

// optional uint32 kills_silver = 20;
inline bool CSOTFLadderPlayerStats::has_kills_silver() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills_silver() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills_silver() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFLadderPlayerStats::clear_kills_silver() {
  kills_silver_ = 0u;
  clear_has_kills_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills_silver)
  return kills_silver_;
}
inline void CSOTFLadderPlayerStats::set_kills_silver(::google::protobuf::uint32 value) {
  set_has_kills_silver();
  kills_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills_silver)
}

// optional uint32 kills_gold = 21;
inline bool CSOTFLadderPlayerStats::has_kills_gold() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills_gold() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills_gold() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFLadderPlayerStats::clear_kills_gold() {
  kills_gold_ = 0u;
  clear_has_kills_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills_gold)
  return kills_gold_;
}
inline void CSOTFLadderPlayerStats::set_kills_gold(::google::protobuf::uint32 value) {
  set_has_kills_gold();
  kills_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills_gold)
}

// optional uint32 damage_bronze = 22;
inline bool CSOTFLadderPlayerStats::has_damage_bronze() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage_bronze() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage_bronze() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFLadderPlayerStats::clear_damage_bronze() {
  damage_bronze_ = 0u;
  clear_has_damage_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage_bronze)
  return damage_bronze_;
}
inline void CSOTFLadderPlayerStats::set_damage_bronze(::google::protobuf::uint32 value) {
  set_has_damage_bronze();
  damage_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage_bronze)
}

// optional uint32 damage_silver = 23;
inline bool CSOTFLadderPlayerStats::has_damage_silver() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage_silver() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage_silver() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFLadderPlayerStats::clear_damage_silver() {
  damage_silver_ = 0u;
  clear_has_damage_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage_silver)
  return damage_silver_;
}
inline void CSOTFLadderPlayerStats::set_damage_silver(::google::protobuf::uint32 value) {
  set_has_damage_silver();
  damage_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage_silver)
}

// optional uint32 damage_gold = 24;
inline bool CSOTFLadderPlayerStats::has_damage_gold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage_gold() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage_gold() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFLadderPlayerStats::clear_damage_gold() {
  damage_gold_ = 0u;
  clear_has_damage_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage_gold)
  return damage_gold_;
}
inline void CSOTFLadderPlayerStats::set_damage_gold(::google::protobuf::uint32 value) {
  set_has_damage_gold();
  damage_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage_gold)
}

// optional uint32 healing_bronze = 25;
inline bool CSOTFLadderPlayerStats::has_healing_bronze() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing_bronze() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing_bronze() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSOTFLadderPlayerStats::clear_healing_bronze() {
  healing_bronze_ = 0u;
  clear_has_healing_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing_bronze)
  return healing_bronze_;
}
inline void CSOTFLadderPlayerStats::set_healing_bronze(::google::protobuf::uint32 value) {
  set_has_healing_bronze();
  healing_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing_bronze)
}

// optional uint32 healing_silver = 26;
inline bool CSOTFLadderPlayerStats::has_healing_silver() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing_silver() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing_silver() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSOTFLadderPlayerStats::clear_healing_silver() {
  healing_silver_ = 0u;
  clear_has_healing_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing_silver)
  return healing_silver_;
}
inline void CSOTFLadderPlayerStats::set_healing_silver(::google::protobuf::uint32 value) {
  set_has_healing_silver();
  healing_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing_silver)
}

// optional uint32 healing_gold = 27;
inline bool CSOTFLadderPlayerStats::has_healing_gold() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing_gold() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing_gold() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSOTFLadderPlayerStats::clear_healing_gold() {
  healing_gold_ = 0u;
  clear_has_healing_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing_gold)
  return healing_gold_;
}
inline void CSOTFLadderPlayerStats::set_healing_gold(::google::protobuf::uint32 value) {
  set_has_healing_gold();
  healing_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing_gold)
}

// optional uint32 support_bronze = 28;
inline bool CSOTFLadderPlayerStats::has_support_bronze() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support_bronze() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support_bronze() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSOTFLadderPlayerStats::clear_support_bronze() {
  support_bronze_ = 0u;
  clear_has_support_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support_bronze)
  return support_bronze_;
}
inline void CSOTFLadderPlayerStats::set_support_bronze(::google::protobuf::uint32 value) {
  set_has_support_bronze();
  support_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support_bronze)
}

// optional uint32 support_silver = 29;
inline bool CSOTFLadderPlayerStats::has_support_silver() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support_silver() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support_silver() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSOTFLadderPlayerStats::clear_support_silver() {
  support_silver_ = 0u;
  clear_has_support_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support_silver)
  return support_silver_;
}
inline void CSOTFLadderPlayerStats::set_support_silver(::google::protobuf::uint32 value) {
  set_has_support_silver();
  support_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support_silver)
}

// optional uint32 support_gold = 30;
inline bool CSOTFLadderPlayerStats::has_support_gold() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support_gold() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support_gold() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSOTFLadderPlayerStats::clear_support_gold() {
  support_gold_ = 0u;
  clear_has_support_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support_gold)
  return support_gold_;
}
inline void CSOTFLadderPlayerStats::set_support_gold(::google::protobuf::uint32 value) {
  set_has_support_gold();
  support_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support_gold)
}

// -------------------------------------------------------------------

// CSOTFRatingData

// optional uint32 account_id = 1;
inline bool CSOTFRatingData::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFRatingData::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFRatingData::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFRatingData::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFRatingData::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.account_id)
  return account_id_;
}
inline void CSOTFRatingData::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.account_id)
}

// optional int32 rating_type = 2;
inline bool CSOTFRatingData::has_rating_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFRatingData::set_has_rating_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFRatingData::clear_has_rating_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFRatingData::clear_rating_type() {
  rating_type_ = 0;
  clear_has_rating_type();
}
inline ::google::protobuf::int32 CSOTFRatingData::rating_type() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_type)
  return rating_type_;
}
inline void CSOTFRatingData::set_rating_type(::google::protobuf::int32 value) {
  set_has_rating_type();
  rating_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_type)
}

// optional uint32 rating_primary = 3;
inline bool CSOTFRatingData::has_rating_primary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFRatingData::set_has_rating_primary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFRatingData::clear_has_rating_primary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFRatingData::clear_rating_primary() {
  rating_primary_ = 0u;
  clear_has_rating_primary();
}
inline ::google::protobuf::uint32 CSOTFRatingData::rating_primary() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_primary)
  return rating_primary_;
}
inline void CSOTFRatingData::set_rating_primary(::google::protobuf::uint32 value) {
  set_has_rating_primary();
  rating_primary_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_primary)
}

// optional uint32 rating_secondary = 4;
inline bool CSOTFRatingData::has_rating_secondary() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFRatingData::set_has_rating_secondary() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFRatingData::clear_has_rating_secondary() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFRatingData::clear_rating_secondary() {
  rating_secondary_ = 0u;
  clear_has_rating_secondary();
}
inline ::google::protobuf::uint32 CSOTFRatingData::rating_secondary() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_secondary)
  return rating_secondary_;
}
inline void CSOTFRatingData::set_rating_secondary(::google::protobuf::uint32 value) {
  set_has_rating_secondary();
  rating_secondary_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_secondary)
}

// optional uint32 rating_tertiary = 5;
inline bool CSOTFRatingData::has_rating_tertiary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFRatingData::set_has_rating_tertiary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFRatingData::clear_has_rating_tertiary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFRatingData::clear_rating_tertiary() {
  rating_tertiary_ = 0u;
  clear_has_rating_tertiary();
}
inline ::google::protobuf::uint32 CSOTFRatingData::rating_tertiary() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_tertiary)
  return rating_tertiary_;
}
inline void CSOTFRatingData::set_rating_tertiary(::google::protobuf::uint32 value) {
  set_has_rating_tertiary();
  rating_tertiary_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_tertiary)
}

// -------------------------------------------------------------------

// CMsgGC_TFVoteKickPlayerRequest

// optional uint64 target_id = 2;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_target_id() {
  target_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_id();
}
inline ::google::protobuf::uint64 CMsgGC_TFVoteKickPlayerRequest::target_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_TFVoteKickPlayerRequest.target_id)
  return target_id_;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_target_id(::google::protobuf::uint64 value) {
  set_has_target_id();
  target_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_TFVoteKickPlayerRequest.target_id)
}

// optional uint64 voter_id = 3;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_voter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_has_voter_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_has_voter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_voter_id() {
  voter_id_ = GOOGLE_ULONGLONG(0);
  clear_has_voter_id();
}
inline ::google::protobuf::uint64 CMsgGC_TFVoteKickPlayerRequest::voter_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_TFVoteKickPlayerRequest.voter_id)
  return voter_id_;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_voter_id(::google::protobuf::uint64 value) {
  set_has_voter_id();
  voter_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_TFVoteKickPlayerRequest.voter_id)
}

// optional .TFVoteKickReason reason = 4;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_reason() {
  reason_ = -1;
  clear_has_reason();
}
inline ::TFVoteKickReason CMsgGC_TFVoteKickPlayerRequest::reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_TFVoteKickPlayerRequest.reason)
  return static_cast< ::TFVoteKickReason >(reason_);
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_reason(::TFVoteKickReason value) {
  assert(::TFVoteKickReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_TFVoteKickPlayerRequest.reason)
}

// optional uint64 match_id = 5;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGC_TFVoteKickPlayerRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_TFVoteKickPlayerRequest.match_id)
  return match_id_;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_TFVoteKickPlayerRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGC_VoteKickPlayerRequestResponse

// optional bool allowed = 1;
inline bool CMsgGC_VoteKickPlayerRequestResponse::has_allowed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_has_allowed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_has_allowed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_allowed() {
  allowed_ = false;
  clear_has_allowed();
}
inline bool CMsgGC_VoteKickPlayerRequestResponse::allowed() const {
  // @@protoc_insertion_point(field_get:CMsgGC_VoteKickPlayerRequestResponse.allowed)
  return allowed_;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_allowed(bool value) {
  set_has_allowed();
  allowed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_VoteKickPlayerRequestResponse.allowed)
}

// optional bool voter_inhibit = 3;
inline bool CMsgGC_VoteKickPlayerRequestResponse::has_voter_inhibit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_has_voter_inhibit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_has_voter_inhibit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_voter_inhibit() {
  voter_inhibit_ = false;
  clear_has_voter_inhibit();
}
inline bool CMsgGC_VoteKickPlayerRequestResponse::voter_inhibit() const {
  // @@protoc_insertion_point(field_get:CMsgGC_VoteKickPlayerRequestResponse.voter_inhibit)
  return voter_inhibit_;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_voter_inhibit(bool value) {
  set_has_voter_inhibit();
  voter_inhibit_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_VoteKickPlayerRequestResponse.voter_inhibit)
}

// optional bool target_inhibit = 4;
inline bool CMsgGC_VoteKickPlayerRequestResponse::has_target_inhibit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_has_target_inhibit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_has_target_inhibit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_target_inhibit() {
  target_inhibit_ = false;
  clear_has_target_inhibit();
}
inline bool CMsgGC_VoteKickPlayerRequestResponse::target_inhibit() const {
  // @@protoc_insertion_point(field_get:CMsgGC_VoteKickPlayerRequestResponse.target_inhibit)
  return target_inhibit_;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_target_inhibit(bool value) {
  set_has_target_inhibit();
  target_inhibit_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_VoteKickPlayerRequestResponse.target_inhibit)
}

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry

// optional uint32 rank = 1;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::rank() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.rank)
  return rank_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.rank)
}

// optional uint32 records = 2;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_records() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_records() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_records() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_records() {
  records_ = 0u;
  clear_has_records();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::records() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.records)
  return records_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_records(::google::protobuf::uint32 value) {
  set_has_records();
  records_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.records)
}

// optional uint32 avg_score = 3;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_score() {
  avg_score_ = 0u;
  clear_has_avg_score();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_score)
  return avg_score_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_score(::google::protobuf::uint32 value) {
  set_has_avg_score();
  avg_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_score)
}

// optional uint32 stdev_score = 4;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_score() {
  stdev_score_ = 0u;
  clear_has_stdev_score();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_score)
  return stdev_score_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_score(::google::protobuf::uint32 value) {
  set_has_stdev_score();
  stdev_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_score)
}

// optional uint32 avg_kills = 5;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_kills() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_kills() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_kills() {
  avg_kills_ = 0u;
  clear_has_avg_kills();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_kills)
  return avg_kills_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_kills(::google::protobuf::uint32 value) {
  set_has_avg_kills();
  avg_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_kills)
}

// optional uint32 stdev_kills = 6;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_kills() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_kills() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_kills() {
  stdev_kills_ = 0u;
  clear_has_stdev_kills();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_kills)
  return stdev_kills_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_kills(::google::protobuf::uint32 value) {
  set_has_stdev_kills();
  stdev_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_kills)
}

// optional uint32 avg_damage = 7;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_damage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_damage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_damage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_damage() {
  avg_damage_ = 0u;
  clear_has_avg_damage();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_damage() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_damage)
  return avg_damage_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_damage(::google::protobuf::uint32 value) {
  set_has_avg_damage();
  avg_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_damage)
}

// optional uint32 stdev_damage = 8;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_damage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_damage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_damage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_damage() {
  stdev_damage_ = 0u;
  clear_has_stdev_damage();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_damage() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_damage)
  return stdev_damage_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_damage(::google::protobuf::uint32 value) {
  set_has_stdev_damage();
  stdev_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_damage)
}

// optional uint32 avg_healing = 9;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_healing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_healing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_healing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_healing() {
  avg_healing_ = 0u;
  clear_has_avg_healing();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_healing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_healing)
  return avg_healing_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_healing(::google::protobuf::uint32 value) {
  set_has_avg_healing();
  avg_healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_healing)
}

// optional uint32 stdev_healing = 10;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_healing() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_healing() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_healing() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_healing() {
  stdev_healing_ = 0u;
  clear_has_stdev_healing();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_healing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_healing)
  return stdev_healing_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_healing(::google::protobuf::uint32 value) {
  set_has_stdev_healing();
  stdev_healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_healing)
}

// optional uint32 avg_support = 11;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_support() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_support() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_support() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_support() {
  avg_support_ = 0u;
  clear_has_avg_support();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_support() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_support)
  return avg_support_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_support(::google::protobuf::uint32 value) {
  set_has_avg_support();
  avg_support_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_support)
}

// optional uint32 stdev_support = 12;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_support() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_support() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_support() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_support() {
  stdev_support_ = 0u;
  clear_has_stdev_support();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_support() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_support)
  return stdev_support_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_support(::google::protobuf::uint32 value) {
  set_has_stdev_support();
  stdev_support_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_support)
}

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup_Response

// repeated .CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry rankdata = 1;
inline int CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata_size() const {
  return rankdata_.size();
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response::clear_rankdata() {
  rankdata_.Clear();
}
inline const ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_.Get(index);
}
inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* CMsgGC_DailyCompetitiveStatsRollup_Response::mutable_rankdata(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_.Mutable(index);
}
inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* CMsgGC_DailyCompetitiveStatsRollup_Response::add_rankdata() {
  // @@protoc_insertion_point(field_add:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >&
CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata() const {
  // @@protoc_insertion_point(field_list:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >*
CMsgGC_DailyCompetitiveStatsRollup_Response::mutable_rankdata() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return &rankdata_;
}

// -------------------------------------------------------------------

// CMsgGC_ReportPlayer

// optional uint32 account_id_target = 1;
inline bool CMsgGC_ReportPlayer::has_account_id_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_ReportPlayer::set_has_account_id_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_ReportPlayer::clear_has_account_id_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_ReportPlayer::clear_account_id_target() {
  account_id_target_ = 0u;
  clear_has_account_id_target();
}
inline ::google::protobuf::uint32 CMsgGC_ReportPlayer::account_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgGC_ReportPlayer.account_id_target)
  return account_id_target_;
}
inline void CMsgGC_ReportPlayer::set_account_id_target(::google::protobuf::uint32 value) {
  set_has_account_id_target();
  account_id_target_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_ReportPlayer.account_id_target)
}

// optional .CMsgGC_ReportPlayer.EReason reason = 2;
inline bool CMsgGC_ReportPlayer::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_ReportPlayer::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_ReportPlayer::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_ReportPlayer::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer::reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_ReportPlayer.reason)
  return static_cast< ::CMsgGC_ReportPlayer_EReason >(reason_);
}
inline void CMsgGC_ReportPlayer::set_reason(::CMsgGC_ReportPlayer_EReason value) {
  assert(::CMsgGC_ReportPlayer_EReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_ReportPlayer.reason)
}

// -------------------------------------------------------------------

// CSOTFMatchResultPlayerStats

// optional uint64 match_id = 1;
inline bool CSOTFMatchResultPlayerStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFMatchResultPlayerStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CSOTFMatchResultPlayerStats::match_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.match_id)
  return match_id_;
}
inline void CSOTFMatchResultPlayerStats::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.match_id)
}

// optional uint32 account_id = 2;
inline bool CSOTFMatchResultPlayerStats::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFMatchResultPlayerStats::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.account_id)
  return account_id_;
}
inline void CSOTFMatchResultPlayerStats::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.account_id)
}

// optional int32 match_group = 3;
inline bool CSOTFMatchResultPlayerStats::has_match_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_match_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFMatchResultPlayerStats::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CSOTFMatchResultPlayerStats::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.match_group)
  return match_group_;
}
inline void CSOTFMatchResultPlayerStats::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.match_group)
}

// optional uint32 endtime = 4;
inline bool CSOTFMatchResultPlayerStats::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFMatchResultPlayerStats::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::endtime() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.endtime)
  return endtime_;
}
inline void CSOTFMatchResultPlayerStats::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.endtime)
}

// optional uint32 season_id = 5;
inline bool CSOTFMatchResultPlayerStats::has_season_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_season_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_season_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFMatchResultPlayerStats::clear_season_id() {
  season_id_ = 0u;
  clear_has_season_id();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::season_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.season_id)
  return season_id_;
}
inline void CSOTFMatchResultPlayerStats::set_season_id(::google::protobuf::uint32 value) {
  set_has_season_id();
  season_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.season_id)
}

// optional uint32 status = 6;
inline bool CSOTFMatchResultPlayerStats::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFMatchResultPlayerStats::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::status() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.status)
  return status_;
}
inline void CSOTFMatchResultPlayerStats::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.status)
}

// optional uint32 original_party_id = 7;
inline bool CSOTFMatchResultPlayerStats::has_original_party_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_original_party_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_original_party_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFMatchResultPlayerStats::clear_original_party_id() {
  original_party_id_ = 0u;
  clear_has_original_party_id();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::original_party_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.original_party_id)
  return original_party_id_;
}
inline void CSOTFMatchResultPlayerStats::set_original_party_id(::google::protobuf::uint32 value) {
  set_has_original_party_id();
  original_party_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.original_party_id)
}

// optional uint32 team = 8;
inline bool CSOTFMatchResultPlayerStats::has_team() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_team() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_team() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFMatchResultPlayerStats::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::team() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.team)
  return team_;
}
inline void CSOTFMatchResultPlayerStats::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.team)
}

// optional uint32 score = 9;
inline bool CSOTFMatchResultPlayerStats::has_score() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_score() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_score() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFMatchResultPlayerStats::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::score() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.score)
  return score_;
}
inline void CSOTFMatchResultPlayerStats::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.score)
}

// optional uint32 ping = 10;
inline bool CSOTFMatchResultPlayerStats::has_ping() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_ping() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_ping() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFMatchResultPlayerStats::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::ping() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.ping)
  return ping_;
}
inline void CSOTFMatchResultPlayerStats::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.ping)
}

// optional uint32 flags = 11;
inline bool CSOTFMatchResultPlayerStats::has_flags() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_flags() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_flags() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFMatchResultPlayerStats::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::flags() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.flags)
  return flags_;
}
inline void CSOTFMatchResultPlayerStats::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.flags)
}

// optional uint32 display_rating = 12;
inline bool CSOTFMatchResultPlayerStats::has_display_rating() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_display_rating() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_display_rating() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFMatchResultPlayerStats::clear_display_rating() {
  display_rating_ = 0u;
  clear_has_display_rating();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::display_rating() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.display_rating)
  return display_rating_;
}
inline void CSOTFMatchResultPlayerStats::set_display_rating(::google::protobuf::uint32 value) {
  set_has_display_rating();
  display_rating_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.display_rating)
}

// optional int32 display_rating_change = 13;
inline bool CSOTFMatchResultPlayerStats::has_display_rating_change() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_display_rating_change() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_display_rating_change() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFMatchResultPlayerStats::clear_display_rating_change() {
  display_rating_change_ = 0;
  clear_has_display_rating_change();
}
inline ::google::protobuf::int32 CSOTFMatchResultPlayerStats::display_rating_change() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.display_rating_change)
  return display_rating_change_;
}
inline void CSOTFMatchResultPlayerStats::set_display_rating_change(::google::protobuf::int32 value) {
  set_has_display_rating_change();
  display_rating_change_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.display_rating_change)
}

// optional uint32 rank = 14;
inline bool CSOTFMatchResultPlayerStats::has_rank() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_rank() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_rank() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFMatchResultPlayerStats::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::rank() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.rank)
  return rank_;
}
inline void CSOTFMatchResultPlayerStats::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.rank)
}

// optional uint32 classes_played = 15;
inline bool CSOTFMatchResultPlayerStats::has_classes_played() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_classes_played() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_classes_played() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFMatchResultPlayerStats::clear_classes_played() {
  classes_played_ = 0u;
  clear_has_classes_played();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::classes_played() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.classes_played)
  return classes_played_;
}
inline void CSOTFMatchResultPlayerStats::set_classes_played(::google::protobuf::uint32 value) {
  set_has_classes_played();
  classes_played_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.classes_played)
}

// optional uint32 kills = 16;
inline bool CSOTFMatchResultPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_kills() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_kills() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFMatchResultPlayerStats::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.kills)
  return kills_;
}
inline void CSOTFMatchResultPlayerStats::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.kills)
}

// optional uint32 deaths = 17;
inline bool CSOTFMatchResultPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_deaths() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_deaths() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFMatchResultPlayerStats::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.deaths)
  return deaths_;
}
inline void CSOTFMatchResultPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.deaths)
}

// optional uint32 damage = 18;
inline bool CSOTFMatchResultPlayerStats::has_damage() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_damage() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_damage() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFMatchResultPlayerStats::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::damage() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.damage)
  return damage_;
}
inline void CSOTFMatchResultPlayerStats::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.damage)
}

// optional uint32 healing = 19;
inline bool CSOTFMatchResultPlayerStats::has_healing() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_healing() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_healing() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFMatchResultPlayerStats::clear_healing() {
  healing_ = 0u;
  clear_has_healing();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::healing() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.healing)
  return healing_;
}
inline void CSOTFMatchResultPlayerStats::set_healing(::google::protobuf::uint32 value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.healing)
}

// optional uint32 support = 20;
inline bool CSOTFMatchResultPlayerStats::has_support() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_support() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_support() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSOTFMatchResultPlayerStats::clear_support() {
  support_ = 0u;
  clear_has_support();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::support() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.support)
  return support_;
}
inline void CSOTFMatchResultPlayerStats::set_support(::google::protobuf::uint32 value) {
  set_has_support();
  support_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.support)
}

// optional uint32 score_medal = 21;
inline bool CSOTFMatchResultPlayerStats::has_score_medal() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_score_medal() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_score_medal() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSOTFMatchResultPlayerStats::clear_score_medal() {
  score_medal_ = 0u;
  clear_has_score_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::score_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.score_medal)
  return score_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_score_medal(::google::protobuf::uint32 value) {
  set_has_score_medal();
  score_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.score_medal)
}

// optional uint32 kills_medal = 22;
inline bool CSOTFMatchResultPlayerStats::has_kills_medal() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_kills_medal() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_kills_medal() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSOTFMatchResultPlayerStats::clear_kills_medal() {
  kills_medal_ = 0u;
  clear_has_kills_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::kills_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.kills_medal)
  return kills_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_kills_medal(::google::protobuf::uint32 value) {
  set_has_kills_medal();
  kills_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.kills_medal)
}

// optional uint32 damage_medal = 23;
inline bool CSOTFMatchResultPlayerStats::has_damage_medal() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_damage_medal() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_damage_medal() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSOTFMatchResultPlayerStats::clear_damage_medal() {
  damage_medal_ = 0u;
  clear_has_damage_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::damage_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.damage_medal)
  return damage_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_damage_medal(::google::protobuf::uint32 value) {
  set_has_damage_medal();
  damage_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.damage_medal)
}

// optional uint32 healing_medal = 24;
inline bool CSOTFMatchResultPlayerStats::has_healing_medal() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_healing_medal() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_healing_medal() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSOTFMatchResultPlayerStats::clear_healing_medal() {
  healing_medal_ = 0u;
  clear_has_healing_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::healing_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.healing_medal)
  return healing_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_healing_medal(::google::protobuf::uint32 value) {
  set_has_healing_medal();
  healing_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.healing_medal)
}

// optional uint32 support_medal = 25;
inline bool CSOTFMatchResultPlayerStats::has_support_medal() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_support_medal() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_support_medal() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_support_medal() {
  support_medal_ = 0u;
  clear_has_support_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::support_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.support_medal)
  return support_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_support_medal(::google::protobuf::uint32 value) {
  set_has_support_medal();
  support_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.support_medal)
}

// optional uint32 map_index = 26;
inline bool CSOTFMatchResultPlayerStats::has_map_index() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_map_index() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_map_index() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_map_index() {
  map_index_ = 0u;
  clear_has_map_index();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::map_index() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.map_index)
  return map_index_;
}
inline void CSOTFMatchResultPlayerStats::set_map_index(::google::protobuf::uint32 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.map_index)
}

// optional uint32 winning_team = 27;
inline bool CSOTFMatchResultPlayerStats::has_winning_team() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_winning_team() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_winning_team() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_winning_team() {
  winning_team_ = 0u;
  clear_has_winning_team();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::winning_team() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.winning_team)
  return winning_team_;
}
inline void CSOTFMatchResultPlayerStats::set_winning_team(::google::protobuf::uint32 value) {
  set_has_winning_team();
  winning_team_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.winning_team)
}

// -------------------------------------------------------------------

// CMsgGCRequestMatchMakerStats

// -------------------------------------------------------------------

// CMsgGCDataCenterPopulation

// optional string name = 1;
inline bool CMsgGCDataCenterPopulation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCDataCenterPopulation::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCDataCenterPopulation::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCDataCenterPopulation::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCDataCenterPopulation::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPopulation.name)
  return *name_;
}
inline void CMsgGCDataCenterPopulation::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPopulation.name)
}
inline void CMsgGCDataCenterPopulation::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCDataCenterPopulation.name)
}
inline void CMsgGCDataCenterPopulation::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCDataCenterPopulation.name)
}
inline ::std::string* CMsgGCDataCenterPopulation::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCDataCenterPopulation.name)
  return name_;
}
inline ::std::string* CMsgGCDataCenterPopulation::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCDataCenterPopulation::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCDataCenterPopulation.name)
}

// optional float health_ratio = 2;
inline bool CMsgGCDataCenterPopulation::has_health_ratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCDataCenterPopulation::set_has_health_ratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCDataCenterPopulation::clear_has_health_ratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCDataCenterPopulation::clear_health_ratio() {
  health_ratio_ = 0;
  clear_has_health_ratio();
}
inline float CMsgGCDataCenterPopulation::health_ratio() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPopulation.health_ratio)
  return health_ratio_;
}
inline void CMsgGCDataCenterPopulation::set_health_ratio(float value) {
  set_has_health_ratio();
  health_ratio_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPopulation.health_ratio)
}

// -------------------------------------------------------------------

// CMsgGCMatchGroupDataCenterPopulation

// repeated .CMsgGCDataCenterPopulation data_center_population = 1;
inline int CMsgGCMatchGroupDataCenterPopulation::data_center_population_size() const {
  return data_center_population_.size();
}
inline void CMsgGCMatchGroupDataCenterPopulation::clear_data_center_population() {
  data_center_population_.Clear();
}
inline const ::CMsgGCDataCenterPopulation& CMsgGCMatchGroupDataCenterPopulation::data_center_population(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_.Get(index);
}
inline ::CMsgGCDataCenterPopulation* CMsgGCMatchGroupDataCenterPopulation::mutable_data_center_population(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_.Mutable(index);
}
inline ::CMsgGCDataCenterPopulation* CMsgGCMatchGroupDataCenterPopulation::add_data_center_population() {
  // @@protoc_insertion_point(field_add:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >&
CMsgGCMatchGroupDataCenterPopulation::data_center_population() const {
  // @@protoc_insertion_point(field_list:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >*
CMsgGCMatchGroupDataCenterPopulation::mutable_data_center_population() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return &data_center_population_;
}

// -------------------------------------------------------------------

// CMsgGCMatchMakerStatsResponse

// repeated uint32 map_count = 1;
inline int CMsgGCMatchMakerStatsResponse::map_count_size() const {
  return map_count_.size();
}
inline void CMsgGCMatchMakerStatsResponse::clear_map_count() {
  map_count_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCMatchMakerStatsResponse::map_count(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchMakerStatsResponse.map_count)
  return map_count_.Get(index);
}
inline void CMsgGCMatchMakerStatsResponse::set_map_count(int index, ::google::protobuf::uint32 value) {
  map_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCMatchMakerStatsResponse.map_count)
}
inline void CMsgGCMatchMakerStatsResponse::add_map_count(::google::protobuf::uint32 value) {
  map_count_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCMatchMakerStatsResponse.map_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCMatchMakerStatsResponse::map_count() const {
  // @@protoc_insertion_point(field_list:CMsgGCMatchMakerStatsResponse.map_count)
  return map_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCMatchMakerStatsResponse::mutable_map_count() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMatchMakerStatsResponse.map_count)
  return &map_count_;
}

// repeated .CMsgGCMatchGroupDataCenterPopulation matchgroup_data_center_population = 2;
inline int CMsgGCMatchMakerStatsResponse::matchgroup_data_center_population_size() const {
  return matchgroup_data_center_population_.size();
}
inline void CMsgGCMatchMakerStatsResponse::clear_matchgroup_data_center_population() {
  matchgroup_data_center_population_.Clear();
}
inline const ::CMsgGCMatchGroupDataCenterPopulation& CMsgGCMatchMakerStatsResponse::matchgroup_data_center_population(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_.Get(index);
}
inline ::CMsgGCMatchGroupDataCenterPopulation* CMsgGCMatchMakerStatsResponse::mutable_matchgroup_data_center_population(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_.Mutable(index);
}
inline ::CMsgGCMatchGroupDataCenterPopulation* CMsgGCMatchMakerStatsResponse::add_matchgroup_data_center_population() {
  // @@protoc_insertion_point(field_add:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >&
CMsgGCMatchMakerStatsResponse::matchgroup_data_center_population() const {
  // @@protoc_insertion_point(field_list:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >*
CMsgGCMatchMakerStatsResponse::mutable_matchgroup_data_center_population() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return &matchgroup_data_center_population_;
}

// -------------------------------------------------------------------

// CMsgGCMatchHistoryLoad

// optional .ETFMatchGroup match_group = 1 [default = k_eTFMatchGroup_Invalid];
inline bool CMsgGCMatchHistoryLoad::has_match_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchHistoryLoad::set_has_match_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchHistoryLoad::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchHistoryLoad::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::ETFMatchGroup CMsgGCMatchHistoryLoad::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchHistoryLoad.match_group)
  return static_cast< ::ETFMatchGroup >(match_group_);
}
inline void CMsgGCMatchHistoryLoad::set_match_group(::ETFMatchGroup value) {
  assert(::ETFMatchGroup_IsValid(value));
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMatchHistoryLoad.match_group)
}

// -------------------------------------------------------------------

// CMsgGCDataCenterPing_Update_PingEntry

// optional string name = 1;
inline bool CMsgGCDataCenterPing_Update_PingEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCDataCenterPing_Update_PingEntry::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.PingEntry.name)
  return *name_;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPing_Update.PingEntry.name)
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCDataCenterPing_Update.PingEntry.name)
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCDataCenterPing_Update.PingEntry.name)
}
inline ::std::string* CMsgGCDataCenterPing_Update_PingEntry::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCDataCenterPing_Update.PingEntry.name)
  return name_;
}
inline ::std::string* CMsgGCDataCenterPing_Update_PingEntry::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCDataCenterPing_Update.PingEntry.name)
}

// optional uint32 ping = 2;
inline bool CMsgGCDataCenterPing_Update_PingEntry::has_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_has_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_has_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CMsgGCDataCenterPing_Update_PingEntry::ping() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.PingEntry.ping)
  return ping_;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPing_Update.PingEntry.ping)
}

// optional .CMsgGCDataCenterPing_Update.Status ping_status = 3 [default = Normal];
inline bool CMsgGCDataCenterPing_Update_PingEntry::has_ping_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_has_ping_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_has_ping_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_ping_status() {
  ping_status_ = 1;
  clear_has_ping_status();
}
inline ::CMsgGCDataCenterPing_Update_Status CMsgGCDataCenterPing_Update_PingEntry::ping_status() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.PingEntry.ping_status)
  return static_cast< ::CMsgGCDataCenterPing_Update_Status >(ping_status_);
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_ping_status(::CMsgGCDataCenterPing_Update_Status value) {
  assert(::CMsgGCDataCenterPing_Update_Status_IsValid(value));
  set_has_ping_status();
  ping_status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPing_Update.PingEntry.ping_status)
}

// -------------------------------------------------------------------

// CMsgGCDataCenterPing_Update

// repeated .CMsgGCDataCenterPing_Update.PingEntry pingdata = 1;
inline int CMsgGCDataCenterPing_Update::pingdata_size() const {
  return pingdata_.size();
}
inline void CMsgGCDataCenterPing_Update::clear_pingdata() {
  pingdata_.Clear();
}
inline const ::CMsgGCDataCenterPing_Update_PingEntry& CMsgGCDataCenterPing_Update::pingdata(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_.Get(index);
}
inline ::CMsgGCDataCenterPing_Update_PingEntry* CMsgGCDataCenterPing_Update::mutable_pingdata(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_.Mutable(index);
}
inline ::CMsgGCDataCenterPing_Update_PingEntry* CMsgGCDataCenterPing_Update::add_pingdata() {
  // @@protoc_insertion_point(field_add:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >&
CMsgGCDataCenterPing_Update::pingdata() const {
  // @@protoc_insertion_point(field_list:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >*
CMsgGCDataCenterPing_Update::mutable_pingdata() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCDataCenterPing_Update.pingdata)
  return &pingdata_;
}

// -------------------------------------------------------------------

// CMsgGC_KickPlayerFromLobby

// optional uint64 targetID = 1;
inline bool CMsgGC_KickPlayerFromLobby::has_targetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_KickPlayerFromLobby::set_has_targetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_KickPlayerFromLobby::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_KickPlayerFromLobby::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 CMsgGC_KickPlayerFromLobby::targetid() const {
  // @@protoc_insertion_point(field_get:CMsgGC_KickPlayerFromLobby.targetID)
  return targetid_;
}
inline void CMsgGC_KickPlayerFromLobby::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_KickPlayerFromLobby.targetID)
}

// -------------------------------------------------------------------

// CMsgGCSurveyRequest

// optional .SurveyQuestionType question_type = 1;
inline bool CMsgGCSurveyRequest::has_question_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSurveyRequest::set_has_question_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSurveyRequest::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSurveyRequest::clear_question_type() {
  question_type_ = 0;
  clear_has_question_type();
}
inline ::SurveyQuestionType CMsgGCSurveyRequest::question_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyRequest.question_type)
  return static_cast< ::SurveyQuestionType >(question_type_);
}
inline void CMsgGCSurveyRequest::set_question_type(::SurveyQuestionType value) {
  assert(::SurveyQuestionType_IsValid(value));
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyRequest.question_type)
}

// optional uint64 match_id = 2;
inline bool CMsgGCSurveyRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCSurveyRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCSurveyRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCSurveyRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCSurveyRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyRequest.match_id)
  return match_id_;
}
inline void CMsgGCSurveyRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGCSurveyResponse

// optional .SurveyQuestionType question_type = 1;
inline bool CMsgGCSurveyResponse::has_question_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSurveyResponse::set_has_question_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSurveyResponse::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSurveyResponse::clear_question_type() {
  question_type_ = 0;
  clear_has_question_type();
}
inline ::SurveyQuestionType CMsgGCSurveyResponse::question_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyResponse.question_type)
  return static_cast< ::SurveyQuestionType >(question_type_);
}
inline void CMsgGCSurveyResponse::set_question_type(::SurveyQuestionType value) {
  assert(::SurveyQuestionType_IsValid(value));
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyResponse.question_type)
}

// optional uint64 match_id = 2;
inline bool CMsgGCSurveyResponse::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCSurveyResponse::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCSurveyResponse::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCSurveyResponse::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCSurveyResponse::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyResponse.match_id)
  return match_id_;
}
inline void CMsgGCSurveyResponse::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyResponse.match_id)
}

// optional int32 response = 3;
inline bool CMsgGCSurveyResponse::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCSurveyResponse::set_has_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCSurveyResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCSurveyResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline ::google::protobuf::int32 CMsgGCSurveyResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyResponse.response)
  return response_;
}
inline void CMsgGCSurveyResponse::set_response(::google::protobuf::int32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyResponse.response)
}

// -------------------------------------------------------------------

// CSOQuestMapNode

// optional uint32 account_id = 1;
inline bool CSOQuestMapNode::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOQuestMapNode::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOQuestMapNode::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOQuestMapNode::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOQuestMapNode::account_id() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.account_id)
  return account_id_;
}
inline void CSOQuestMapNode::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.account_id)
}

// optional uint32 defindex = 3;
inline bool CSOQuestMapNode::has_defindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOQuestMapNode::set_has_defindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOQuestMapNode::clear_has_defindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOQuestMapNode::clear_defindex() {
  defindex_ = 0u;
  clear_has_defindex();
}
inline ::google::protobuf::uint32 CSOQuestMapNode::defindex() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.defindex)
  return defindex_;
}
inline void CSOQuestMapNode::set_defindex(::google::protobuf::uint32 value) {
  set_has_defindex();
  defindex_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.defindex)
}

// optional uint32 node_id = 4;
inline bool CSOQuestMapNode::has_node_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOQuestMapNode::set_has_node_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOQuestMapNode::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOQuestMapNode::clear_node_id() {
  node_id_ = 0u;
  clear_has_node_id();
}
inline ::google::protobuf::uint32 CSOQuestMapNode::node_id() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.node_id)
  return node_id_;
}
inline void CSOQuestMapNode::set_node_id(::google::protobuf::uint32 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.node_id)
}

// optional bool star_0_earned = 6 [default = false];
inline bool CSOQuestMapNode::has_star_0_earned() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOQuestMapNode::set_has_star_0_earned() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOQuestMapNode::clear_has_star_0_earned() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOQuestMapNode::clear_star_0_earned() {
  star_0_earned_ = false;
  clear_has_star_0_earned();
}
inline bool CSOQuestMapNode::star_0_earned() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.star_0_earned)
  return star_0_earned_;
}
inline void CSOQuestMapNode::set_star_0_earned(bool value) {
  set_has_star_0_earned();
  star_0_earned_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.star_0_earned)
}

// optional bool star_1_earned = 7 [default = false];
inline bool CSOQuestMapNode::has_star_1_earned() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOQuestMapNode::set_has_star_1_earned() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOQuestMapNode::clear_has_star_1_earned() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOQuestMapNode::clear_star_1_earned() {
  star_1_earned_ = false;
  clear_has_star_1_earned();
}
inline bool CSOQuestMapNode::star_1_earned() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.star_1_earned)
  return star_1_earned_;
}
inline void CSOQuestMapNode::set_star_1_earned(bool value) {
  set_has_star_1_earned();
  star_1_earned_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.star_1_earned)
}

// optional bool star_2_earned = 8 [default = false];
inline bool CSOQuestMapNode::has_star_2_earned() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOQuestMapNode::set_has_star_2_earned() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOQuestMapNode::clear_has_star_2_earned() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOQuestMapNode::clear_star_2_earned() {
  star_2_earned_ = false;
  clear_has_star_2_earned();
}
inline bool CSOQuestMapNode::star_2_earned() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.star_2_earned)
  return star_2_earned_;
}
inline void CSOQuestMapNode::set_star_2_earned(bool value) {
  set_has_star_2_earned();
  star_2_earned_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.star_2_earned)
}

// optional bool loot_claimed = 9 [default = false];
inline bool CSOQuestMapNode::has_loot_claimed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOQuestMapNode::set_has_loot_claimed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOQuestMapNode::clear_has_loot_claimed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOQuestMapNode::clear_loot_claimed() {
  loot_claimed_ = false;
  clear_has_loot_claimed();
}
inline bool CSOQuestMapNode::loot_claimed() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.loot_claimed)
  return loot_claimed_;
}
inline void CSOQuestMapNode::set_loot_claimed(bool value) {
  set_has_loot_claimed();
  loot_claimed_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.loot_claimed)
}

// optional uint32 selected_quest_def = 10 [default = 0];
inline bool CSOQuestMapNode::has_selected_quest_def() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOQuestMapNode::set_has_selected_quest_def() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOQuestMapNode::clear_has_selected_quest_def() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOQuestMapNode::clear_selected_quest_def() {
  selected_quest_def_ = 0u;
  clear_has_selected_quest_def();
}
inline ::google::protobuf::uint32 CSOQuestMapNode::selected_quest_def() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.selected_quest_def)
  return selected_quest_def_;
}
inline void CSOQuestMapNode::set_selected_quest_def(::google::protobuf::uint32 value) {
  set_has_selected_quest_def();
  selected_quest_def_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.selected_quest_def)
}

// optional uint32 map_cycle = 11;
inline bool CSOQuestMapNode::has_map_cycle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOQuestMapNode::set_has_map_cycle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOQuestMapNode::clear_has_map_cycle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOQuestMapNode::clear_map_cycle() {
  map_cycle_ = 0u;
  clear_has_map_cycle();
}
inline ::google::protobuf::uint32 CSOQuestMapNode::map_cycle() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapNode.map_cycle)
  return map_cycle_;
}
inline void CSOQuestMapNode::set_map_cycle(::google::protobuf::uint32 value) {
  set_has_map_cycle();
  map_cycle_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapNode.map_cycle)
}

// -------------------------------------------------------------------

// CSOQuest

// optional uint32 account_id = 1;
inline bool CSOQuest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOQuest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOQuest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOQuest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOQuest::account_id() const {
  // @@protoc_insertion_point(field_get:CSOQuest.account_id)
  return account_id_;
}
inline void CSOQuest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.account_id)
}

// optional uint64 quest_id = 2;
inline bool CSOQuest::has_quest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOQuest::set_has_quest_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOQuest::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOQuest::clear_quest_id() {
  quest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_quest_id();
}
inline ::google::protobuf::uint64 CSOQuest::quest_id() const {
  // @@protoc_insertion_point(field_get:CSOQuest.quest_id)
  return quest_id_;
}
inline void CSOQuest::set_quest_id(::google::protobuf::uint64 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.quest_id)
}

// optional uint32 defindex = 3;
inline bool CSOQuest::has_defindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOQuest::set_has_defindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOQuest::clear_has_defindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOQuest::clear_defindex() {
  defindex_ = 0u;
  clear_has_defindex();
}
inline ::google::protobuf::uint32 CSOQuest::defindex() const {
  // @@protoc_insertion_point(field_get:CSOQuest.defindex)
  return defindex_;
}
inline void CSOQuest::set_defindex(::google::protobuf::uint32 value) {
  set_has_defindex();
  defindex_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.defindex)
}

// optional bool active = 4 [default = false];
inline bool CSOQuest::has_active() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOQuest::set_has_active() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOQuest::clear_has_active() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOQuest::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CSOQuest::active() const {
  // @@protoc_insertion_point(field_get:CSOQuest.active)
  return active_;
}
inline void CSOQuest::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.active)
}

// optional uint32 points_0 = 5;
inline bool CSOQuest::has_points_0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOQuest::set_has_points_0() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOQuest::clear_has_points_0() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOQuest::clear_points_0() {
  points_0_ = 0u;
  clear_has_points_0();
}
inline ::google::protobuf::uint32 CSOQuest::points_0() const {
  // @@protoc_insertion_point(field_get:CSOQuest.points_0)
  return points_0_;
}
inline void CSOQuest::set_points_0(::google::protobuf::uint32 value) {
  set_has_points_0();
  points_0_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.points_0)
}

// optional uint32 points_1 = 6;
inline bool CSOQuest::has_points_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOQuest::set_has_points_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOQuest::clear_has_points_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOQuest::clear_points_1() {
  points_1_ = 0u;
  clear_has_points_1();
}
inline ::google::protobuf::uint32 CSOQuest::points_1() const {
  // @@protoc_insertion_point(field_get:CSOQuest.points_1)
  return points_1_;
}
inline void CSOQuest::set_points_1(::google::protobuf::uint32 value) {
  set_has_points_1();
  points_1_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.points_1)
}

// optional uint32 points_2 = 7;
inline bool CSOQuest::has_points_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOQuest::set_has_points_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOQuest::clear_has_points_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOQuest::clear_points_2() {
  points_2_ = 0u;
  clear_has_points_2();
}
inline ::google::protobuf::uint32 CSOQuest::points_2() const {
  // @@protoc_insertion_point(field_get:CSOQuest.points_2)
  return points_2_;
}
inline void CSOQuest::set_points_2(::google::protobuf::uint32 value) {
  set_has_points_2();
  points_2_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.points_2)
}

// optional uint32 quest_map_node_source_id = 8;
inline bool CSOQuest::has_quest_map_node_source_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOQuest::set_has_quest_map_node_source_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOQuest::clear_has_quest_map_node_source_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOQuest::clear_quest_map_node_source_id() {
  quest_map_node_source_id_ = 0u;
  clear_has_quest_map_node_source_id();
}
inline ::google::protobuf::uint32 CSOQuest::quest_map_node_source_id() const {
  // @@protoc_insertion_point(field_get:CSOQuest.quest_map_node_source_id)
  return quest_map_node_source_id_;
}
inline void CSOQuest::set_quest_map_node_source_id(::google::protobuf::uint32 value) {
  set_has_quest_map_node_source_id();
  quest_map_node_source_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.quest_map_node_source_id)
}

// optional uint32 map_cycle = 9;
inline bool CSOQuest::has_map_cycle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOQuest::set_has_map_cycle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOQuest::clear_has_map_cycle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOQuest::clear_map_cycle() {
  map_cycle_ = 0u;
  clear_has_map_cycle();
}
inline ::google::protobuf::uint32 CSOQuest::map_cycle() const {
  // @@protoc_insertion_point(field_get:CSOQuest.map_cycle)
  return map_cycle_;
}
inline void CSOQuest::set_map_cycle(::google::protobuf::uint32 value) {
  set_has_map_cycle();
  map_cycle_ = value;
  // @@protoc_insertion_point(field_set:CSOQuest.map_cycle)
}

// -------------------------------------------------------------------

// CSOQuestMapRewardPurchase

// optional uint32 account_id = 1;
inline bool CSOQuestMapRewardPurchase::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOQuestMapRewardPurchase::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOQuestMapRewardPurchase::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOQuestMapRewardPurchase::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOQuestMapRewardPurchase::account_id() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapRewardPurchase.account_id)
  return account_id_;
}
inline void CSOQuestMapRewardPurchase::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapRewardPurchase.account_id)
}

// optional uint32 defindex = 2;
inline bool CSOQuestMapRewardPurchase::has_defindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOQuestMapRewardPurchase::set_has_defindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOQuestMapRewardPurchase::clear_has_defindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOQuestMapRewardPurchase::clear_defindex() {
  defindex_ = 0u;
  clear_has_defindex();
}
inline ::google::protobuf::uint32 CSOQuestMapRewardPurchase::defindex() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapRewardPurchase.defindex)
  return defindex_;
}
inline void CSOQuestMapRewardPurchase::set_defindex(::google::protobuf::uint32 value) {
  set_has_defindex();
  defindex_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapRewardPurchase.defindex)
}

// optional uint32 count = 3;
inline bool CSOQuestMapRewardPurchase::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOQuestMapRewardPurchase::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOQuestMapRewardPurchase::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOQuestMapRewardPurchase::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CSOQuestMapRewardPurchase::count() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapRewardPurchase.count)
  return count_;
}
inline void CSOQuestMapRewardPurchase::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapRewardPurchase.count)
}

// optional uint32 map_cycle = 4;
inline bool CSOQuestMapRewardPurchase::has_map_cycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOQuestMapRewardPurchase::set_has_map_cycle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOQuestMapRewardPurchase::clear_has_map_cycle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOQuestMapRewardPurchase::clear_map_cycle() {
  map_cycle_ = 0u;
  clear_has_map_cycle();
}
inline ::google::protobuf::uint32 CSOQuestMapRewardPurchase::map_cycle() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapRewardPurchase.map_cycle)
  return map_cycle_;
}
inline void CSOQuestMapRewardPurchase::set_map_cycle(::google::protobuf::uint32 value) {
  set_has_map_cycle();
  map_cycle_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapRewardPurchase.map_cycle)
}

// optional uint32 purchase_id = 5;
inline bool CSOQuestMapRewardPurchase::has_purchase_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOQuestMapRewardPurchase::set_has_purchase_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOQuestMapRewardPurchase::clear_has_purchase_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOQuestMapRewardPurchase::clear_purchase_id() {
  purchase_id_ = 0u;
  clear_has_purchase_id();
}
inline ::google::protobuf::uint32 CSOQuestMapRewardPurchase::purchase_id() const {
  // @@protoc_insertion_point(field_get:CSOQuestMapRewardPurchase.purchase_id)
  return purchase_id_;
}
inline void CSOQuestMapRewardPurchase::set_purchase_id(::google::protobuf::uint32 value) {
  set_has_purchase_id();
  purchase_id_ = value;
  // @@protoc_insertion_point(field_set:CSOQuestMapRewardPurchase.purchase_id)
}

// -------------------------------------------------------------------

// CMsgGCQuestIdentify

// optional uint64 quest_id = 1;
inline bool CMsgGCQuestIdentify::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestIdentify::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestIdentify::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestIdentify::clear_quest_id() {
  quest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_quest_id();
}
inline ::google::protobuf::uint64 CMsgGCQuestIdentify::quest_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestIdentify.quest_id)
  return quest_id_;
}
inline void CMsgGCQuestIdentify::set_quest_id(::google::protobuf::uint64 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestIdentify.quest_id)
}

// -------------------------------------------------------------------

// CMsgGCQuestDevGive

// optional uint32 quest_def_index = 1;
inline bool CMsgGCQuestDevGive::has_quest_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestDevGive::set_has_quest_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestDevGive::clear_has_quest_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestDevGive::clear_quest_def_index() {
  quest_def_index_ = 0u;
  clear_has_quest_def_index();
}
inline ::google::protobuf::uint32 CMsgGCQuestDevGive::quest_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestDevGive.quest_def_index)
  return quest_def_index_;
}
inline void CMsgGCQuestDevGive::set_quest_def_index(::google::protobuf::uint32 value) {
  set_has_quest_def_index();
  quest_def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestDevGive.quest_def_index)
}

// -------------------------------------------------------------------

// CMsgGCQuestNodeTurnIn

// optional uint32 node_defindex = 1;
inline bool CMsgGCQuestNodeTurnIn::has_node_defindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestNodeTurnIn::set_has_node_defindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestNodeTurnIn::clear_has_node_defindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestNodeTurnIn::clear_node_defindex() {
  node_defindex_ = 0u;
  clear_has_node_defindex();
}
inline ::google::protobuf::uint32 CMsgGCQuestNodeTurnIn::node_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestNodeTurnIn.node_defindex)
  return node_defindex_;
}
inline void CMsgGCQuestNodeTurnIn::set_node_defindex(::google::protobuf::uint32 value) {
  set_has_node_defindex();
  node_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestNodeTurnIn.node_defindex)
}

// -------------------------------------------------------------------

// CMsgGCQuestMapUnlockNode

// optional uint32 node_defindex = 1;
inline bool CMsgGCQuestMapUnlockNode::has_node_defindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestMapUnlockNode::set_has_node_defindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestMapUnlockNode::clear_has_node_defindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestMapUnlockNode::clear_node_defindex() {
  node_defindex_ = 0u;
  clear_has_node_defindex();
}
inline ::google::protobuf::uint32 CMsgGCQuestMapUnlockNode::node_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestMapUnlockNode.node_defindex)
  return node_defindex_;
}
inline void CMsgGCQuestMapUnlockNode::set_node_defindex(::google::protobuf::uint32 value) {
  set_has_node_defindex();
  node_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestMapUnlockNode.node_defindex)
}

// optional uint32 quest_defindex = 2;
inline bool CMsgGCQuestMapUnlockNode::has_quest_defindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCQuestMapUnlockNode::set_has_quest_defindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCQuestMapUnlockNode::clear_has_quest_defindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCQuestMapUnlockNode::clear_quest_defindex() {
  quest_defindex_ = 0u;
  clear_has_quest_defindex();
}
inline ::google::protobuf::uint32 CMsgGCQuestMapUnlockNode::quest_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestMapUnlockNode.quest_defindex)
  return quest_defindex_;
}
inline void CMsgGCQuestMapUnlockNode::set_quest_defindex(::google::protobuf::uint32 value) {
  set_has_quest_defindex();
  quest_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestMapUnlockNode.quest_defindex)
}

// -------------------------------------------------------------------

// CMsgGCNewMatchForLobbyRequest

// optional uint64 current_match_id = 1;
inline bool CMsgGCNewMatchForLobbyRequest::has_current_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNewMatchForLobbyRequest::set_has_current_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_has_current_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_current_match_id() {
  current_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_current_match_id();
}
inline ::google::protobuf::uint64 CMsgGCNewMatchForLobbyRequest::current_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyRequest.current_match_id)
  return current_match_id_;
}
inline void CMsgGCNewMatchForLobbyRequest::set_current_match_id(::google::protobuf::uint64 value) {
  set_has_current_match_id();
  current_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyRequest.current_match_id)
}

// optional uint32 next_map_id = 2;
inline bool CMsgGCNewMatchForLobbyRequest::has_next_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNewMatchForLobbyRequest::set_has_next_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_has_next_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_next_map_id() {
  next_map_id_ = 0u;
  clear_has_next_map_id();
}
inline ::google::protobuf::uint32 CMsgGCNewMatchForLobbyRequest::next_map_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyRequest.next_map_id)
  return next_map_id_;
}
inline void CMsgGCNewMatchForLobbyRequest::set_next_map_id(::google::protobuf::uint32 value) {
  set_has_next_map_id();
  next_map_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyRequest.next_map_id)
}

// optional uint64 lobby_id = 3;
inline bool CMsgGCNewMatchForLobbyRequest::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNewMatchForLobbyRequest::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGCNewMatchForLobbyRequest::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyRequest.lobby_id)
  return lobby_id_;
}
inline void CMsgGCNewMatchForLobbyRequest::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyRequest.lobby_id)
}

// -------------------------------------------------------------------

// CMsgGCNewMatchForLobbyResponse

// optional bool success = 1;
inline bool CMsgGCNewMatchForLobbyResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNewMatchForLobbyResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNewMatchForLobbyResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNewMatchForLobbyResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCNewMatchForLobbyResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyResponse.success)
  return success_;
}
inline void CMsgGCNewMatchForLobbyResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCChangeMatchPlayerTeamsRequest_Member

// optional uint64 member_id = 1;
inline bool CMsgGCChangeMatchPlayerTeamsRequest_Member::has_member_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_has_member_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_has_member_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_member_id() {
  member_id_ = GOOGLE_ULONGLONG(0);
  clear_has_member_id();
}
inline ::google::protobuf::uint64 CMsgGCChangeMatchPlayerTeamsRequest_Member::member_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.Member.member_id)
  return member_id_;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_member_id(::google::protobuf::uint64 value) {
  set_has_member_id();
  member_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.Member.member_id)
}

// optional .TF_GC_TEAM new_team = 2 [default = TF_GC_TEAM_NOTEAM];
inline bool CMsgGCChangeMatchPlayerTeamsRequest_Member::has_new_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_has_new_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_has_new_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_new_team() {
  new_team_ = 5;
  clear_has_new_team();
}
inline ::TF_GC_TEAM CMsgGCChangeMatchPlayerTeamsRequest_Member::new_team() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.Member.new_team)
  return static_cast< ::TF_GC_TEAM >(new_team_);
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_new_team(::TF_GC_TEAM value) {
  assert(::TF_GC_TEAM_IsValid(value));
  set_has_new_team();
  new_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.Member.new_team)
}

// -------------------------------------------------------------------

// CMsgGCChangeMatchPlayerTeamsRequest

// optional uint64 match_id = 1;
inline bool CMsgGCChangeMatchPlayerTeamsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCChangeMatchPlayerTeamsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.match_id)
  return match_id_;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.match_id)
}

// optional uint64 lobby_id = 2;
inline bool CMsgGCChangeMatchPlayerTeamsRequest::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGCChangeMatchPlayerTeamsRequest::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.lobby_id)
  return lobby_id_;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.lobby_id)
}

// repeated .CMsgGCChangeMatchPlayerTeamsRequest.Member member = 3;
inline int CMsgGCChangeMatchPlayerTeamsRequest::member_size() const {
  return member_.size();
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_member() {
  member_.Clear();
}
inline const ::CMsgGCChangeMatchPlayerTeamsRequest_Member& CMsgGCChangeMatchPlayerTeamsRequest::member(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_.Get(index);
}
inline ::CMsgGCChangeMatchPlayerTeamsRequest_Member* CMsgGCChangeMatchPlayerTeamsRequest::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_.Mutable(index);
}
inline ::CMsgGCChangeMatchPlayerTeamsRequest_Member* CMsgGCChangeMatchPlayerTeamsRequest::add_member() {
  // @@protoc_insertion_point(field_add:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >&
CMsgGCChangeMatchPlayerTeamsRequest::member() const {
  // @@protoc_insertion_point(field_list:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >*
CMsgGCChangeMatchPlayerTeamsRequest::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return &member_;
}

// -------------------------------------------------------------------

// CMsgGCChangeMatchPlayerTeamsResponse

// optional bool success = 1;
inline bool CMsgGCChangeMatchPlayerTeamsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCChangeMatchPlayerTeamsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsResponse.success)
  return success_;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCQuestComplete_Debug

// optional uint64 quest_id = 1;
inline bool CMsgGCQuestComplete_Debug::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestComplete_Debug::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestComplete_Debug::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestComplete_Debug::clear_quest_id() {
  quest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_quest_id();
}
inline ::google::protobuf::uint64 CMsgGCQuestComplete_Debug::quest_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestComplete_Debug.quest_id)
  return quest_id_;
}
inline void CMsgGCQuestComplete_Debug::set_quest_id(::google::protobuf::uint64 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestComplete_Debug.quest_id)
}

// optional uint32 points_type = 2;
inline bool CMsgGCQuestComplete_Debug::has_points_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCQuestComplete_Debug::set_has_points_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCQuestComplete_Debug::clear_has_points_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCQuestComplete_Debug::clear_points_type() {
  points_type_ = 0u;
  clear_has_points_type();
}
inline ::google::protobuf::uint32 CMsgGCQuestComplete_Debug::points_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestComplete_Debug.points_type)
  return points_type_;
}
inline void CMsgGCQuestComplete_Debug::set_points_type(::google::protobuf::uint32 value) {
  set_has_points_type();
  points_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestComplete_Debug.points_type)
}

// -------------------------------------------------------------------

// CMsgGCQuestMap_Debug

// optional uint32 reset_operation = 1;
inline bool CMsgGCQuestMap_Debug::has_reset_operation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestMap_Debug::set_has_reset_operation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestMap_Debug::clear_has_reset_operation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestMap_Debug::clear_reset_operation() {
  reset_operation_ = 0u;
  clear_has_reset_operation();
}
inline ::google::protobuf::uint32 CMsgGCQuestMap_Debug::reset_operation() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestMap_Debug.reset_operation)
  return reset_operation_;
}
inline void CMsgGCQuestMap_Debug::set_reset_operation(::google::protobuf::uint32 value) {
  set_has_reset_operation();
  reset_operation_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestMap_Debug.reset_operation)
}

// optional uint32 give_credit = 2;
inline bool CMsgGCQuestMap_Debug::has_give_credit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCQuestMap_Debug::set_has_give_credit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCQuestMap_Debug::clear_has_give_credit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCQuestMap_Debug::clear_give_credit() {
  give_credit_ = 0u;
  clear_has_give_credit();
}
inline ::google::protobuf::uint32 CMsgGCQuestMap_Debug::give_credit() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestMap_Debug.give_credit)
  return give_credit_;
}
inline void CMsgGCQuestMap_Debug::set_give_credit(::google::protobuf::uint32 value) {
  set_has_give_credit();
  give_credit_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestMap_Debug.give_credit)
}

// optional .CMsgGCQuestMapUnlockNode unlock_node = 3;
inline bool CMsgGCQuestMap_Debug::has_unlock_node() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCQuestMap_Debug::set_has_unlock_node() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCQuestMap_Debug::clear_has_unlock_node() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCQuestMap_Debug::clear_unlock_node() {
  if (unlock_node_ != NULL) unlock_node_->::CMsgGCQuestMapUnlockNode::Clear();
  clear_has_unlock_node();
}
inline const ::CMsgGCQuestMapUnlockNode& CMsgGCQuestMap_Debug::unlock_node() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestMap_Debug.unlock_node)
  return unlock_node_ != NULL ? *unlock_node_ : *default_instance_->unlock_node_;
}
inline ::CMsgGCQuestMapUnlockNode* CMsgGCQuestMap_Debug::mutable_unlock_node() {
  set_has_unlock_node();
  if (unlock_node_ == NULL) unlock_node_ = new ::CMsgGCQuestMapUnlockNode;
  // @@protoc_insertion_point(field_mutable:CMsgGCQuestMap_Debug.unlock_node)
  return unlock_node_;
}
inline ::CMsgGCQuestMapUnlockNode* CMsgGCQuestMap_Debug::release_unlock_node() {
  clear_has_unlock_node();
  ::CMsgGCQuestMapUnlockNode* temp = unlock_node_;
  unlock_node_ = NULL;
  return temp;
}
inline void CMsgGCQuestMap_Debug::set_allocated_unlock_node(::CMsgGCQuestMapUnlockNode* unlock_node) {
  delete unlock_node_;
  unlock_node_ = unlock_node;
  if (unlock_node) {
    set_has_unlock_node();
  } else {
    clear_has_unlock_node();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCQuestMap_Debug.unlock_node)
}

// -------------------------------------------------------------------

// CMsgGCQuestMapPurchaseReward

// optional uint32 store_item_defindex = 1;
inline bool CMsgGCQuestMapPurchaseReward::has_store_item_defindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestMapPurchaseReward::set_has_store_item_defindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestMapPurchaseReward::clear_has_store_item_defindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestMapPurchaseReward::clear_store_item_defindex() {
  store_item_defindex_ = 0u;
  clear_has_store_item_defindex();
}
inline ::google::protobuf::uint32 CMsgGCQuestMapPurchaseReward::store_item_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestMapPurchaseReward.store_item_defindex)
  return store_item_defindex_;
}
inline void CMsgGCQuestMapPurchaseReward::set_store_item_defindex(::google::protobuf::uint32 value) {
  set_has_store_item_defindex();
  store_item_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestMapPurchaseReward.store_item_defindex)
}

// -------------------------------------------------------------------

// CMsgGCQuestResponse

// optional bool success = 1 [default = false];
inline bool CMsgGCQuestResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCQuestResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCQuestResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCQuestResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCQuestResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCQuestResponse.success)
  return success_;
}
inline void CMsgGCQuestResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCQuestResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCSetDisablePartyQuestProgress

// optional bool state = 1;
inline bool CMsgGCSetDisablePartyQuestProgress::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSetDisablePartyQuestProgress::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSetDisablePartyQuestProgress::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSetDisablePartyQuestProgress::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool CMsgGCSetDisablePartyQuestProgress::state() const {
  // @@protoc_insertion_point(field_get:CMsgGCSetDisablePartyQuestProgress.state)
  return state_;
}
inline void CMsgGCSetDisablePartyQuestProgress::set_state(bool value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSetDisablePartyQuestProgress.state)
}

// -------------------------------------------------------------------

// CMsgQuestProgressReport

// optional uint64 quest_id = 1;
inline bool CMsgQuestProgressReport::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgQuestProgressReport::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgQuestProgressReport::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgQuestProgressReport::clear_quest_id() {
  quest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_quest_id();
}
inline ::google::protobuf::uint64 CMsgQuestProgressReport::quest_id() const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.quest_id)
  return quest_id_;
}
inline void CMsgQuestProgressReport::set_quest_id(::google::protobuf::uint64 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.quest_id)
}

// optional bool star_0_earned = 2;
inline bool CMsgQuestProgressReport::has_star_0_earned() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgQuestProgressReport::set_has_star_0_earned() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgQuestProgressReport::clear_has_star_0_earned() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgQuestProgressReport::clear_star_0_earned() {
  star_0_earned_ = false;
  clear_has_star_0_earned();
}
inline bool CMsgQuestProgressReport::star_0_earned() const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.star_0_earned)
  return star_0_earned_;
}
inline void CMsgQuestProgressReport::set_star_0_earned(bool value) {
  set_has_star_0_earned();
  star_0_earned_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.star_0_earned)
}

// optional bool star_1_earned = 3;
inline bool CMsgQuestProgressReport::has_star_1_earned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgQuestProgressReport::set_has_star_1_earned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgQuestProgressReport::clear_has_star_1_earned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgQuestProgressReport::clear_star_1_earned() {
  star_1_earned_ = false;
  clear_has_star_1_earned();
}
inline bool CMsgQuestProgressReport::star_1_earned() const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.star_1_earned)
  return star_1_earned_;
}
inline void CMsgQuestProgressReport::set_star_1_earned(bool value) {
  set_has_star_1_earned();
  star_1_earned_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.star_1_earned)
}

// optional bool star_2_earned = 4;
inline bool CMsgQuestProgressReport::has_star_2_earned() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgQuestProgressReport::set_has_star_2_earned() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgQuestProgressReport::clear_has_star_2_earned() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgQuestProgressReport::clear_star_2_earned() {
  star_2_earned_ = false;
  clear_has_star_2_earned();
}
inline bool CMsgQuestProgressReport::star_2_earned() const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.star_2_earned)
  return star_2_earned_;
}
inline void CMsgQuestProgressReport::set_star_2_earned(bool value) {
  set_has_star_2_earned();
  star_2_earned_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.star_2_earned)
}

// repeated uint64 items_earned = 5;
inline int CMsgQuestProgressReport::items_earned_size() const {
  return items_earned_.size();
}
inline void CMsgQuestProgressReport::clear_items_earned() {
  items_earned_.Clear();
}
inline ::google::protobuf::uint64 CMsgQuestProgressReport::items_earned(int index) const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.items_earned)
  return items_earned_.Get(index);
}
inline void CMsgQuestProgressReport::set_items_earned(int index, ::google::protobuf::uint64 value) {
  items_earned_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.items_earned)
}
inline void CMsgQuestProgressReport::add_items_earned(::google::protobuf::uint64 value) {
  items_earned_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgQuestProgressReport.items_earned)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgQuestProgressReport::items_earned() const {
  // @@protoc_insertion_point(field_list:CMsgQuestProgressReport.items_earned)
  return items_earned_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgQuestProgressReport::mutable_items_earned() {
  // @@protoc_insertion_point(field_mutable_list:CMsgQuestProgressReport.items_earned)
  return &items_earned_;
}

// optional uint32 reward_credits_earned = 6;
inline bool CMsgQuestProgressReport::has_reward_credits_earned() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgQuestProgressReport::set_has_reward_credits_earned() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgQuestProgressReport::clear_has_reward_credits_earned() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgQuestProgressReport::clear_reward_credits_earned() {
  reward_credits_earned_ = 0u;
  clear_has_reward_credits_earned();
}
inline ::google::protobuf::uint32 CMsgQuestProgressReport::reward_credits_earned() const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.reward_credits_earned)
  return reward_credits_earned_;
}
inline void CMsgQuestProgressReport::set_reward_credits_earned(::google::protobuf::uint32 value) {
  set_has_reward_credits_earned();
  reward_credits_earned_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.reward_credits_earned)
}

// optional bool contract_completed = 7;
inline bool CMsgQuestProgressReport::has_contract_completed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgQuestProgressReport::set_has_contract_completed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgQuestProgressReport::clear_has_contract_completed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgQuestProgressReport::clear_contract_completed() {
  contract_completed_ = false;
  clear_has_contract_completed();
}
inline bool CMsgQuestProgressReport::contract_completed() const {
  // @@protoc_insertion_point(field_get:CMsgQuestProgressReport.contract_completed)
  return contract_completed_;
}
inline void CMsgQuestProgressReport::set_contract_completed(bool value) {
  set_has_contract_completed();
  contract_completed_ = value;
  // @@protoc_insertion_point(field_set:CMsgQuestProgressReport.contract_completed)
}

// -------------------------------------------------------------------

// CMsgConsumePaintkit

// optional fixed64 source_id = 1;
inline bool CMsgConsumePaintkit::has_source_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConsumePaintkit::set_has_source_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgConsumePaintkit::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgConsumePaintkit::clear_source_id() {
  source_id_ = GOOGLE_ULONGLONG(0);
  clear_has_source_id();
}
inline ::google::protobuf::uint64 CMsgConsumePaintkit::source_id() const {
  // @@protoc_insertion_point(field_get:CMsgConsumePaintkit.source_id)
  return source_id_;
}
inline void CMsgConsumePaintkit::set_source_id(::google::protobuf::uint64 value) {
  set_has_source_id();
  source_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgConsumePaintkit.source_id)
}

// optional uint32 target_defindex = 2;
inline bool CMsgConsumePaintkit::has_target_defindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConsumePaintkit::set_has_target_defindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgConsumePaintkit::clear_has_target_defindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgConsumePaintkit::clear_target_defindex() {
  target_defindex_ = 0u;
  clear_has_target_defindex();
}
inline ::google::protobuf::uint32 CMsgConsumePaintkit::target_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgConsumePaintkit.target_defindex)
  return target_defindex_;
}
inline void CMsgConsumePaintkit::set_target_defindex(::google::protobuf::uint32 value) {
  set_has_target_defindex();
  target_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgConsumePaintkit.target_defindex)
}

// -------------------------------------------------------------------

// CMsgPainkitDevGrant

// optional uint32 paintkit_defindex = 1;
inline bool CMsgPainkitDevGrant::has_paintkit_defindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPainkitDevGrant::set_has_paintkit_defindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPainkitDevGrant::clear_has_paintkit_defindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPainkitDevGrant::clear_paintkit_defindex() {
  paintkit_defindex_ = 0u;
  clear_has_paintkit_defindex();
}
inline ::google::protobuf::uint32 CMsgPainkitDevGrant::paintkit_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgPainkitDevGrant.paintkit_defindex)
  return paintkit_defindex_;
}
inline void CMsgPainkitDevGrant::set_paintkit_defindex(::google::protobuf::uint32 value) {
  set_has_paintkit_defindex();
  paintkit_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgPainkitDevGrant.paintkit_defindex)
}

// optional float wear = 2;
inline bool CMsgPainkitDevGrant::has_wear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPainkitDevGrant::set_has_wear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPainkitDevGrant::clear_has_wear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPainkitDevGrant::clear_wear() {
  wear_ = 0;
  clear_has_wear();
}
inline float CMsgPainkitDevGrant::wear() const {
  // @@protoc_insertion_point(field_get:CMsgPainkitDevGrant.wear)
  return wear_;
}
inline void CMsgPainkitDevGrant::set_wear(float value) {
  set_has_wear();
  wear_ = value;
  // @@protoc_insertion_point(field_set:CMsgPainkitDevGrant.wear)
}

// optional uint32 item_defindex = 3;
inline bool CMsgPainkitDevGrant::has_item_defindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPainkitDevGrant::set_has_item_defindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPainkitDevGrant::clear_has_item_defindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPainkitDevGrant::clear_item_defindex() {
  item_defindex_ = 0u;
  clear_has_item_defindex();
}
inline ::google::protobuf::uint32 CMsgPainkitDevGrant::item_defindex() const {
  // @@protoc_insertion_point(field_get:CMsgPainkitDevGrant.item_defindex)
  return item_defindex_;
}
inline void CMsgPainkitDevGrant::set_item_defindex(::google::protobuf::uint32 value) {
  set_has_item_defindex();
  item_defindex_ = value;
  // @@protoc_insertion_point(field_set:CMsgPainkitDevGrant.item_defindex)
}

// -------------------------------------------------------------------

// GCQuestStrangeEvent

// optional uint32 owner_account_id = 1;
inline bool GCQuestStrangeEvent::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCQuestStrangeEvent::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCQuestStrangeEvent::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCQuestStrangeEvent::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
inline ::google::protobuf::uint32 GCQuestStrangeEvent::owner_account_id() const {
  // @@protoc_insertion_point(field_get:GCQuestStrangeEvent.owner_account_id)
  return owner_account_id_;
}
inline void GCQuestStrangeEvent::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:GCQuestStrangeEvent.owner_account_id)
}

// optional uint32 scorer_account_id = 2;
inline bool GCQuestStrangeEvent::has_scorer_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCQuestStrangeEvent::set_has_scorer_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCQuestStrangeEvent::clear_has_scorer_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCQuestStrangeEvent::clear_scorer_account_id() {
  scorer_account_id_ = 0u;
  clear_has_scorer_account_id();
}
inline ::google::protobuf::uint32 GCQuestStrangeEvent::scorer_account_id() const {
  // @@protoc_insertion_point(field_get:GCQuestStrangeEvent.scorer_account_id)
  return scorer_account_id_;
}
inline void GCQuestStrangeEvent::set_scorer_account_id(::google::protobuf::uint32 value) {
  set_has_scorer_account_id();
  scorer_account_id_ = value;
  // @@protoc_insertion_point(field_set:GCQuestStrangeEvent.scorer_account_id)
}

// optional uint64 quest_id = 3;
inline bool GCQuestStrangeEvent::has_quest_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCQuestStrangeEvent::set_has_quest_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCQuestStrangeEvent::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCQuestStrangeEvent::clear_quest_id() {
  quest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_quest_id();
}
inline ::google::protobuf::uint64 GCQuestStrangeEvent::quest_id() const {
  // @@protoc_insertion_point(field_get:GCQuestStrangeEvent.quest_id)
  return quest_id_;
}
inline void GCQuestStrangeEvent::set_quest_id(::google::protobuf::uint64 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:GCQuestStrangeEvent.quest_id)
}

// optional uint32 strange_event_id = 4;
inline bool GCQuestStrangeEvent::has_strange_event_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GCQuestStrangeEvent::set_has_strange_event_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GCQuestStrangeEvent::clear_has_strange_event_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GCQuestStrangeEvent::clear_strange_event_id() {
  strange_event_id_ = 0u;
  clear_has_strange_event_id();
}
inline ::google::protobuf::uint32 GCQuestStrangeEvent::strange_event_id() const {
  // @@protoc_insertion_point(field_get:GCQuestStrangeEvent.strange_event_id)
  return strange_event_id_;
}
inline void GCQuestStrangeEvent::set_strange_event_id(::google::protobuf::uint32 value) {
  set_has_strange_event_id();
  strange_event_id_ = value;
  // @@protoc_insertion_point(field_set:GCQuestStrangeEvent.strange_event_id)
}

// optional uint32 score = 5;
inline bool GCQuestStrangeEvent::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GCQuestStrangeEvent::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GCQuestStrangeEvent::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GCQuestStrangeEvent::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GCQuestStrangeEvent::score() const {
  // @@protoc_insertion_point(field_get:GCQuestStrangeEvent.score)
  return score_;
}
inline void GCQuestStrangeEvent::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:GCQuestStrangeEvent.score)
}

// -------------------------------------------------------------------

// CMsgSDRTicket

// optional bytes serialized_ticket = 1;
inline bool CMsgSDRTicket::has_serialized_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSDRTicket::set_has_serialized_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSDRTicket::clear_has_serialized_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSDRTicket::clear_serialized_ticket() {
  if (serialized_ticket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serialized_ticket_->clear();
  }
  clear_has_serialized_ticket();
}
inline const ::std::string& CMsgSDRTicket::serialized_ticket() const {
  // @@protoc_insertion_point(field_get:CMsgSDRTicket.serialized_ticket)
  return *serialized_ticket_;
}
inline void CMsgSDRTicket::set_serialized_ticket(const ::std::string& value) {
  set_has_serialized_ticket();
  if (serialized_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serialized_ticket_ = new ::std::string;
  }
  serialized_ticket_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgSDRTicket.serialized_ticket)
}
inline void CMsgSDRTicket::set_serialized_ticket(const char* value) {
  set_has_serialized_ticket();
  if (serialized_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serialized_ticket_ = new ::std::string;
  }
  serialized_ticket_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSDRTicket.serialized_ticket)
}
inline void CMsgSDRTicket::set_serialized_ticket(const void* value, size_t size) {
  set_has_serialized_ticket();
  if (serialized_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serialized_ticket_ = new ::std::string;
  }
  serialized_ticket_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSDRTicket.serialized_ticket)
}
inline ::std::string* CMsgSDRTicket::mutable_serialized_ticket() {
  set_has_serialized_ticket();
  if (serialized_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serialized_ticket_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSDRTicket.serialized_ticket)
  return serialized_ticket_;
}
inline ::std::string* CMsgSDRTicket::release_serialized_ticket() {
  clear_has_serialized_ticket();
  if (serialized_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serialized_ticket_;
    serialized_ticket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgSDRTicket::set_allocated_serialized_ticket(::std::string* serialized_ticket) {
  if (serialized_ticket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serialized_ticket_;
  }
  if (serialized_ticket) {
    set_has_serialized_ticket();
    serialized_ticket_ = serialized_ticket;
  } else {
    clear_has_serialized_ticket();
    serialized_ticket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgSDRTicket.serialized_ticket)
}

// -------------------------------------------------------------------

// CMsgAuthorizeServerItemRetrieval

// repeated uint64 item_id = 1;
inline int CMsgAuthorizeServerItemRetrieval::item_id_size() const {
  return item_id_.size();
}
inline void CMsgAuthorizeServerItemRetrieval::clear_item_id() {
  item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgAuthorizeServerItemRetrieval::item_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAuthorizeServerItemRetrieval.item_id)
  return item_id_.Get(index);
}
inline void CMsgAuthorizeServerItemRetrieval::set_item_id(int index, ::google::protobuf::uint64 value) {
  item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAuthorizeServerItemRetrieval.item_id)
}
inline void CMsgAuthorizeServerItemRetrieval::add_item_id(::google::protobuf::uint64 value) {
  item_id_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgAuthorizeServerItemRetrieval.item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgAuthorizeServerItemRetrieval::item_id() const {
  // @@protoc_insertion_point(field_list:CMsgAuthorizeServerItemRetrieval.item_id)
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgAuthorizeServerItemRetrieval::mutable_item_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAuthorizeServerItemRetrieval.item_id)
  return &item_id_;
}

// -------------------------------------------------------------------

// CMsgGCToGCSendAccountBannedNotifications

// optional uint32 banned_accountid = 1;
inline bool CMsgGCToGCSendAccountBannedNotifications::has_banned_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSendAccountBannedNotifications::set_has_banned_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSendAccountBannedNotifications::clear_has_banned_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSendAccountBannedNotifications::clear_banned_accountid() {
  banned_accountid_ = 0u;
  clear_has_banned_accountid();
}
inline ::google::protobuf::uint32 CMsgGCToGCSendAccountBannedNotifications::banned_accountid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSendAccountBannedNotifications.banned_accountid)
  return banned_accountid_;
}
inline void CMsgGCToGCSendAccountBannedNotifications::set_banned_accountid(::google::protobuf::uint32 value) {
  set_has_banned_accountid();
  banned_accountid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSendAccountBannedNotifications.banned_accountid)
}

// optional uint32 report_period_begin = 2;
inline bool CMsgGCToGCSendAccountBannedNotifications::has_report_period_begin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSendAccountBannedNotifications::set_has_report_period_begin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSendAccountBannedNotifications::clear_has_report_period_begin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSendAccountBannedNotifications::clear_report_period_begin() {
  report_period_begin_ = 0u;
  clear_has_report_period_begin();
}
inline ::google::protobuf::uint32 CMsgGCToGCSendAccountBannedNotifications::report_period_begin() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSendAccountBannedNotifications.report_period_begin)
  return report_period_begin_;
}
inline void CMsgGCToGCSendAccountBannedNotifications::set_report_period_begin(::google::protobuf::uint32 value) {
  set_has_report_period_begin();
  report_period_begin_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSendAccountBannedNotifications.report_period_begin)
}

// optional uint32 report_period_end = 3;
inline bool CMsgGCToGCSendAccountBannedNotifications::has_report_period_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToGCSendAccountBannedNotifications::set_has_report_period_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToGCSendAccountBannedNotifications::clear_has_report_period_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToGCSendAccountBannedNotifications::clear_report_period_end() {
  report_period_end_ = 0u;
  clear_has_report_period_end();
}
inline ::google::protobuf::uint32 CMsgGCToGCSendAccountBannedNotifications::report_period_end() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSendAccountBannedNotifications.report_period_end)
  return report_period_end_;
}
inline void CMsgGCToGCSendAccountBannedNotifications::set_report_period_end(::google::protobuf::uint32 value) {
  set_has_report_period_end();
  report_period_end_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSendAccountBannedNotifications.report_period_end)
}

// -------------------------------------------------------------------

// CMsgGCToGCSendNotification

// optional .CMsgGCNotification notification = 1;
inline bool CMsgGCToGCSendNotification::has_notification() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSendNotification::set_has_notification() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSendNotification::clear_has_notification() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSendNotification::clear_notification() {
  if (notification_ != NULL) notification_->::CMsgGCNotification::Clear();
  clear_has_notification();
}
inline const ::CMsgGCNotification& CMsgGCToGCSendNotification::notification() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSendNotification.notification)
  return notification_ != NULL ? *notification_ : *default_instance_->notification_;
}
inline ::CMsgGCNotification* CMsgGCToGCSendNotification::mutable_notification() {
  set_has_notification();
  if (notification_ == NULL) notification_ = new ::CMsgGCNotification;
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCSendNotification.notification)
  return notification_;
}
inline ::CMsgGCNotification* CMsgGCToGCSendNotification::release_notification() {
  clear_has_notification();
  ::CMsgGCNotification* temp = notification_;
  notification_ = NULL;
  return temp;
}
inline void CMsgGCToGCSendNotification::set_allocated_notification(::CMsgGCNotification* notification) {
  delete notification_;
  notification_ = notification;
  if (notification) {
    set_has_notification();
  } else {
    clear_has_notification();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCSendNotification.notification)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus>() {
  return ::CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>() {
  return ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>() {
  return ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
}
template <> struct is_proto_enum< ::TFPendingPartyMember_EType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TFPendingPartyMember_EType>() {
  return ::TFPendingPartyMember_EType_descriptor();
}
template <> struct is_proto_enum< ::CMsgPartyMMError_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgPartyMMError_Type>() {
  return ::CMsgPartyMMError_Type_descriptor();
}
template <> struct is_proto_enum< ::CSOTFPartyInvite_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFPartyInvite_Type>() {
  return ::CSOTFPartyInvite_Type_descriptor();
}
template <> struct is_proto_enum< ::CTFLobbyPlayerProto_ConnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CTFLobbyPlayerProto_ConnectState>() {
  return ::CTFLobbyPlayerProto_ConnectState_descriptor();
}
template <> struct is_proto_enum< ::CTFLobbyPlayerProto_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CTFLobbyPlayerProto_Type>() {
  return ::CTFLobbyPlayerProto_Type_descriptor();
}
template <> struct is_proto_enum< ::CSOTFGameServerLobby_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFGameServerLobby_State>() {
  return ::CSOTFGameServerLobby_State_descriptor();
}
template <> struct is_proto_enum< ::CSOTFGameServerLobby_WarMatch> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFGameServerLobby_WarMatch>() {
  return ::CSOTFGameServerLobby_WarMatch_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerMatchmakingStatus_PlayerConnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_PlayerConnectState>() {
  return ::CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerMatchmakingStatus_Event> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_Event>() {
  return ::CMsgGameServerMatchmakingStatus_Event_descriptor();
}
template <> struct is_proto_enum< ::CMsgMvMVictoryInfo_GrantReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMvMVictoryInfo_GrantReason>() {
  return ::CMsgMvMVictoryInfo_GrantReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgTFXPSource_XPSourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgTFXPSource_XPSourceType>() {
  return ::CMsgTFXPSource_XPSourceType_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCNotification_NotificationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCNotification_NotificationType>() {
  return ::CMsgGCNotification_NotificationType_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_Match_Result_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Match_Result_Status>() {
  return ::CMsgGC_Match_Result_Status_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_ReportPlayer_EReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_ReportPlayer_EReason>() {
  return ::CMsgGC_ReportPlayer_EReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCDataCenterPing_Update_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCDataCenterPing_Update_Status>() {
  return ::CMsgGCDataCenterPing_Update_Status_descriptor();
}
template <> struct is_proto_enum< ::ETFGCMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETFGCMsg>() {
  return ::ETFGCMsg_descriptor();
}
template <> struct is_proto_enum< ::EServerModificationItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EServerModificationItemType>() {
  return ::EServerModificationItemType_descriptor();
}
template <> struct is_proto_enum< ::ETFSyncedMMMenuStep> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETFSyncedMMMenuStep>() {
  return ::ETFSyncedMMMenuStep_descriptor();
}
template <> struct is_proto_enum< ::ETFMatchGroup> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETFMatchGroup>() {
  return ::ETFMatchGroup_descriptor();
}
template <> struct is_proto_enum< ::ETFPartyChatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETFPartyChatType>() {
  return ::ETFPartyChatType_descriptor();
}
template <> struct is_proto_enum< ::TF_GC_GameState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_GC_GameState>() {
  return ::TF_GC_GameState_descriptor();
}
template <> struct is_proto_enum< ::TF_GC_TEAM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_GC_TEAM>() {
  return ::TF_GC_TEAM_descriptor();
}
template <> struct is_proto_enum< ::TFMatchLeaveReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TFMatchLeaveReason>() {
  return ::TFMatchLeaveReason_descriptor();
}
template <> struct is_proto_enum< ::TFVoteKickReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TFVoteKickReason>() {
  return ::TFVoteKickReason_descriptor();
}
template <> struct is_proto_enum< ::ServerMatchmakingState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerMatchmakingState>() {
  return ::ServerMatchmakingState_descriptor();
}
template <> struct is_proto_enum< ::SurveyQuestionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SurveyQuestionType>() {
  return ::SurveyQuestionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

// VALVE
#if _MSC_VER >= 1300
#pragma warning( pop )
#endif // _MSC_VER
#if _GNUC
#pragma GCC diagnostic pop
#endif // _GNUC

// VALVE

// VALVE
#if _MSC_VER >= 1300
#pragma warning( pop )
#endif // _MSC_VER
#if _GNUC
#pragma GCC diagnostic pop
#endif // _GNUC

// VALVE

// VALVE
#if _MSC_VER >= 1300
#pragma warning( pop )
#endif // _MSC_VER
#if _GNUC
#pragma GCC diagnostic pop
#endif // _GNUC

// VALVE

#endif  // PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
